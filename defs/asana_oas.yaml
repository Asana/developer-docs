---
openapi: 3.0.0
info:
  description: >-
    This is the interface for interacting with the [Asana
    Platform](https://developers.asana.com). Our API reference
    is generated from our [OpenAPI spec]
    (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
  x-public-description: >-
    This is the interface for interacting with the [Asana
    Platform](https://developers.asana.com). Our API reference
    is generated from our [OpenAPI spec]
    (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
  title: Asana
  termsOfService: https://asana.com/terms
  contact:
    name: Asana Support
    url: https://asana.com/support
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  version: '1.0'
servers:
  - url: https://app.asana.com/api/1.0
    description: Main endpoint.
security:
  - personalAccessToken: []
  - oauth2: []
tags:
  - name: Attachments
    description: >-
      An *attachment* object represents any file attached to a task in Asana,
      whether it’s an uploaded file or one associated via a third-party service
      such as Dropbox or Google Drive.
  - name: Batch API
    description: >-
      There are many cases where you want to accomplish a variety of work in
      the Asana API but want to minimize the number of HTTP requests you make.
      For example:


      * Modern browsers limit the number of requests that a single web page can
        make at once.
      * Mobile apps will use more battery life to keep the cellular radio on
        when making a series of requests.
      * There is an overhead cost to developing software that can make multiple
        requests in parallel.
      * Some cloud platforms handle parallelism poorly, or disallow it
        entirely.


      To make development easier in these use cases, Asana provides a **batch
      API** that enables developers to perform multiple “actions” by making
      only a single HTTP request.


      #### Making a Batch Request


      To make a batch request, send a `POST` request to `/batch`. Like other
      `POST` endpoints, the body should contain a `data` envelope. Inside this
      envelope should be a single `actions` field, containing a list of
      “action” objects.  Each action represents a standard request to an
      existing endpoint in the Asana API.


      **The maximum number of actions allowed in a single batch request is 10**.
      Making a batch request with no actions in it will result in a `400 Bad
      Request`.


      When the batch API receives the list of actions to execute, it will
      dispatch those actions to the already-implemented endpoints specified by
      the `relative_path` and `method` for each action. This happens in
      parallel, so all actions in the request will be processed simultaneously.
      There is no guarantee of the execution order for these actions, nor is
      there a way to use the output of one action as the input of another
      action (such as creating a task and then commenting on it).


      The response to the batch request will contain (within the `data`
      envelope) a list of result objects, one for each action. The results are
      guaranteed to be in the same order as the actions in the request, e.g.,
      the first result in the response corresponds to the first action in the
      request.


      The batch API will always attempt to return a `200 Success` response with
      individual result objects for each individual action in the request. Only
      in certain cases (such as missing authorization or malformed JSON in the
      body) will the entire request fail with another status code. Even if
      every individual action in the request fails, the batch API will still
      return a `200 Success` response, and each result object in the response
      will contain the errors encountered with each action.


      #### Rate Limiting


      The batch API fully respects all of our rate limiting. This means that a
      batch request counts against *both* the standard rate limiter and the
      concurrent request limiter as though you had made a separate HTTP request
      for every individual action. For example, a batch request with five
      actions counts as five separate requests in the standard rate limiter,
      and counts as five concurrent requests in the concurrent request limiter.
      The batch request itself incurs no cost.


      If any of the actions in a batch request would exceed any of the enforced
      limits, the *entire* request will fail with a `429 Too Many Requests`
      error. This is to prevent the unpredictability of which actions might
      succeed if not all of them could succeed.


      #### Restrictions


      Not every endpoint can be accessed through the batch API.
      Specifically, the following actions cannot be taken and will result in a
      `400 Bad Request` for that action:


      * Uploading attachments

      * Creating, getting, or deleting organization exports

      * Any SCIM operations

      * Nested calls to the batch API
  - name: Custom Fields
    description: >-
      In the Asana application, Tasks can hold user-specified Custom Fields
      which provide extra information; for example, a priority value or a number
      representing the time required to complete a Task. This lets a user define
      the type of information that each Task within a Project can contain in
      addition to the built-in fields that Asana provides.


      **Note:** Custom Fields are a premium feature. Integrations which work
      with Custom Fields need to handle an assortment of use cases for free and
      premium users in context of free and premium organizations. For a detailed
      examination of to what data users will have access in different
      circumstances, read the section below on
      [access control](#access-control).


      The characteristics of Custom Fields are:


      * There is metadata that defines the Custom Field. This metadata is shared
      across an entire organization or workspace.
      * Projects can have Custom Fields associated with them individually. This
      is conceptually akin to adding columns in a database or a spreadsheet:
      every Task (row) in the Project (table) can contain information for that
      field, including "blank" values, i.e. `null` data.
      * Tasks have Custom Field _values_ assigned to them.


      A brief example: let's imagine that an organization has defined a Custom
      Field for "Priority". This field is of `enum` type and can have
      user-defined values of `Low`, `Medium`, or `High`. This is the field
      metadata, and it is visible within, and shared across, the entire
      organization.


      A Project is then created in the organization, called "Bugs", and the
      "Priority" Custom Field is associated with that Project. This will allow
      all Tasks within the "Bugs" Project to have an associated "Priority".


      A new Task is created within "Bugs". This Task, then, has a field named
      "Priority" which can take on the Custom Field value of one of `[null]`,
      `Low`, `Medium`, and `High`.


      These Custom Fields are accessible via the API through a number of
      endpoints at the top level (e.g. `/custom_fields` and
      `/custom_field_settings`) and through calls on Workspaces, Projects, and
      Tasks resources. The API also provides a way to fetch both the metadata
      and data which define each particular Custom Field, so that a client
      application may render proper UI to display or edit the values.


      Custom Field aware integrations need to be aware of the basic types that
      Custom Fields can adopt. These types are:


      * `text` - an arbitrary, relatively short string of text
      * `number` - a number with a defined level of precision
      * `enum` - a selection from a defined list of options


      Text fields are currently limited to 1024 characters. On Tasks, their
      Custom Field value will have a `text_value` property to represent this
      field.


      Number fields can have an arbitrary `precision` associated with them; for
      example, a precision of `2` would round its value to the second
      (hundredths) place, i.e. 1.2345 would round to 1.23. On Tasks, the Custom
      Field value will have a `number_value` property to represent this field.


      Enum fields represent a selection from a list of options. On the metadata,
      they will contain all of the options in an array. Each option has 4
      properties:


      * `id` - the id of this enum option. Note that this is the id of the
      _option_ - the Custom Field itself has a separate `id`.
      * `name` - the name of the option, e.g. "Choice #1"
      * `enabled` - whether this field is enabled. Disabled fields are not
      available to choose from when disabled, and are visually hidden in the
      Asana application, but they remain in the metadata for Custom Field values
      which were set to the option before the option was disabled.
      * `color` - a color associated with this choice.


      On the Task's Custom Field value, the enum will have an `enum_value`
      property which will be the same as one of the choices from the list
      defined in the Custom Field metadata.
  - name: Custom Field Settings
    description: >-
      Custom fields are attached to a particular project with the Custom
      Field Settings resource. This resource both represents the
      many-to-many join of the Custom Field and Project as well as stores
      information that is relevant to that particular pairing; for instance,
      the `is_important` property determines some possible
      application-specific handling of that custom field.
  - name: Events
    description: >-
      An *event* is an object representing a change to a resource that was
      observed by an event subscription.


      In general, requesting events on a resource is faster and subject to
      higher rate limits than requesting the resource itself. Additionally,
      change events bubble up - listening to events on a project would include
      when stories are added to tasks in the project, even on subtasks.


      Establish an initial sync token by making a request with no sync token.
      The response will be a `412` error - the same as if the sync token had
      expired.


      Subsequent requests should always provide the sync token from the
      immediately preceding call.


      Sync tokens may not be valid if you attempt to go ‘backward’ in the
      history by requesting previous tokens, though re-requesting the current
      sync token is generally safe, and will always return the same results.


      When you receive a `412 Precondition Failed` error, it means that the
      sync token is either invalid or expired. If you are attempting to keep a
      set of data in sync, this signals you may need to re-crawl the data.


      Sync tokens always expire after 24 hours, but may expire sooner,
      depending on load on the service.
  - name: Jobs
    description: >-
      Jobs represent processes that handle asynchronous work.

      Jobs are created when an endpoint requests an action that will be handled
      asynchronously. Such as project or task duplication.

      Only the creator of the duplication process can access the duplication
      status
      of the new object.
  - name: Organization Exports
    description: >-
      An *organization_export* object represents a request to export the
      complete data of an Organization in JSON format.


      To export an Organization using this API:


      * Create an `organization_export`
        [request](#create-an-organization-export-request)
        and store the id that is returned.
      * Request the `organization_export` every few minutes, until the
        `state` field contains ‘finished’.
      * Download the file located at the URL in the `download_url` field.
      * Exports can take a long time, from several minutes to a few hours
        for large Organizations.


      *Note: These endpoints are only available to [Service
      Accounts](https://asana.com/guide/help/premium/service-accounts) of an
      [Enterprise](https://asana.com/enterprise) Organization.*
  - name: Portfolios
    description: >-
      A 'portfolio' gives a high-level overview of the status of multiple
      initiatives in Asana. Portfolios provide a dashboard overview of the
      state of multiple projects, including a progress report and the most
      recent [project status](#asana-project-statuses)
      update.

      Portfolios have some restrictions on size. Each portfolio has a max of 250
      items and, like projects, a max of 20 custom fields.
  - name: Portfolio Memberships
    description: >-
      This object determines if a user is a member of a portfolio.
  - name: Projects
    description: >-
      A `project` represents a prioritized list of tasks in Asana or a board
      with columns of tasks represented as cards. It exists in a single
      workspace or organization and is accessible to a subset of users in that
      workspace or organization, depending on its permissions.


      Projects in organizations are shared with a single team. You cannot
      currently change the team of a project via the API. Non-organization
      workspaces do not have teams and so you should not specify the team of
      project in a regular workspace.


      Followers of a project are a subset of the members of that project.
      Followers of a project will receive all updates including tasks
      created, added and removed from that project. Members of the project
      have access to and will receive status updates of the project. Adding
      followers to a project will add them as members if they are not
      already, removing followers from a project will not affect membership.
  - name: Project Memberships
    description: >-
      With the introduction of “comment-only” projects in Asana, a user’s
      membership in a project comes with associated permissions. These
      permissions (whether a user has full access to the project or
      comment-only access) are accessible through the project memberships
      endpoints described here.
  - name: Project Statuses
    description: >-
      A *project status* is an update on the progress of a particular project,
      and is sent out to all project followers when created. These updates
      include both text describing the update and a color code intended to
      represent the overall state of the project: “green” for projects that
      are on track, “yellow” for projects at risk, and “red” for projects that
      are behind.


      Project statuses can be created and deleted, but not modified.
  - name: Sections
    description: >-
      A *section* is a subdivision of a project that groups tasks together.
      It can either be a header above a list of tasks in a list view or a
      column in a board view of a project.


      Sections are largely a shared idiom in Asana’s API for both list and
      board views of a project regardless of the project’s layout.


      The ‘memberships’ property when
      [getting a task](#get-a-task)
      will return the information for the section or the column under
      ‘section’ in the response.
  - name: Stories
    description: >-
      *See [our forum post](https://forum.asana.com/t/no-more-parsing-story-text-new-fields-on-stories/42924)
      for more info on when conditional fields are returned.*


      A *story* represents an activity associated with an object in the
      Asana system. Stories are generated by the system whenever users take
      actions such as creating or assigning tasks, or moving tasks between
      projects. *Comments* are also a form of user-generated story.
  - name: Tags
    description: >-
      A tag is a label that can be attached to any task in Asana. It exists in
      a single workspace or organization.


      Tags have some metadata associated with them, but it is possible that
      we will simplify them in the future so it is not encouraged to rely
      too heavily on it. Unlike projects, tags do not provide any ordering
      on the tasks they are associated with.
  - name: Tasks
    description: >-
      The task is the basic object around which many operations in Asana are
      centered. In the Asana application, multiple tasks populate the
      middle pane according to some view parameters, and the set of selected
      tasks determines the more detailed information presented in the
      details pane.


      Sections are unique in that they will be included in the *memberships*
      field of task objects returned in the API when the task is within a
      section. They can also be used to manipulate the ordering of a task
      within a project.


      [Queries](#get-a-set-of-tasks)
      return a compact representation of each object which is typically the
      id and name fields. Interested in a specific set of fields or all of
      the fields? Use [field selectors](#input-output-options)
      to manipulate what data is included in a response.
  - name: Teams
    description: >-
      A *team* is used to group related projects and people together within an
      organization. Each project in an organization is associated with a team.
  - name: Typeahead
    description: >-
      The typeahead search API provides search for objects from a single
      workspace.
  - name: Users
    description: >-
      A user object represents an account in Asana that can be given access to
      various workspaces, projects, and tasks.


      Like other objects in the system, users are referred to by numerical
      IDs. However, the special string identifier `me` can be used anywhere
      a user ID is accepted, to refer to the current authenticated user.
  - name: User Task Lists
    description: >-
      A user task list represents the tasks assigned to a particular user.


      A user’s “My Tasks” represent all of the tasks assigned to that user.
      It is visually divided into regions based on the task’s
      [`assignee_status`](#tocS_Task)
      for Asana users to triage their tasks based on when they can address
      them. When building an integration it’s worth noting that tasks with
      due dates will automatically move through `assignee_status` states as
      their due dates approach; read up on [task
      auto-promotion](https://asana.com/guide/help/fundamentals/my-tasks#gl-auto-promote)
      for more information.
  - name: Webhooks
    description: >-
      Webhooks allow an application to be notified of changes. This is in
      addition to the ability to fetch those changes directly as
      [Events](#asana-events) - in fact, Webhooks are just a way to receive
      Events via HTTP POST at the time they occur instead of polling for them.
      For services accessible via HTTP this is often vastly more convenient, and
      if events are not too frequent can be significantly more efficient.


      In both cases, however, changes are represented as Event objects - refer
      to the [Events documentation](#asana-events) for more information on what
      data these events contain.


      **NOTE:** While Webhooks send arrays of Event objects to their target, the
      Event objects themselves contain *only IDs*, rather than the actual
      resource they are referencing. So while a normal event you receive via GET
      /events would look like an [Event](/#tocS_Event). In a Webhook payload you
      will instead receive a [WebhookEvent](#tocS_WebhookEvent) (a simplified
      version of the event object).


      [Webhooks](#tocS_Webhook) themselves contain only the information
      necessary to deliver the events to the desired target as they are
      generated.


      #### Receiving Events


      Because multiple events often happen in short succession, a webhook
      payload is designed to be able to transmit multiple events at once. The
      exact model of events is described in the
      [Events documentation](#asana-events).


      The HTTP POST that the target receives contains:


       * An `X-Hook-Signature` header, which allows verifying that the payload
       is genuine.  The signature is a SHA256 HMAC using the shared secret
       (transmitted during the handshake) of the request body. Verification is
       **strongly recommended**, as it would otherwise be possible for an
       attacker to POST a malicious payload to the same endpoint. If the target
       endpoint can be kept secret this risk is mitigated somewhat, of course.
       * A JSON body with a single key, `events`, containing an array of the
       events that have occurred since the last webhook delivery. Note that this
       list may be empty, as periodically we may send a "heartbeat" webhook to
       verify that the endpoint is available.


      Note that events are "skinny" - we expect consumers who desire syncing
      data to make additional calls to the API to retrieve the latest state.
      Because the data may have already changed by the time we send the event,
      it would be misleading to send a snapshot of the data along with the
      event.


      #### Error Handling and Retry


      If we attempt to send a webhook payload and we receive an error status
      code, or the request times out, we will retry delivery with exponential
      backoff. In general, if your servers are not available for an hour, you
      can expect it to take no longer than approximately an hour after they come
      back before the paused delivery resumes. However, if we are unable to
      deliver a message for 24 hours the webhook will be deactivated.
  - name: Workspaces
    description: >-
      A *workspace* is the highest-level organizational unit in Asana. All
      projects and tasks have an associated workspace.


      An *organization* is a special kind of workspace that represents a
      company. In an organization, you can group your projects into teams.
      You can read more about how organizations work on the Asana Guide. To
      tell if your workspace is an organization or not, check its
      `is_organization` property.


      Over time, we intend to migrate most workspaces into organizations and
      to release more organization-specific functionality. We may eventually
      deprecate using workspace-based APIs for organizations. Currently, and
      until after some reasonable grace period following any further
      announcements, you can still reference organizations in any
      `workspace` parameter.
  - name: Workspace Memberships
    description: >-
      This object determines if a user is a member of a workspace.
components:
  parameters:
    fields:
      name: opt_fields
      in: query
      description: >-
        Defines fields to return.

        Some requests return *compact* representations of objects in order to
        conserve resources and complete the request more efficiently. Other times
        requests return more information than you may need. This option allows
        you to list the exact set of fields that the API should be sure to
        return for the objects. The field names should be provided as paths,
        described below.

        The id of included objects will always be returned, regardless of the
        field options.
      example:
        - followers
        - assignee
      required: false
      schema:
        type: array
        items:
          type: string
      style: form
      explode: false
    pretty:
      name: opt_pretty
      in: query
      description: >-
        Provides “pretty” output.

        Provides the response in a “pretty” format. In the case of JSON this
        means doing proper line breaking and indentation to make it readable.
        This will take extra time and increase the response size so it is
        advisable only to use this during debugging.
      required: false
      allowEmptyValue: true
      schema:
        type: boolean
      style: form
      example: true
    limit:
      name: limit
      in: query
      description: >-
        Results per page.

        The number of objects to return per page. The value must be between 1
        and 100.
      example: 50
      schema:
        type: integer
    offset:
      name: offset
      in: query
      description: >-
        Offset token.

        An offset to the next page returned by the API. A pagination request
        will return an offset token, which can be used as an input parameter to
        the next request. If an offset is not passed in, the API will return
        the first page of results.

        'Note: You can only pass in an offset that was returned to you via a
        previously paginated request.'
      example: eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9
      schema:
        type: string
    archived_query_param:
      name: archived
      in: query
      description: >-
        Only return projects whose `archived` field takes on the value of
        this parameter.
      schema:
        type: boolean
      example: false
    attachment_path_gid:
      name: attachment_gid
      in: path
      description: >-
        Globally unique identifier for the attachment.
      required: true
      schema:
        type: string
      example: '12345'
      x-env-variable: attachment
    custom_field_path_gid:
      name: custom_field_gid
      in: path
      description: >-
        Globally unique identifier for the custom field.
      required: true
      schema:
        type: string
      example: '12345'
      x-env-variable: custom_field
    job_path_gid:
      name: job_gid
      in: path
      description: >-
        Globally unique identifier for the job.
      required: true
      schema:
        type: string
      example: '12345'
      x-env-variable: job
    organization_export_path_gid:
      name: organization_export_gid
      in: path
      description: >-
        Globally unique identifier for the organization export.
      required: true
      schema:
        type: string
      example: '12345'
      x-env-variable: organization_export
    project_path_gid:
      name: project_gid
      in: path
      description: >-
        Globally unique identifier for the project.
      required: true
      schema:
        type: string
      example: '1331'
      x-env-variable: project
    project_membership_path_gid:
      name: project_membership_path_gid
      in: path
      required: true
      schema:
        type: string
      example: '1331'
      x-env-variable: project_membership
    project_status_path_gid:
      name: project_status_path_gid
      in: path
      required: true
      description: The project status update to get.
      schema:
        type: string
      example: '321654'
      x-env-variable: project_status
    portfolio_path_gid:
      name: portfolio_gid
      in: path
      description: >-
        Globally unique identifier for the portfolio.
      required: true
      schema:
        type: string
      example: '12345'
      x-env-variable: portfolio
    portfolio_membership_path_gid:
      name: portfolio_membership_path_gid
      in: path
      required: true
      schema:
        type: string
      example: '1331'
      x-env-variable: portfolio_membership
    portfolio_query_param:
      name: portfolio
      in: query
      description: The portfolio to filter results on.
      schema:
        type: string
      example: '12345'
      x-env-variable: portfolio
    section_path_gid:
      name: section_gid
      in: path
      required: true
      description: The globally unique identifier for the section.
      schema:
        type: string
      example: '321654'
      x-env-variable: section
    story_path_gid:
      name: story_gid
      in: path
      description: Globally unique identifier for the story.
      required: true
      schema:
        type: string
      example: '35678'
      x-env-variable: story
    tag_path_gid:
      name: tag_gid
      in: path
      description: Globally unique identifier for the tag.
      required: true
      schema:
        type: string
      example: '11235'
      x-env-variable: tag
    task_path_gid:
      name: task_gid
      in: path
      required: true
      description: The task to operate on.
      schema:
        type: string
      example: '321654'
      x-env-variable: task
    team_path_gid:
      name: team_gid
      in: path
      description: Globally unique identifier for the team.
      required: true
      schema:
        type: string
      example: '159874'
      x-env-variable: team
    user_query_param:
      name: user
      in: query
      description: The user to filter results on.
      schema:
        type: string
        format: email
      x-env-variable: user
      examples:
        gid:
          summary: A globally unique identifier for the user
          value: '14641'
        me:
          summary: >-
            The keyword 'me' to indicate the current user making the
            request.
          value: me
        email:
          summary: An email address for a user
          value: sashimi@asana.com
    user_path_gid:
      name: user_gid
      in: path
      description: >-
        Globally unique identifier for the user.
      required: true
      schema:
        type: string
      x-env-variable: user
      examples:
        gid:
          summary: A globally unique identifier for the user
          value: 14641
        me:
          summary: >-
            The keyword 'me' to indicate the current user making the
            request.
          value: me
        email:
          summary: An email address for a user
          value: sashimi@asana.com
    user_task_list_path_gid:
      name: user_task_list_gid
      in: path
      description: >-
        Globally unique identifier for the user task list.
      required: true
      schema:
        type: string
      example: '12345'
      x-env-variable: user_task_list
    webhook_path_gid:
      name: webhook_gid
      in: path
      description: >-
        Globally unique identifier for the webhook.
      required: true
      schema:
        type: string
      example: '12345'
      x-env-variable: webhook
    workspace_path_gid:
      name: workspace_gid
      in: path
      description: >-
        Globally unique identifier for the workspace or organization.
      required: true
      schema:
        type: string
      example: '12345'
      x-env-variable: workspace
    workspace_query_param:
      name: workspace
      in: query
      description: The workspace to filter results on.
      schema:
        type: string
      example: '12345'
      x-env-variable: workspace
    workspace_membership_path_gid:
      name: workspace_membership_path_gid
      in: path
      required: true
      schema:
        type: string
      example: '12345'
      x-env-variable: workspace_membership
  responses:
    GenericErrorResponse:
      description: >-
        Sadly, sometimes requests to the API are not successful. Failures can
        occur for a wide range of reasons. In all cases, the API should return
        an HTTP Status Code that indicates the nature of the failure,
        with a response body in JSON format containing additional information.
        In the event of a server error the response body will contain an error
        phrase. These phrases are automatically generated using the
        [node-asana-phrase
        library](https://github.com/Asana/node-asana-phrase) and can be used by
        Asana support to quickly look up the incident that caused the server
        error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: >-
        This usually occurs because of a missing or malformed parameter. Check
        the documentation and the syntax of your request and try again.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: >-
        A valid authentication token was not provided with the request, so the
        API could not associate a user with the request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    PaymentRequired:
      description: >-
        The request was valid, but the queried object or object mutation
        specified in the request is above your current premium level.
    Forbidden:
      description: >-
        The authentication and request syntax was valid but the server is
        refusing to complete the request. This can happen if you try to read or
        write to objects or properties that the user does not have access to.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: >-
        Either the request method and path supplied do not specify a known
        action in the API, or the object specified by the request does not
        exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    TooManyRequests:
      description: >-
        You have exceeded one of the enforced rate limits in the API. See the
        [documentation on rate
        limiting](https://developers.asana.com/docs/#rate-limits)
        for more information.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: >-
        There was a problem on Asana’s end.
        In the event of a server error the response body should contain an error
        phrase. These phrases can be used by Asana support to quickly look up the
        incident that caused the server error.
        Some errors are due to server load, and will not supply an error phrase.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadGateway:
      description: >-
        There is an issue between the load balancers and Asana's API.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ServiceUnavailable:
      description: >-
        Either the upstream service is unavailable to the API, or he API has been
        intentionally shut off.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    GatewayTimeout:
      description: >-
        This request took too long to complete.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    body_object_gid_override:
      type: string
      readOnly: false
      x-env-variable: true
      description: >-
        Gid of an object.
      example: '12345'
    body_array_gid_override:
      type: array
      readOnly: false
      description: >-
        Array of object Gids.
      items:
        type: string
        description: >-
          Gid of an object.
      example:
        - '12345'
    AsanaObject:
      description: >-
        A generic Asana Object, containing a globally unique identifier.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: task
    AsanaNamedObject:
      description: >-
        A generic Asana Object, containing a globally unique identifier.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: task
        name:
          description: The name of the object.
          type: string
          example: Bug Task
    AsanaObjectArray:
      description: >-
        A generic list of objects, such as those returned by the typeahead search
        endpoint.
      type: object
      properties:
        data:
          type: array
          items:
            description: >-
              A generic Asana Object, containing a globally unique identifier.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: task
              name:
                description: The name of the object.
                type: string
                example: Bug Task
    AsanaSubtype:
      properties:
        resource_subtype:
          description: >-
            The subtype of this resource. Different subtypes retain many of the
            same fields and behavior, but may render differently in Asana or
            represent resources with different semantic meaning.
          type: string
          readOnly: true
    AsanaCreatedAt:
      type: object
      properties:
        created_at:
          description: The time at which this resource was created.
          type: string
          format: date-time
          readOnly: true
          example: '2012-02-22T02:06:58.147Z'
    AsanaCreatedBy:
      properties:
        created_by:
          description: >-
            The user who created this resource.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: user
            name:
              description: >-
                *Read-only except when same user as requester*. The user’s name.
              type: string
              example: Greg Sanchez
          readOnly: true
          nullable: true
    Attachment:
      description: >-
        An *attachment* object represents any file attached to a task in
        Asana, whether it’s an uploaded file or one associated via a
        third-party service such as Dropbox or Google Drive.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: attachment
        name:
          description: The name of the file.
          type: string
          readOnly: true
          example: Screenshot.png
        created_at:
          description: The time at which this resource was created.
          type: string
          format: date-time
          readOnly: true
          example: '2012-02-22T02:06:58.147Z'
        download_url:
          description: >-
            The URL containing the content of the attachment.

            *Note:* May be null if the attachment is hosted by
            [Box](https://www.box.com/). If present, this URL may only be
            valid for 1 hour from the time of retrieval. You should avoid
            persisting this URL somewhere and just refresh it on demand to
            ensure you do not keep stale URLs.
          type: string
          format: uri
          readOnly: true
          nullable: true
          example: https://www.dropbox.com/s/123/Screenshot.png?dl=1
        host:
          description: >-
            The service hosting the attachment. Valid values are `asana`,
            `dropbox`, `gdrive` and `box`.
          type: string
          readOnly: true
          example: dropbox
        parent: {}
        view_url:
          description: >-
            The URL where the attachment can be viewed, which may be
            friendlier to users in a browser than just directing them to a raw
            file. May be null if no view URL exists for the service.
          type: string
          format: uri
          readOnly: true
          nullable: true
          example: https://www.dropbox.com/s/123/Screenshot.png
    AttachmentCompact:
      description: >-
        An *attachment* object represents any file attached to a task in
        Asana, whether it’s an uploaded file or one associated via a
        third-party service such as Dropbox or Google Drive.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: attachment
        name:
          description: The name of the file.
          type: string
          readOnly: true
          example: Screenshot.png
    AttachmentObject:
      type: object
      properties:
        data:
          description: >-
            An *attachment* object represents any file attached to a task in
            Asana, whether it’s an uploaded file or one associated via a
            third-party service such as Dropbox or Google Drive.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: attachment
            name:
              description: The name of the file.
              type: string
              readOnly: true
              example: Screenshot.png
            created_at:
              description: The time at which this resource was created.
              type: string
              format: date-time
              readOnly: true
              example: '2012-02-22T02:06:58.147Z'
            download_url:
              description: >-
                The URL containing the content of the attachment.

                *Note:* May be null if the attachment is hosted by
                [Box](https://www.box.com/). If present, this URL may only be
                valid for 1 hour from the time of retrieval. You should avoid
                persisting this URL somewhere and just refresh it on demand to
                ensure you do not keep stale URLs.
              type: string
              format: uri
              readOnly: true
              nullable: true
              example: https://www.dropbox.com/s/123/Screenshot.png?dl=1
            host:
              description: >-
                The service hosting the attachment. Valid values are `asana`,
                `dropbox`, `gdrive` and `box`.
              type: string
              readOnly: true
              example: dropbox
            parent: {}
            view_url:
              description: >-
                The URL where the attachment can be viewed, which may be
                friendlier to users in a browser than just directing them to a raw
                file. May be null if no view URL exists for the service.
              type: string
              format: uri
              readOnly: true
              nullable: true
              example: https://www.dropbox.com/s/123/Screenshot.png
    AttachmentArray:
      type: object
      properties:
        data:
          type: array
          items:
            description: >-
              An *attachment* object represents any file attached to a task in
              Asana, whether it’s an uploaded file or one associated via a
              third-party service such as Dropbox or Google Drive.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: attachment
              name:
                description: The name of the file.
                type: string
                readOnly: true
                example: Screenshot.png
    BatchRequest:
      description: A request object for use in a batch request.
      type: object
      properties:
        relative_path:
          description: >-
            The path of the desired endpoint relative to the API’s base URL. Query
            parameters are not accepted here; put them in `data` instead.
          type: string
          example: /tasks/123
        method:
          description: The HTTP method you wish to emulate for the action.
          type: string
          enum:
            - get
            - post
            - put
            - delete
            - patch
            - head
          example: get
        data:
          description: >-
            For `GET` requests, this should be a map of query parameters you would
            have normally passed in the URL. Options and pagination are not
            accepted here; put them in `options` instead. For `POST`, `PATCH`, and
            `PUT` methods, this should be the content you would have normally put
            in the data field of the body.
          type: object
          example:
            assignee: me
            workspace: '1337'
        options:
          description: >-
            Pagination (`limit` and `offset`) and output options (`fields` or
            `expand`) for the action. “Pretty” JSON output is not an available
            option on individual actions; if you want pretty output, specify that
            option on the parent request.
          type: object
          properties:
            limit:
              description: Pagination limit for the request.
              type: integer
              example: 50
            offset:
              description: Pagination offset for the request.
              type: integer
              example: eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9
            fields:
              description: The fields to retrieve in the request.
              type: array
              items:
                type: string
              example:
                - name
                - gid
                - notes
                - completed
          example:
            limit: 3
            fields:
              - name
              - notes
              - completed
      required:
        - relative_path
        - method
    BatchResult:
      description: A response object returned from a batch request.
      type: object
      properties:
        status_code:
          description: The HTTP status code that the invoked endpoint returned.
          type: integer
          example: 200
        headers:
          description: >-
            A map of HTTP headers specific to this result. This is primarily used
            for returning a `Location` header to accompany a `201 Created`
            result.  The parent HTTP response will contain all common headers.
          type: object
          example:
            location: /tasks/1234
        body:
          description: The JSON body that the invoked endpoint returned.
          type: object
          example:
            data:
              gid: '1967'
              completed: false
              name: Hello, world!
              notes: How are you today?
    BatchResultObject:
      type: object
      properties:
        data:
          description: A response object returned from a batch request.
          type: object
          properties:
            status_code:
              description: The HTTP status code that the invoked endpoint returned.
              type: integer
              example: 200
            headers:
              description: >-
                A map of HTTP headers specific to this result. This is primarily used
                for returning a `Location` header to accompany a `201 Created`
                result.  The parent HTTP response will contain all common headers.
              type: object
              example:
                location: /tasks/1234
            body:
              description: The JSON body that the invoked endpoint returned.
              type: object
              example:
                data:
                  gid: '1967'
                  completed: false
                  name: Hello, world!
                  notes: How are you today?
    BatchResultArray:
      type: object
      properties:
        data:
          type: array
          items:
            description: A response object returned from a batch request.
            type: object
            properties:
              status_code:
                description: The HTTP status code that the invoked endpoint returned.
                type: integer
                example: 200
              headers:
                description: >-
                  A map of HTTP headers specific to this result. This is primarily
                  used
                  for returning a `Location` header to accompany a `201 Created`
                  result.  The parent HTTP response will contain all common headers.
                type: object
                example:
                  location: /tasks/1234
              body:
                description: The JSON body that the invoked endpoint returned.
                type: object
                example:
                  data:
                    gid: '1967'
                    completed: false
                    name: Hello, world!
                    notes: How are you today?
    CustomField:
      description: >-
        Custom Fields store the metadata that is used in order to
        add user-specified information to tasks in Asana. Be sure
        to reference the [Custom Fields](#asana-custom-fields)
        developer documentation for more information about how custom fields
        relate to various resources in Asana.


        Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields),
        which will make them read-only when accessed by other users.
        Attempting to edit a locked custom field will return HTTP error code
        `403 Forbidden`.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: custom_field
        name:
          description: The name of the object.
          type: string
          example: Bug Task
        resource_subtype:
          description: >
            The type of the custom field. Must be one of the given values.
          type: string
          example: text
          enum:
            - text
            - enum
            - number
        type:
          description: >
            *Deprecated: new integrations should prefer the resource_subtype
            field.* The type of the custom field. Must be one of the given
            values.
          type: string
          readOnly: true
          enum:
            - text
            - enum
            - number
        enum_options:
          description: >-
            *Conditional*. Only relevant for custom fields of type `enum`.
            This array specifies the possible values which an `enum` custom
            field can adopt. To modify the enum options, refer to [working
            with enum
            options](#create-an-enum-option).
          type: array
          items:
            description: >-
              Enum options are the possible values which an enum custom field can
              adopt. An enum custom field must contain at least 1 enum option but
              no
              more than 50.


              You can add enum options to a custom field by using the `POST
              /custom_fields/custom_field_gid/enum_options` endpoint.


              **It is not possible to remove or delete an enum option**. Instead,
              enum options can be disabled by updating the `enabled` field to false
              with the `PUT /enum_options/enum_option_gid` endpoint. Other
              attributes can be updated similarly.


              On creation of an enum option, `enabled` is always set to `true`,
              meaning the enum option is a selectable value for the custom field.
              Setting `enabled=false` is equivalent to “trashing” the enum option
              in
              the Asana web app within the “Edit Fields” dialog. The enum option
              will no longer be selectable but, if the enum option value was
              previously set within a task, the task will retain the value.


              Enum options are an ordered list and by default new enum options are
              inserted at the end. Ordering in relation to existing enum options can
              be specified on creation by using `insert_before` or `insert_after`
              to
              reference an existing enum option. Only one of `insert_before` and
              `insert_after` can be provided when creating a new enum option.


              An enum options list can be reordered with the `POST
              /custom_fields/custom_field_gid/enum_options/insert` endpoint.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: enum_option
              name:
                description: The name of the enum option.
                type: string
                example: Low
              enabled:
                description: "The color of the enum option. Defaults to \u2018none\u2019\
                  ."
                type: boolean
                example: true
              color:
                description: >-
                  Whether or not the enum option is a selectable value for the
                  custom field.
                type: string
                example: blue
        enum_value: {}
        enabled:
          description: >-
            *Conditional*. Determines if the custom field is enabled or not.
          type: boolean
          example: true
        text_value:
          description: >-
            *Conditional*. This string is the value of a text custom field.
          type: string
          example: Some Value
        description:
          description: >-
            [Opt
            In](#input-output-options).
            The description of the custom field.
          type: string
          example: Development team priority
        precision:
          description: >-
            Only relevant for custom fields of type ‘Number’. This field
            dictates the number of places after the decimal to round to, i.e.
            0 is integer values, 1 rounds to the nearest tenth, and so on.
            Must be between 0 and 6, inclusive.
          type: integer
          example: 2
        is_global_to_workspace:
          description: >-
            This flag describes whether this custom field is available to
            every container in the workspace. Before project-specific custom
            fields, this field was always true.
          type: boolean
          example: true
          readOnly: true
        has_notifications_enabled:
          description: >-
            This flag describes whether a follower of a task with this field
            should receive inbox notifications from changes to this field.
          type: boolean
          example: true
    CustomFieldCompact:
      description: >-
        Custom Fields store the metadata that is used in order to
        add user-specified information to tasks in Asana. Be sure
        to reference the [Custom Fields](#asana-custom-fields)
        developer documentation for more information about how custom fields
        relate to various resources in Asana.


        Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields),
        which will make them read-only when accessed by other users.
        Attempting to edit a locked custom field will return HTTP error code
        `403 Forbidden`.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: custom_field
        name:
          description: The name of the object.
          type: string
          example: Bug Task
        resource_subtype:
          description: >
            The type of the custom field. Must be one of the given values.
          type: string
          example: text
          enum:
            - text
            - enum
            - number
        type:
          description: >
            *Deprecated: new integrations should prefer the resource_subtype
            field.* The type of the custom field. Must be one of the given
            values.
          type: string
          readOnly: true
          enum:
            - text
            - enum
            - number
        enum_options:
          description: >-
            *Conditional*. Only relevant for custom fields of type `enum`.
            This array specifies the possible values which an `enum` custom
            field can adopt. To modify the enum options, refer to [working
            with enum
            options](#create-an-enum-option).
          type: array
          items:
            description: >-
              Enum options are the possible values which an enum custom field can
              adopt. An enum custom field must contain at least 1 enum option but
              no
              more than 50.


              You can add enum options to a custom field by using the `POST
              /custom_fields/custom_field_gid/enum_options` endpoint.


              **It is not possible to remove or delete an enum option**. Instead,
              enum options can be disabled by updating the `enabled` field to false
              with the `PUT /enum_options/enum_option_gid` endpoint. Other
              attributes can be updated similarly.


              On creation of an enum option, `enabled` is always set to `true`,
              meaning the enum option is a selectable value for the custom field.
              Setting `enabled=false` is equivalent to “trashing” the enum option
              in
              the Asana web app within the “Edit Fields” dialog. The enum option
              will no longer be selectable but, if the enum option value was
              previously set within a task, the task will retain the value.


              Enum options are an ordered list and by default new enum options are
              inserted at the end. Ordering in relation to existing enum options can
              be specified on creation by using `insert_before` or `insert_after`
              to
              reference an existing enum option. Only one of `insert_before` and
              `insert_after` can be provided when creating a new enum option.


              An enum options list can be reordered with the `POST
              /custom_fields/custom_field_gid/enum_options/insert` endpoint.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: enum_option
              name:
                description: The name of the enum option.
                type: string
                example: Low
              enabled:
                description: "The color of the enum option. Defaults to \u2018none\u2019\
                  ."
                type: boolean
                example: true
              color:
                description: >-
                  Whether or not the enum option is a selectable value for the
                  custom field.
                type: string
                example: blue
        enum_value: {}
        enabled:
          description: >-
            *Conditional*. Determines if the custom field is enabled or not.
          type: boolean
          example: true
        text_value:
          description: >-
            *Conditional*. This string is the value of a text custom field.
          type: string
          example: Some Value
    CustomFieldObject:
      type: object
      properties:
        data:
          description: >-
            Custom Fields store the metadata that is used in order to
            add user-specified information to tasks in Asana. Be sure
            to reference the [Custom Fields](#asana-custom-fields)
            developer documentation for more information about how custom fields
            relate to various resources in Asana.


            Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields),
            which will make them read-only when accessed by other users.
            Attempting to edit a locked custom field will return HTTP error code
            `403 Forbidden`.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: custom_field
            name:
              description: The name of the object.
              type: string
              example: Bug Task
            resource_subtype:
              description: >
                The type of the custom field. Must be one of the given values.
              type: string
              example: text
              enum:
                - text
                - enum
                - number
            type:
              description: >
                *Deprecated: new integrations should prefer the resource_subtype
                field.* The type of the custom field. Must be one of the given
                values.
              type: string
              readOnly: true
              enum:
                - text
                - enum
                - number
            enum_options:
              description: >-
                *Conditional*. Only relevant for custom fields of type `enum`.
                This array specifies the possible values which an `enum` custom
                field can adopt. To modify the enum options, refer to [working
                with enum
                options](#create-an-enum-option).
              type: array
              items:
                description: >-
                  Enum options are the possible values which an enum custom field
                  can
                  adopt. An enum custom field must contain at least 1 enum option
                  but no
                  more than 50.


                  You can add enum options to a custom field by using the `POST
                  /custom_fields/custom_field_gid/enum_options` endpoint.


                  **It is not possible to remove or delete an enum option**. Instead,
                  enum options can be disabled by updating the `enabled` field to
                  false
                  with the `PUT /enum_options/enum_option_gid` endpoint. Other
                  attributes can be updated similarly.


                  On creation of an enum option, `enabled` is always set to `true`,
                  meaning the enum option is a selectable value for the custom field.
                  Setting `enabled=false` is equivalent to “trashing” the enum option
                  in
                  the Asana web app within the “Edit Fields” dialog. The enum option
                  will no longer be selectable but, if the enum option value was
                  previously set within a task, the task will retain the value.


                  Enum options are an ordered list and by default new enum options
                  are
                  inserted at the end. Ordering in relation to existing enum options
                  can
                  be specified on creation by using `insert_before` or `insert_after`
                  to
                  reference an existing enum option. Only one of `insert_before` and
                  `insert_after` can be provided when creating a new enum option.


                  An enum options list can be reordered with the `POST
                  /custom_fields/custom_field_gid/enum_options/insert` endpoint.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: enum_option
                  name:
                    description: The name of the enum option.
                    type: string
                    example: Low
                  enabled:
                    description: "The color of the enum option. Defaults to \u2018\
                      none\u2019."
                    type: boolean
                    example: true
                  color:
                    description: >-
                      Whether or not the enum option is a selectable value for the
                      custom field.
                    type: string
                    example: blue
            enum_value: {}
            enabled:
              description: >-
                *Conditional*. Determines if the custom field is enabled or not.
              type: boolean
              example: true
            text_value:
              description: >-
                *Conditional*. This string is the value of a text custom field.
              type: string
              example: Some Value
            description:
              description: >-
                [Opt
                In](#input-output-options).
                The description of the custom field.
              type: string
              example: Development team priority
            precision:
              description: >-
                Only relevant for custom fields of type ‘Number’. This field
                dictates the number of places after the decimal to round to, i.e.
                0 is integer values, 1 rounds to the nearest tenth, and so on.
                Must be between 0 and 6, inclusive.
              type: integer
              example: 2
            is_global_to_workspace:
              description: >-
                This flag describes whether this custom field is available to
                every container in the workspace. Before project-specific custom
                fields, this field was always true.
              type: boolean
              example: true
              readOnly: true
            has_notifications_enabled:
              description: >-
                This flag describes whether a follower of a task with this field
                should receive inbox notifications from changes to this field.
              type: boolean
              example: true
    CustomFieldArray:
      type: object
      properties:
        data:
          type: array
          items:
            description: >-
              Custom Fields store the metadata that is used in order to
              add user-specified information to tasks in Asana. Be sure
              to reference the [Custom Fields](#asana-custom-fields)
              developer documentation for more information about how custom fields
              relate to various resources in Asana.


              Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields),
              which will make them read-only when accessed by other users.
              Attempting to edit a locked custom field will return HTTP error code
              `403 Forbidden`.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: custom_field
              name:
                description: The name of the object.
                type: string
                example: Bug Task
              resource_subtype:
                description: >
                  The type of the custom field. Must be one of the given values.
                type: string
                example: text
                enum:
                  - text
                  - enum
                  - number
              type:
                description: >
                  *Deprecated: new integrations should prefer the resource_subtype
                  field.* The type of the custom field. Must be one of the given
                  values.
                type: string
                readOnly: true
                enum:
                  - text
                  - enum
                  - number
              enum_options:
                description: >-
                  *Conditional*. Only relevant for custom fields of type `enum`.
                  This array specifies the possible values which an `enum` custom
                  field can adopt. To modify the enum options, refer to [working
                  with enum
                  options](#create-an-enum-option).
                type: array
                items:
                  description: >-
                    Enum options are the possible values which an enum custom field
                    can
                    adopt. An enum custom field must contain at least 1 enum option
                    but no
                    more than 50.


                    You can add enum options to a custom field by using the `POST
                    /custom_fields/custom_field_gid/enum_options` endpoint.


                    **It is not possible to remove or delete an enum option**. Instead,
                    enum options can be disabled by updating the `enabled` field to
                    false
                    with the `PUT /enum_options/enum_option_gid` endpoint. Other
                    attributes can be updated similarly.


                    On creation of an enum option, `enabled` is always set to `true`,
                    meaning the enum option is a selectable value for the custom field.
                    Setting `enabled=false` is equivalent to “trashing” the enum option
                    in
                    the Asana web app within the “Edit Fields” dialog. The enum option
                    will no longer be selectable but, if the enum option value was
                    previously set within a task, the task will retain the value.


                    Enum options are an ordered list and by default new enum options
                    are
                    inserted at the end. Ordering in relation to existing enum options
                    can
                    be specified on creation by using `insert_before` or `insert_after`
                    to
                    reference an existing enum option. Only one of `insert_before`
                    and
                    `insert_after` can be provided when creating a new enum option.


                    An enum options list can be reordered with the `POST
                    /custom_fields/custom_field_gid/enum_options/insert` endpoint.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: enum_option
                    name:
                      description: The name of the enum option.
                      type: string
                      example: Low
                    enabled:
                      description: "The color of the enum option. Defaults to \u2018\
                        none\u2019."
                      type: boolean
                      example: true
                    color:
                      description: >-
                        Whether or not the enum option is a selectable value for the
                        custom field.
                      type: string
                      example: blue
              enum_value: {}
              enabled:
                description: >-
                  *Conditional*. Determines if the custom field is enabled or not.
                type: boolean
                example: true
              text_value:
                description: >-
                  *Conditional*. This string is the value of a text custom field.
                type: string
                example: Some Value
    CustomFieldSetting:
      description: >-
        Custom Fields Settings objects represent the many-to-many join of the
        Custom Field and Project as well as stores information that is
        relevant to that particular pairing.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: custom_field_setting
        project: {}
        is_important:
          description: >-
            `is_important` is used in the Asana web application to determine
            if this custom field is displayed in the task list (left pane) of
            a project. A project can have a maximum of 5 custom field settings
            marked as `is_important`.
          type: boolean
          readOnly: true
          example: false
        parent: {}
        custom_field: {}
    CustomFieldSettingCompact:
      description: >-
        Custom Fields Settings objects represent the many-to-many join of the
        Custom Field and Project as well as stores information that is
        relevant to that particular pairing.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: custom_field_setting
    CustomFieldSettingArray:
      type: object
      properties:
        data:
          type: array
          items:
            description: >-
              Custom Fields Settings objects represent the many-to-many join of the
              Custom Field and Project as well as stores information that is
              relevant to that particular pairing.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: custom_field_setting
              project: {}
              is_important:
                description: >-
                  `is_important` is used in the Asana web application to determine
                  if this custom field is displayed in the task list (left pane) of
                  a project. A project can have a maximum of 5 custom field settings
                  marked as `is_important`.
                type: boolean
                readOnly: true
                example: false
              parent: {}
              custom_field: {}
    DependencyArray:
      description: A set of task dependencies.
      type: object
      properties:
        data:
          type: object
          properties:
            dependencies:
              description: An array of task gids that a task should depend on.
              type: array
              items:
                type: string
      example:
        data:
          dependencies:
            - '133713'
            - '184253'
    DependentArray:
      description: A set of dependent tasks.
      type: object
      properties:
        data:
          type: object
          properties:
            dependents:
              description: An array of task gids that are dependents of the given
                task.
              type: array
              items:
                type: string
      example:
        data:
          dependents:
            - '133713'
            - '184253'
    EmptyObject:
      description: An empty object.
      type: object
      properties:
        data:
          type: object
    EnumOption:
      description: >-
        Enum options are the possible values which an enum custom field can
        adopt. An enum custom field must contain at least 1 enum option but no
        more than 50.


        You can add enum options to a custom field by using the `POST
        /custom_fields/custom_field_gid/enum_options` endpoint.


        **It is not possible to remove or delete an enum option**. Instead,
        enum options can be disabled by updating the `enabled` field to false
        with the `PUT /enum_options/enum_option_gid` endpoint. Other
        attributes can be updated similarly.


        On creation of an enum option, `enabled` is always set to `true`,
        meaning the enum option is a selectable value for the custom field.
        Setting `enabled=false` is equivalent to “trashing” the enum option in
        the Asana web app within the “Edit Fields” dialog. The enum option
        will no longer be selectable but, if the enum option value was
        previously set within a task, the task will retain the value.


        Enum options are an ordered list and by default new enum options are
        inserted at the end. Ordering in relation to existing enum options can
        be specified on creation by using `insert_before` or `insert_after` to
        reference an existing enum option. Only one of `insert_before` and
        `insert_after` can be provided when creating a new enum option.


        An enum options list can be reordered with the `POST
        /custom_fields/custom_field_gid/enum_options/insert` endpoint.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: enum_option
        name:
          description: The name of the enum option.
          type: string
          example: Low
        enabled:
          description: "The color of the enum option. Defaults to \u2018none\u2019\
            ."
          type: boolean
          example: true
        color:
          description: >-
            Whether or not the enum option is a selectable value for the
            custom field.
          type: string
          example: blue
    EnumOptionCompact:
      description: >-
        Enum options are the possible values which an enum custom field can
        adopt. An enum custom field must contain at least 1 enum option but no
        more than 50.


        You can add enum options to a custom field by using the `POST
        /custom_fields/custom_field_gid/enum_options` endpoint.


        **It is not possible to remove or delete an enum option**. Instead,
        enum options can be disabled by updating the `enabled` field to false
        with the `PUT /enum_options/enum_option_gid` endpoint. Other
        attributes can be updated similarly.


        On creation of an enum option, `enabled` is always set to `true`,
        meaning the enum option is a selectable value for the custom field.
        Setting `enabled=false` is equivalent to “trashing” the enum option in
        the Asana web app within the “Edit Fields” dialog. The enum option
        will no longer be selectable but, if the enum option value was
        previously set within a task, the task will retain the value.


        Enum options are an ordered list and by default new enum options are
        inserted at the end. Ordering in relation to existing enum options can
        be specified on creation by using `insert_before` or `insert_after` to
        reference an existing enum option. Only one of `insert_before` and
        `insert_after` can be provided when creating a new enum option.


        An enum options list can be reordered with the `POST
        /custom_fields/custom_field_gid/enum_options/insert` endpoint.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: enum_option
        name:
          description: The name of the enum option.
          type: string
          example: Low
        enabled:
          description: "The color of the enum option. Defaults to \u2018none\u2019\
            ."
          type: boolean
          example: true
        color:
          description: >-
            Whether or not the enum option is a selectable value for the
            custom field.
          type: string
          example: blue
    EnumOptionObject:
      type: object
      properties:
        data:
          description: >-
            Enum options are the possible values which an enum custom field can
            adopt. An enum custom field must contain at least 1 enum option but no
            more than 50.


            You can add enum options to a custom field by using the `POST
            /custom_fields/custom_field_gid/enum_options` endpoint.


            **It is not possible to remove or delete an enum option**. Instead,
            enum options can be disabled by updating the `enabled` field to false
            with the `PUT /enum_options/enum_option_gid` endpoint. Other
            attributes can be updated similarly.


            On creation of an enum option, `enabled` is always set to `true`,
            meaning the enum option is a selectable value for the custom field.
            Setting `enabled=false` is equivalent to “trashing” the enum option in
            the Asana web app within the “Edit Fields” dialog. The enum option
            will no longer be selectable but, if the enum option value was
            previously set within a task, the task will retain the value.


            Enum options are an ordered list and by default new enum options are
            inserted at the end. Ordering in relation to existing enum options can
            be specified on creation by using `insert_before` or `insert_after` to
            reference an existing enum option. Only one of `insert_before` and
            `insert_after` can be provided when creating a new enum option.


            An enum options list can be reordered with the `POST
            /custom_fields/custom_field_gid/enum_options/insert` endpoint.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: enum_option
            name:
              description: The name of the enum option.
              type: string
              example: Low
            enabled:
              description: "The color of the enum option. Defaults to \u2018none\u2019\
                ."
              type: boolean
              example: true
            color:
              description: >-
                Whether or not the enum option is a selectable value for the
                custom field.
              type: string
              example: blue
    EnumOptionArray:
      type: object
      properties:
        data:
          type: array
          items:
            description: >-
              Enum options are the possible values which an enum custom field can
              adopt. An enum custom field must contain at least 1 enum option but
              no
              more than 50.


              You can add enum options to a custom field by using the `POST
              /custom_fields/custom_field_gid/enum_options` endpoint.


              **It is not possible to remove or delete an enum option**. Instead,
              enum options can be disabled by updating the `enabled` field to false
              with the `PUT /enum_options/enum_option_gid` endpoint. Other
              attributes can be updated similarly.


              On creation of an enum option, `enabled` is always set to `true`,
              meaning the enum option is a selectable value for the custom field.
              Setting `enabled=false` is equivalent to “trashing” the enum option
              in
              the Asana web app within the “Edit Fields” dialog. The enum option
              will no longer be selectable but, if the enum option value was
              previously set within a task, the task will retain the value.


              Enum options are an ordered list and by default new enum options are
              inserted at the end. Ordering in relation to existing enum options can
              be specified on creation by using `insert_before` or `insert_after`
              to
              reference an existing enum option. Only one of `insert_before` and
              `insert_after` can be provided when creating a new enum option.


              An enum options list can be reordered with the `POST
              /custom_fields/custom_field_gid/enum_options/insert` endpoint.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: enum_option
              name:
                description: The name of the enum option.
                type: string
                example: Low
              enabled:
                description: "The color of the enum option. Defaults to \u2018none\u2019\
                  ."
                type: boolean
                example: true
              color:
                description: >-
                  Whether or not the enum option is a selectable value for the
                  custom field.
                type: string
                example: blue
    Error:
      description: |-
        Sadly, sometimes requests to the API are not successful. Failures can
        occur for a wide range of reasons. In all cases, the API should return
        an HTTP Status Code that indicates the nature of the failure,
        with a response body in JSON format containing additional information.


        In the event of a server error the response body will contain an error
        phrase. These phrases are automatically generated using the
        [node-asana-phrase
        library](https://github.com/Asana/node-asana-phrase) and can be used by
        Asana support to quickly look up the incident that caused the server
        error.
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
                readOnly: true
                description: >-
                  Message providing more detail about the error that occurred, if
                  available.
                example: 'project: Missing input'
              help:
                type: string
                readOnly: true
                description: >-
                  Additional information directing developers to resources on how
                  to address and fix the problem, if available.
                example: >-
                  For more information on API status codes and how to handle them,
                  read the docs on errors:
                  https://asana.github.io/developer-docs/#errors'
              phrase:
                type: string
                readOnly: true
                description: >-
                  *500 errors only*. A unique error phrase which can be used
                  when contacting developer support to help identify the exact
                  occurrence of the problem in Asana’s logs.
                example: 6 sad squid snuggle softly
    Event:
      description: |-
        An *event* is an object representing a change to a resource that was
        observed by an event subscription.
      type: object
      properties:
        user:
          description: >-
            The user who triggered the event.


            *Note: The event may be triggered by a different user than the
            subscriber. For example, if user A subscribes to a task and user B
            modified it, the event’s user will be user B. Note: Some events
            are generated by the system, and will have `null` as the user. API
            consumers should make sure to handle this case.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: user
            name:
              description: >-
                *Read-only except when same user as requester*. The user’s name.
              type: string
              example: Greg Sanchez
          readOnly: true
          nullable: true
        resource:
          description: |-
            The resource the event occurred on.

            *Note: The resource that triggered the event may be different from
            the one that the events were requested for. For example, a
            subscription to a project will contain events for tasks contained
            within the project.*
          type: object
          readOnly: true
          properties:
            gid:
              type: string
              example: '12345'
            name:
              type: string
              example: Bug Task
        type:
          description: |-
            *Deprecated: Refer to the resource_type of the resource.*
            The type of the resource that generated the event.

            *Note: Currently, only tasks, projects and stories generate
            events.*
          type: string
          readOnly: true
          example: task
        action:
          description: The type of action taken that triggered the event.
          type: string
          readOnly: true
          example: changed
        parent:
          description: >-
            For added/removed events, the parent that resource was added to or
            removed from. The parent will be `null` for other event types.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: task
            name:
              description: The name of the object.
              type: string
              example: Bug Task
          readOnly: true
          nullable: true
        created_at:
          description: The timestamp when the event occurred.
          type: string
          format: date-time
          readOnly: true
          example: '2012-02-22T02:06:58.147Z'
    EventArray:
      description: >-
        The full record for all events that have occurred since the sync token was
        created.
      type: object
      properties:
        data:
          type: array
          items:
            description: |-
              An *event* is an object representing a change to a resource that was
              observed by an event subscription.
            type: object
            properties:
              user:
                description: >-
                  The user who triggered the event.


                  *Note: The event may be triggered by a different user than the
                  subscriber. For example, if user A subscribes to a task and user
                  B
                  modified it, the event’s user will be user B. Note: Some events
                  are generated by the system, and will have `null` as the user. API
                  consumers should make sure to handle this case.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: user
                  name:
                    description: >-
                      *Read-only except when same user as requester*. The user’s name.
                    type: string
                    example: Greg Sanchez
                readOnly: true
                nullable: true
              resource:
                description: |-
                  The resource the event occurred on.

                  *Note: The resource that triggered the event may be different from
                  the one that the events were requested for. For example, a
                  subscription to a project will contain events for tasks contained
                  within the project.*
                type: object
                readOnly: true
                properties:
                  gid:
                    type: string
                    example: '12345'
                  name:
                    type: string
                    example: Bug Task
              type:
                description: |-
                  *Deprecated: Refer to the resource_type of the resource.*
                  The type of the resource that generated the event.

                  *Note: Currently, only tasks, projects and stories generate
                  events.*
                type: string
                readOnly: true
                example: task
              action:
                description: The type of action taken that triggered the event.
                type: string
                readOnly: true
                example: changed
              parent:
                description: >-
                  For added/removed events, the parent that resource was added to
                  or
                  removed from. The parent will be `null` for other event types.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: task
                  name:
                    description: The name of the object.
                    type: string
                    example: Bug Task
                readOnly: true
                nullable: true
              created_at:
                description: The timestamp when the event occurred.
                type: string
                format: date-time
                readOnly: true
                example: '2012-02-22T02:06:58.147Z'
        sync:
          description: A sync token to be used with the next call to the events endpoint.
          type: string
          example: de4774f6915eae04714ca93bb2f5ee81
    Job:
      description: >-
        A *job* is an object representing a process that handles asynchronous work.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: task
        resource_subtype:
          description: >-
            The subtype of this resource. Different subtypes retain many of the
            same fields and behavior, but may render differently in Asana or
            represent resources with different semantic meaning.
          type: string
          readOnly: true
          example: duplicate_task
        status:
          type: string
          enum:
            - not_started
            - in_progress
            - completed
            - failed
          readOnly: true
          example: in_progress
        new_project:
          description: >-
            A *project* represents a prioritized list of tasks in Asana or a board
            with columns of tasks represented as cards. It exists in a single
            workspace or organization and is accessible to a subset of users in
            that workspace or organization, depending on its permissions.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: project
            name:
              description: >-
                Name of the project. This is generally a short sentence fragment
                that fits on a line in the UI for maximum readability. However, it
                can be longer.
              type: string
              example: Stuff to buy
        new_task:
          description: >-
            The *task* is the basic object around which many operations in Asana
            are centered.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: task
            name:
              description: The name of the object.
              type: string
              example: Bug Task
    JobObject:
      type: object
      properties:
        data:
          description: >-
            A *job* is an object representing a process that handles asynchronous
            work.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: task
            resource_subtype:
              description: >-
                The subtype of this resource. Different subtypes retain many of the
                same fields and behavior, but may render differently in Asana or
                represent resources with different semantic meaning.
              type: string
              readOnly: true
              example: duplicate_task
            status:
              type: string
              enum:
                - not_started
                - in_progress
                - completed
                - failed
              readOnly: true
              example: in_progress
            new_project:
              description: >-
                A *project* represents a prioritized list of tasks in Asana or a board
                with columns of tasks represented as cards. It exists in a single
                workspace or organization and is accessible to a subset of users in
                that workspace or organization, depending on its permissions.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: project
                name:
                  description: >-
                    Name of the project. This is generally a short sentence fragment
                    that fits on a line in the UI for maximum readability. However,
                    it
                    can be longer.
                  type: string
                  example: Stuff to buy
            new_task:
              description: >-
                The *task* is the basic object around which many operations in Asana
                are centered.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: task
                name:
                  description: The name of the object.
                  type: string
                  example: Bug Task
    OrganizationExport:
      description: >-
        An *organization_export* object represents a request to export the
        complete data of an Organization in JSON format.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: task
        created_at:
          description: The time at which this resource was created.
          type: string
          format: date-time
          readOnly: true
          example: '2012-02-22T02:06:58.147Z'
        download_url:
          description: |-
            Download this URL to retreive the full export of the organization
            in JSON format. It will be compressed in a gzip (.gz) container.

            *Note: May be null if the export is still in progress or
            failed.  If present, this URL may only be valid for 1 hour from
            the time of retrieval. You should avoid persisting this URL
            somewhere and rather refresh on demand to ensure you do not keep
            stale URLs.*
          type: string
          format: uri
          readOnly: true
          nullable: true
          example: >-
            https://asana-export.s3.amazonaws.com/export-4632784536274-20170127-43246.json.gz?AWSAccessKeyId=xxxxxxxx
        state:
          description: The current state of the export.
          type: string
          enum:
            - pending
            - started
            - finished
            - error
          readOnly: true
          example: started
        organization:
          description: >-
            *Create-only*: The Organization that is being exported. This can
            only be specified at create time.
          type: object
          properties:
            gid:
              type: string
              example: '14916'
            name:
              type: string
              example: My Workspace
    OrganizationExportObject:
      type: object
      properties:
        data:
          description: >-
            An *organization_export* object represents a request to export the
            complete data of an Organization in JSON format.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: task
            created_at:
              description: The time at which this resource was created.
              type: string
              format: date-time
              readOnly: true
              example: '2012-02-22T02:06:58.147Z'
            download_url:
              description: |-
                Download this URL to retreive the full export of the organization
                in JSON format. It will be compressed in a gzip (.gz) container.

                *Note: May be null if the export is still in progress or
                failed.  If present, this URL may only be valid for 1 hour from
                the time of retrieval. You should avoid persisting this URL
                somewhere and rather refresh on demand to ensure you do not keep
                stale URLs.*
              type: string
              format: uri
              readOnly: true
              nullable: true
              example: >-
                https://asana-export.s3.amazonaws.com/export-4632784536274-20170127-43246.json.gz?AWSAccessKeyId=xxxxxxxx
            state:
              description: The current state of the export.
              type: string
              enum:
                - pending
                - started
                - finished
                - error
              readOnly: true
              example: started
            organization:
              description: >-
                *Create-only*: The Organization that is being exported. This can
                only be specified at create time.
              type: object
              properties:
                gid:
                  type: string
                  example: '14916'
                name:
                  type: string
                  example: My Workspace
    Portfolio:
      description: >-
        A *portfolio* gives a high-level overview of the status of multiple
        initiatives in Asana. Portfolios provide a dashboard overview of
        the state of multiple projects, including a progress report and the
        most recent [project
        status](#asana-project-statuses)
        update.

        Portfolios have some restrictions on size. Each portfolio has a max of
        250 items and, like projects, a max of 20 custom fields.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: portfolio
        name:
          description: The name of the object.
          type: string
          example: Bug Task
        created_at:
          description: The time at which this resource was created.
          type: string
          format: date-time
          readOnly: true
          example: '2012-02-22T02:06:58.147Z'
        created_by:
          description: >-
            The user who created this resource.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: user
            name:
              description: >-
                *Read-only except when same user as requester*. The user’s name.
              type: string
              example: Greg Sanchez
          readOnly: true
          nullable: true
        color:
          description: Color of the portfolio.
          type: string
          enum:
            - dark-pink
            - dark-green
            - dark-blue
            - dark-red
            - dark-teal
            - dark-brown
            - dark-orange
            - dark-purple
            - dark-warm-gray
            - light-pink
            - light-green
            - light-blue
            - light-red
            - light-teal
            - light-brown
            - light-orange
            - light-purple
            - light-warm-gray
          example: light-green
        custom_field_settings:
          description: Array of custom field settings applied to the portfolio.
          readOnly: true
          type: array
          items:
            description: >-
              Custom Fields Settings objects represent the many-to-many join of the
              Custom Field and Project as well as stores information that is
              relevant to that particular pairing.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: custom_field_setting
              project: {}
              is_important:
                description: >-
                  `is_important` is used in the Asana web application to determine
                  if this custom field is displayed in the task list (left pane) of
                  a project. A project can have a maximum of 5 custom field settings
                  marked as `is_important`.
                type: boolean
                readOnly: true
                example: false
              parent: {}
              custom_field: {}
        owner: {}
        workspace: {}
        members: {}
    PortfolioCompact:
      description: >-
        A *portfolio* gives a high-level overview of the status of multiple
        initiatives in Asana. Portfolios provide a dashboard overview of
        the state of multiple projects, including a progress report and the
        most recent [project
        status](#asana-project-statuses)
        update.

        Portfolios have some restrictions on size. Each portfolio has a max of
        250 items and, like projects, a max of 20 custom fields.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: portfolio
        name:
          description: The name of the object.
          type: string
          example: Bug Task
    PortfolioObject:
      type: object
      properties:
        data:
          description: >-
            A *portfolio* gives a high-level overview of the status of multiple
            initiatives in Asana. Portfolios provide a dashboard overview of
            the state of multiple projects, including a progress report and the
            most recent [project
            status](#asana-project-statuses)
            update.

            Portfolios have some restrictions on size. Each portfolio has a max of
            250 items and, like projects, a max of 20 custom fields.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: portfolio
            name:
              description: The name of the object.
              type: string
              example: Bug Task
            created_at:
              description: The time at which this resource was created.
              type: string
              format: date-time
              readOnly: true
              example: '2012-02-22T02:06:58.147Z'
            created_by:
              description: >-
                The user who created this resource.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: user
                name:
                  description: >-
                    *Read-only except when same user as requester*. The user’s name.
                  type: string
                  example: Greg Sanchez
              readOnly: true
              nullable: true
            color:
              description: Color of the portfolio.
              type: string
              enum:
                - dark-pink
                - dark-green
                - dark-blue
                - dark-red
                - dark-teal
                - dark-brown
                - dark-orange
                - dark-purple
                - dark-warm-gray
                - light-pink
                - light-green
                - light-blue
                - light-red
                - light-teal
                - light-brown
                - light-orange
                - light-purple
                - light-warm-gray
              example: light-green
            custom_field_settings:
              description: Array of custom field settings applied to the portfolio.
              readOnly: true
              type: array
              items:
                description: >-
                  Custom Fields Settings objects represent the many-to-many join of
                  the
                  Custom Field and Project as well as stores information that is
                  relevant to that particular pairing.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: custom_field_setting
                  project: {}
                  is_important:
                    description: >-
                      `is_important` is used in the Asana web application to determine
                      if this custom field is displayed in the task list (left pane)
                      of
                      a project. A project can have a maximum of 5 custom field settings
                      marked as `is_important`.
                    type: boolean
                    readOnly: true
                    example: false
                  parent: {}
                  custom_field: {}
            owner: {}
            workspace: {}
            members: {}
    PortfolioArray:
      type: object
      properties:
        data:
          type: array
          items:
            description: >-
              A *portfolio* gives a high-level overview of the status of multiple
              initiatives in Asana. Portfolios provide a dashboard overview of
              the state of multiple projects, including a progress report and the
              most recent [project
              status](#asana-project-statuses)
              update.

              Portfolios have some restrictions on size. Each portfolio has a max
              of
              250 items and, like projects, a max of 20 custom fields.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: portfolio
              name:
                description: The name of the object.
                type: string
                example: Bug Task
    PortfolioMembership:
      description: >-
        This object determines if a user is a member of a portfolio.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: portfolio_membership
        user:
          description: >-
            A *user* object represents an account in Asana that can be given
            access to various workspaces, projects, and tasks.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: user
            name:
              description: >-
                *Read-only except when same user as requester*. The user’s name.
              type: string
              example: Greg Sanchez
        portfolio:
          description: >-
            A *portfolio* gives a high-level overview of the status of multiple
            initiatives in Asana. Portfolios provide a dashboard overview of
            the state of multiple projects, including a progress report and the
            most recent [project
            status](#asana-project-statuses)
            update.

            Portfolios have some restrictions on size. Each portfolio has a max of
            250 items and, like projects, a max of 20 custom fields.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: portfolio
            name:
              description: The name of the object.
              type: string
              example: Bug Task
    PortfolioMembershipCompact:
      description: >-
        This object determines if a user is a member of a portfolio.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: portfolio_membership
        user:
          description: >-
            A *user* object represents an account in Asana that can be given
            access to various workspaces, projects, and tasks.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: user
            name:
              description: >-
                *Read-only except when same user as requester*. The user’s name.
              type: string
              example: Greg Sanchez
    PortfolioMembershipObject:
      type: object
      properties:
        data:
          description: >-
            This object determines if a user is a member of a portfolio.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: portfolio_membership
            user:
              description: >-
                A *user* object represents an account in Asana that can be given
                access to various workspaces, projects, and tasks.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: user
                name:
                  description: >-
                    *Read-only except when same user as requester*. The user’s name.
                  type: string
                  example: Greg Sanchez
            portfolio:
              description: >-
                A *portfolio* gives a high-level overview of the status of multiple
                initiatives in Asana. Portfolios provide a dashboard overview of
                the state of multiple projects, including a progress report and the
                most recent [project
                status](#asana-project-statuses)
                update.

                Portfolios have some restrictions on size. Each portfolio has a max
                of
                250 items and, like projects, a max of 20 custom fields.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: portfolio
                name:
                  description: The name of the object.
                  type: string
                  example: Bug Task
    PortfolioMembershipArray:
      type: object
      properties:
        data:
          type: array
          items:
            description: >-
              This object determines if a user is a member of a portfolio.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: portfolio_membership
              user:
                description: >-
                  A *user* object represents an account in Asana that can be given
                  access to various workspaces, projects, and tasks.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: user
                  name:
                    description: >-
                      *Read-only except when same user as requester*. The user’s name.
                    type: string
                    example: Greg Sanchez
    Preview:
      type: object
      description: >-
        A collection of rich text that will be displayed as a preview to another
        app.


        This is read-only except for a small group of whitelisted apps.
      readOnly: true
      properties:
        fallback:
          description: Some fallback text to display if unable to display the full
            preview.
          type: string
          example: >-
            Greg: Great! I like this
            idea.\n\nhttps//a_company.slack.com/archives/ABCDEFG/12345678
        footer:
          description: Text to display in the footer.
          type: string
          example: Mar 17, 2019 1:25 PM
        header:
          description: Text to display in the header.
          type: string
          example: Asana for Slack
        header_link:
          description: Where the header will link to.
          type: string
          example: https://asana.comn/apps/slack
        html_text:
          description: HTML formatted text for the body of the preview.
          type: string
          example: <body>Great! I like this idea.</body>
        text:
          description: Text for the body of the preview.
          type: string
          example: Great! I like this idea.
        title:
          description: Text to display as the title.
          type: string
          example: Greg
        title_link:
          description: Where to title will link to.
          type: string
          example: https://asana.slack.com/archives/ABCDEFG/12345678
    Project:
      description: >-
        A *project* represents a prioritized list of tasks in Asana or a board
        with columns of tasks represented as cards. It exists in a single
        workspace or organization and is accessible to a subset of users in
        that workspace or organization, depending on its permissions.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: project
        name:
          description: >-
            Name of the project. This is generally a short sentence fragment
            that fits on a line in the UI for maximum readability. However, it
            can be longer.
          type: string
          example: Stuff to buy
        created_at:
          description: The time at which this resource was created.
          type: string
          format: date-time
          readOnly: true
          example: '2012-02-22T02:06:58.147Z'
        archived:
          description: >-
            True if the project is archived, false if not. Archived projects
            do not show in the UI by default and may be treated differently
            for queries.
          type: boolean
          example: false
        color:
          description: Color of the project.
          type: string
          nullable: true
          enum:
            - dark-pink
            - dark-green
            - dark-blue
            - dark-red
            - dark-teal
            - dark-brown
            - dark-orange
            - dark-purple
            - dark-warm-gray
            - light-pink
            - light-green
            - light-blue
            - light-red
            - light-teal
            - light-brown
            - light-orange
            - light-purple
            - light-warm-gray
          example: light-green
        current_status:
          description: >-
            The most recently created status update for the project, or `null`
            if no update exists. See also the documentation for [project
            status updates](#asana-project-statuses).
          type: object
          nullable: true
          readOnly: true
          properties:
            color:
              type: string
              enum:
                - green
                - yellow
                - red
              example: green
            text:
              type: string
              example: All gravy!
            author:
              description: >-
                A *user* object represents an account in Asana that can be given
                access to various workspaces, projects, and tasks.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: user
                name:
                  description: >-
                    *Read-only except when same user as requester*. The user’s name.
                  type: string
                  example: Greg Sanchez
          example:
            color: green
            text: Everything is great
            author:
              gid: '12345'
              name: Greg Bizarro
        custom_fields:
          description: Array of Custom Fields.
          readOnly: true
          type: array
          items:
            description: >-
              Custom Fields store the metadata that is used in order to
              add user-specified information to tasks in Asana. Be sure
              to reference the [Custom Fields](#asana-custom-fields)
              developer documentation for more information about how custom fields
              relate to various resources in Asana.


              Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields),
              which will make them read-only when accessed by other users.
              Attempting to edit a locked custom field will return HTTP error code
              `403 Forbidden`.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: custom_field
              name:
                description: The name of the object.
                type: string
                example: Bug Task
              resource_subtype:
                description: >
                  The type of the custom field. Must be one of the given values.
                type: string
                example: text
                enum:
                  - text
                  - enum
                  - number
              type:
                description: >
                  *Deprecated: new integrations should prefer the resource_subtype
                  field.* The type of the custom field. Must be one of the given
                  values.
                type: string
                readOnly: true
                enum:
                  - text
                  - enum
                  - number
              enum_options:
                description: >-
                  *Conditional*. Only relevant for custom fields of type `enum`.
                  This array specifies the possible values which an `enum` custom
                  field can adopt. To modify the enum options, refer to [working
                  with enum
                  options](#create-an-enum-option).
                type: array
                items:
                  description: >-
                    Enum options are the possible values which an enum custom field
                    can
                    adopt. An enum custom field must contain at least 1 enum option
                    but no
                    more than 50.


                    You can add enum options to a custom field by using the `POST
                    /custom_fields/custom_field_gid/enum_options` endpoint.


                    **It is not possible to remove or delete an enum option**. Instead,
                    enum options can be disabled by updating the `enabled` field to
                    false
                    with the `PUT /enum_options/enum_option_gid` endpoint. Other
                    attributes can be updated similarly.


                    On creation of an enum option, `enabled` is always set to `true`,
                    meaning the enum option is a selectable value for the custom field.
                    Setting `enabled=false` is equivalent to “trashing” the enum option
                    in
                    the Asana web app within the “Edit Fields” dialog. The enum option
                    will no longer be selectable but, if the enum option value was
                    previously set within a task, the task will retain the value.


                    Enum options are an ordered list and by default new enum options
                    are
                    inserted at the end. Ordering in relation to existing enum options
                    can
                    be specified on creation by using `insert_before` or `insert_after`
                    to
                    reference an existing enum option. Only one of `insert_before`
                    and
                    `insert_after` can be provided when creating a new enum option.


                    An enum options list can be reordered with the `POST
                    /custom_fields/custom_field_gid/enum_options/insert` endpoint.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: enum_option
                    name:
                      description: The name of the enum option.
                      type: string
                      example: Low
                    enabled:
                      description: "The color of the enum option. Defaults to \u2018\
                        none\u2019."
                      type: boolean
                      example: true
                    color:
                      description: >-
                        Whether or not the enum option is a selectable value for the
                        custom field.
                      type: string
                      example: blue
              enum_value: {}
              enabled:
                description: >-
                  *Conditional*. Determines if the custom field is enabled or not.
                type: boolean
                example: true
              text_value:
                description: >-
                  *Conditional*. This string is the value of a text custom field.
                type: string
                example: Some Value
        custom_field_settings:
          description: Array of Custom Field Settings (in compact form).
          readOnly: true
          type: array
          items:
            description: >-
              Custom Fields Settings objects represent the many-to-many join of the
              Custom Field and Project as well as stores information that is
              relevant to that particular pairing.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: custom_field_setting
        default_view:
          description: The default view (list, board, calendar, or timeline) of a
            project.
          type: string
          enum:
            - list
            - board
            - calendar
            - timeline
          example: calendar
        due_date:
          description: >-
            *Deprecated: new integrations should prefer the due_on field.*
          type: string
          nullable: true
          format: date-time
          example: '2012-03-26'
        due_on:
          description: >-
            The day on which this project is due. This takes a date with
            format YYYY-MM-DD.
          type: string
          nullable: true
          format: date-time
          example: '2012-03-26'
        followers:
          description: >-
            Array of users following this project. Followers are a subset of
            members who receive all notifications for a project, the default
            notification setting when adding members to a project in-product.
          type: array
          items:
            description: >-
              A *user* object represents an account in Asana that can be given
              access to various workspaces, projects, and tasks.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: user
              name:
                description: >-
                  *Read-only except when same user as requester*. The user’s name.
                type: string
                example: Greg Sanchez
          readOnly: true
        html_notes:
          description: >-
            [Opt In](#input-output-options).
            The notes of the project with formatting as HTML.

            *Note: This field is under active migration—please see our [blog
            post] (https://developers.asana.com/docs/#rich-text) for more
            information.*
          type: string
          example: These are things we need to purchase.
        is_template:
          description: >-
            [Opt In](#input-output-options).
            Determines if the project is a template.
          type: boolean
          example: false
        layout:
          description: The layout (board or list view) of a project
          type: string
          enum:
            - list
            - board
          readOnly: true
        members:
          description: Array of users who are members of this project.
          type: array
          items:
            description: >-
              A *user* object represents an account in Asana that can be given
              access to various workspaces, projects, and tasks.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: user
              name:
                description: >-
                  *Read-only except when same user as requester*. The user’s name.
                type: string
                example: Greg Sanchez
          readOnly: true
        modified_at:
          description: >-
            The time at which this project was last modified.

            *Note: This does not currently reflect any changes in
            associations such as tasks or comments that may have been added or
            removed from the project.*
          type: string
          readOnly: true
          format: date-time
          example: '2012-02-22T02:06:58.147Z'
        notes:
          description: >-
            More detailed, free-form textual information associated with the
            project.
          type: string
          example: These are things we need to purchase.
        owner: {}
        public:
          description: >-
            True if the project is public to the organization. If false, do
            not share this project with other users in this organization
            without explicitly checking to see if they have access.
          type: boolean
          example: false
        section_migration_status:
          description: >-
            *Read-only* The section migration status of this project.
          type: string
          enum:
            - not_migrated
            - in_progress
            - completed
          nullable: false
          readOnly: true
          example: not_migrated
        start_on:
          description: >-
            The day on which work for this project begins, or null if the
            project has no start date. This takes a date with `YYYY-MM-DD`
            format. *Note: `due_on` or `due_at` must be present in the
            request when setting or unsetting the `start_on` parameter.*
          type: string
          nullable: true
          format: date
          example: '2012-03-26'
        team: {}
        workspace: {}
    ProjectCompact:
      description: >-
        A *project* represents a prioritized list of tasks in Asana or a board
        with columns of tasks represented as cards. It exists in a single
        workspace or organization and is accessible to a subset of users in
        that workspace or organization, depending on its permissions.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: project
        name:
          description: >-
            Name of the project. This is generally a short sentence fragment
            that fits on a line in the UI for maximum readability. However, it
            can be longer.
          type: string
          example: Stuff to buy
    ProjectObject:
      type: object
      properties:
        data:
          description: >-
            A *project* represents a prioritized list of tasks in Asana or a board
            with columns of tasks represented as cards. It exists in a single
            workspace or organization and is accessible to a subset of users in
            that workspace or organization, depending on its permissions.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: project
            name:
              description: >-
                Name of the project. This is generally a short sentence fragment
                that fits on a line in the UI for maximum readability. However, it
                can be longer.
              type: string
              example: Stuff to buy
            created_at:
              description: The time at which this resource was created.
              type: string
              format: date-time
              readOnly: true
              example: '2012-02-22T02:06:58.147Z'
            archived:
              description: >-
                True if the project is archived, false if not. Archived projects
                do not show in the UI by default and may be treated differently
                for queries.
              type: boolean
              example: false
            color:
              description: Color of the project.
              type: string
              nullable: true
              enum:
                - dark-pink
                - dark-green
                - dark-blue
                - dark-red
                - dark-teal
                - dark-brown
                - dark-orange
                - dark-purple
                - dark-warm-gray
                - light-pink
                - light-green
                - light-blue
                - light-red
                - light-teal
                - light-brown
                - light-orange
                - light-purple
                - light-warm-gray
              example: light-green
            current_status:
              description: >-
                The most recently created status update for the project, or `null`
                if no update exists. See also the documentation for [project
                status updates](#asana-project-statuses).
              type: object
              nullable: true
              readOnly: true
              properties:
                color:
                  type: string
                  enum:
                    - green
                    - yellow
                    - red
                  example: green
                text:
                  type: string
                  example: All gravy!
                author:
                  description: >-
                    A *user* object represents an account in Asana that can be given
                    access to various workspaces, projects, and tasks.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: user
                    name:
                      description: >-
                        *Read-only except when same user as requester*. The user’s
                        name.
                      type: string
                      example: Greg Sanchez
              example:
                color: green
                text: Everything is great
                author:
                  gid: '12345'
                  name: Greg Bizarro
            custom_fields:
              description: Array of Custom Fields.
              readOnly: true
              type: array
              items:
                description: >-
                  Custom Fields store the metadata that is used in order to
                  add user-specified information to tasks in Asana. Be sure
                  to reference the [Custom Fields](#asana-custom-fields)
                  developer documentation for more information about how custom fields
                  relate to various resources in Asana.


                  Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields),
                  which will make them read-only when accessed by other users.
                  Attempting to edit a locked custom field will return HTTP error
                  code
                  `403 Forbidden`.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: custom_field
                  name:
                    description: The name of the object.
                    type: string
                    example: Bug Task
                  resource_subtype:
                    description: >
                      The type of the custom field. Must be one of the given values.
                    type: string
                    example: text
                    enum:
                      - text
                      - enum
                      - number
                  type:
                    description: >
                      *Deprecated: new integrations should prefer the resource_subtype
                      field.* The type of the custom field. Must be one of the given
                      values.
                    type: string
                    readOnly: true
                    enum:
                      - text
                      - enum
                      - number
                  enum_options:
                    description: >-
                      *Conditional*. Only relevant for custom fields of type `enum`.
                      This array specifies the possible values which an `enum` custom
                      field can adopt. To modify the enum options, refer to [working
                      with enum
                      options](#create-an-enum-option).
                    type: array
                    items:
                      description: >-
                        Enum options are the possible values which an enum custom
                        field can
                        adopt. An enum custom field must contain at least 1 enum option
                        but no
                        more than 50.


                        You can add enum options to a custom field by using the `POST
                        /custom_fields/custom_field_gid/enum_options` endpoint.


                        **It is not possible to remove or delete an enum option**.
                        Instead,
                        enum options can be disabled by updating the `enabled` field
                        to false
                        with the `PUT /enum_options/enum_option_gid` endpoint. Other
                        attributes can be updated similarly.


                        On creation of an enum option, `enabled` is always set to
                        `true`,
                        meaning the enum option is a selectable value for the custom
                        field.
                        Setting `enabled=false` is equivalent to “trashing” the enum
                        option in
                        the Asana web app within the “Edit Fields” dialog. The enum
                        option
                        will no longer be selectable but, if the enum option value
                        was
                        previously set within a task, the task will retain the value.


                        Enum options are an ordered list and by default new enum options
                        are
                        inserted at the end. Ordering in relation to existing enum
                        options can
                        be specified on creation by using `insert_before` or `insert_after`
                        to
                        reference an existing enum option. Only one of `insert_before`
                        and
                        `insert_after` can be provided when creating a new enum option.


                        An enum options list can be reordered with the `POST
                        /custom_fields/custom_field_gid/enum_options/insert` endpoint.
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the object, as a string.
                          type: string
                          readOnly: true
                          example: '12345'
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: enum_option
                        name:
                          description: The name of the enum option.
                          type: string
                          example: Low
                        enabled:
                          description: "The color of the enum option. Defaults to\
                            \ \u2018none\u2019."
                          type: boolean
                          example: true
                        color:
                          description: >-
                            Whether or not the enum option is a selectable value for
                            the
                            custom field.
                          type: string
                          example: blue
                  enum_value: {}
                  enabled:
                    description: >-
                      *Conditional*. Determines if the custom field is enabled or
                      not.
                    type: boolean
                    example: true
                  text_value:
                    description: >-
                      *Conditional*. This string is the value of a text custom field.
                    type: string
                    example: Some Value
            custom_field_settings:
              description: Array of Custom Field Settings (in compact form).
              readOnly: true
              type: array
              items:
                description: >-
                  Custom Fields Settings objects represent the many-to-many join of
                  the
                  Custom Field and Project as well as stores information that is
                  relevant to that particular pairing.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: custom_field_setting
            default_view:
              description: The default view (list, board, calendar, or timeline) of
                a project.
              type: string
              enum:
                - list
                - board
                - calendar
                - timeline
              example: calendar
            due_date:
              description: >-
                *Deprecated: new integrations should prefer the due_on field.*
              type: string
              nullable: true
              format: date-time
              example: '2012-03-26'
            due_on:
              description: >-
                The day on which this project is due. This takes a date with
                format YYYY-MM-DD.
              type: string
              nullable: true
              format: date-time
              example: '2012-03-26'
            followers:
              description: >-
                Array of users following this project. Followers are a subset of
                members who receive all notifications for a project, the default
                notification setting when adding members to a project in-product.
              type: array
              items:
                description: >-
                  A *user* object represents an account in Asana that can be given
                  access to various workspaces, projects, and tasks.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: user
                  name:
                    description: >-
                      *Read-only except when same user as requester*. The user’s name.
                    type: string
                    example: Greg Sanchez
              readOnly: true
            html_notes:
              description: >-
                [Opt In](#input-output-options).
                The notes of the project with formatting as HTML.

                *Note: This field is under active migration—please see our [blog
                post] (https://developers.asana.com/docs/#rich-text) for more
                information.*
              type: string
              example: These are things we need to purchase.
            is_template:
              description: >-
                [Opt In](#input-output-options).
                Determines if the project is a template.
              type: boolean
              example: false
            layout:
              description: The layout (board or list view) of a project
              type: string
              enum:
                - list
                - board
              readOnly: true
            members:
              description: Array of users who are members of this project.
              type: array
              items:
                description: >-
                  A *user* object represents an account in Asana that can be given
                  access to various workspaces, projects, and tasks.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: user
                  name:
                    description: >-
                      *Read-only except when same user as requester*. The user’s name.
                    type: string
                    example: Greg Sanchez
              readOnly: true
            modified_at:
              description: >-
                The time at which this project was last modified.

                *Note: This does not currently reflect any changes in
                associations such as tasks or comments that may have been added or
                removed from the project.*
              type: string
              readOnly: true
              format: date-time
              example: '2012-02-22T02:06:58.147Z'
            notes:
              description: >-
                More detailed, free-form textual information associated with the
                project.
              type: string
              example: These are things we need to purchase.
            owner: {}
            public:
              description: >-
                True if the project is public to the organization. If false, do
                not share this project with other users in this organization
                without explicitly checking to see if they have access.
              type: boolean
              example: false
            section_migration_status:
              description: >-
                *Read-only* The section migration status of this project.
              type: string
              enum:
                - not_migrated
                - in_progress
                - completed
              nullable: false
              readOnly: true
              example: not_migrated
            start_on:
              description: >-
                The day on which work for this project begins, or null if the
                project has no start date. This takes a date with `YYYY-MM-DD`
                format. *Note: `due_on` or `due_at` must be present in the
                request when setting or unsetting the `start_on` parameter.*
              type: string
              nullable: true
              format: date
              example: '2012-03-26'
            team: {}
            workspace: {}
    ProjectArray:
      type: object
      properties:
        data:
          type: array
          items:
            description: >-
              A *project* represents a prioritized list of tasks in Asana or a board
              with columns of tasks represented as cards. It exists in a single
              workspace or organization and is accessible to a subset of users in
              that workspace or organization, depending on its permissions.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: project
              name:
                description: >-
                  Name of the project. This is generally a short sentence fragment
                  that fits on a line in the UI for maximum readability. However,
                  it
                  can be longer.
                type: string
                example: Stuff to buy
              created_at:
                description: The time at which this resource was created.
                type: string
                format: date-time
                readOnly: true
                example: '2012-02-22T02:06:58.147Z'
              archived:
                description: >-
                  True if the project is archived, false if not. Archived projects
                  do not show in the UI by default and may be treated differently
                  for queries.
                type: boolean
                example: false
              color:
                description: Color of the project.
                type: string
                nullable: true
                enum:
                  - dark-pink
                  - dark-green
                  - dark-blue
                  - dark-red
                  - dark-teal
                  - dark-brown
                  - dark-orange
                  - dark-purple
                  - dark-warm-gray
                  - light-pink
                  - light-green
                  - light-blue
                  - light-red
                  - light-teal
                  - light-brown
                  - light-orange
                  - light-purple
                  - light-warm-gray
                example: light-green
              current_status:
                description: >-
                  The most recently created status update for the project, or `null`
                  if no update exists. See also the documentation for [project
                  status updates](#asana-project-statuses).
                type: object
                nullable: true
                readOnly: true
                properties:
                  color:
                    type: string
                    enum:
                      - green
                      - yellow
                      - red
                    example: green
                  text:
                    type: string
                    example: All gravy!
                  author:
                    description: >-
                      A *user* object represents an account in Asana that can be given
                      access to various workspaces, projects, and tasks.
                    type: object
                    properties:
                      gid:
                        description: >-
                          Globally unique identifier of the object, as a string.
                        type: string
                        readOnly: true
                        example: '12345'
                      resource_type:
                        description: The base type of this resource.
                        type: string
                        readOnly: true
                        example: user
                      name:
                        description: >-
                          *Read-only except when same user as requester*. The user’s
                          name.
                        type: string
                        example: Greg Sanchez
                example:
                  color: green
                  text: Everything is great
                  author:
                    gid: '12345'
                    name: Greg Bizarro
              custom_fields:
                description: Array of Custom Fields.
                readOnly: true
                type: array
                items:
                  description: >-
                    Custom Fields store the metadata that is used in order to
                    add user-specified information to tasks in Asana. Be sure
                    to reference the [Custom Fields](#asana-custom-fields)
                    developer documentation for more information about how custom
                    fields
                    relate to various resources in Asana.


                    Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields),
                    which will make them read-only when accessed by other users.
                    Attempting to edit a locked custom field will return HTTP error
                    code
                    `403 Forbidden`.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: custom_field
                    name:
                      description: The name of the object.
                      type: string
                      example: Bug Task
                    resource_subtype:
                      description: >
                        The type of the custom field. Must be one of the given values.
                      type: string
                      example: text
                      enum:
                        - text
                        - enum
                        - number
                    type:
                      description: >
                        *Deprecated: new integrations should prefer the resource_subtype
                        field.* The type of the custom field. Must be one of the given
                        values.
                      type: string
                      readOnly: true
                      enum:
                        - text
                        - enum
                        - number
                    enum_options:
                      description: >-
                        *Conditional*. Only relevant for custom fields of type `enum`.
                        This array specifies the possible values which an `enum` custom
                        field can adopt. To modify the enum options, refer to [working
                        with enum
                        options](#create-an-enum-option).
                      type: array
                      items:
                        description: >-
                          Enum options are the possible values which an enum custom
                          field can
                          adopt. An enum custom field must contain at least 1 enum
                          option but no
                          more than 50.


                          You can add enum options to a custom field by using the
                          `POST
                          /custom_fields/custom_field_gid/enum_options` endpoint.


                          **It is not possible to remove or delete an enum option**.
                          Instead,
                          enum options can be disabled by updating the `enabled` field
                          to false
                          with the `PUT /enum_options/enum_option_gid` endpoint. Other
                          attributes can be updated similarly.


                          On creation of an enum option, `enabled` is always set to
                          `true`,
                          meaning the enum option is a selectable value for the custom
                          field.
                          Setting `enabled=false` is equivalent to “trashing” the
                          enum option in
                          the Asana web app within the “Edit Fields” dialog. The enum
                          option
                          will no longer be selectable but, if the enum option value
                          was
                          previously set within a task, the task will retain the value.


                          Enum options are an ordered list and by default new enum
                          options are
                          inserted at the end. Ordering in relation to existing enum
                          options can
                          be specified on creation by using `insert_before` or `insert_after`
                          to
                          reference an existing enum option. Only one of `insert_before`
                          and
                          `insert_after` can be provided when creating a new enum
                          option.


                          An enum options list can be reordered with the `POST
                          /custom_fields/custom_field_gid/enum_options/insert` endpoint.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: enum_option
                          name:
                            description: The name of the enum option.
                            type: string
                            example: Low
                          enabled:
                            description: "The color of the enum option. Defaults to\
                              \ \u2018none\u2019."
                            type: boolean
                            example: true
                          color:
                            description: >-
                              Whether or not the enum option is a selectable value
                              for the
                              custom field.
                            type: string
                            example: blue
                    enum_value: {}
                    enabled:
                      description: >-
                        *Conditional*. Determines if the custom field is enabled or
                        not.
                      type: boolean
                      example: true
                    text_value:
                      description: >-
                        *Conditional*. This string is the value of a text custom field.
                      type: string
                      example: Some Value
              custom_field_settings:
                description: Array of Custom Field Settings (in compact form).
                readOnly: true
                type: array
                items:
                  description: >-
                    Custom Fields Settings objects represent the many-to-many join
                    of the
                    Custom Field and Project as well as stores information that is
                    relevant to that particular pairing.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: custom_field_setting
              default_view:
                description: The default view (list, board, calendar, or timeline)
                  of a project.
                type: string
                enum:
                  - list
                  - board
                  - calendar
                  - timeline
                example: calendar
              due_date:
                description: >-
                  *Deprecated: new integrations should prefer the due_on field.*
                type: string
                nullable: true
                format: date-time
                example: '2012-03-26'
              due_on:
                description: >-
                  The day on which this project is due. This takes a date with
                  format YYYY-MM-DD.
                type: string
                nullable: true
                format: date-time
                example: '2012-03-26'
              followers:
                description: >-
                  Array of users following this project. Followers are a subset of
                  members who receive all notifications for a project, the default
                  notification setting when adding members to a project in-product.
                type: array
                items:
                  description: >-
                    A *user* object represents an account in Asana that can be given
                    access to various workspaces, projects, and tasks.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: user
                    name:
                      description: >-
                        *Read-only except when same user as requester*. The user’s
                        name.
                      type: string
                      example: Greg Sanchez
                readOnly: true
              html_notes:
                description: >-
                  [Opt In](#input-output-options).
                  The notes of the project with formatting as HTML.

                  *Note: This field is under active migration—please see our [blog
                  post] (https://developers.asana.com/docs/#rich-text) for more
                  information.*
                type: string
                example: These are things we need to purchase.
              is_template:
                description: >-
                  [Opt In](#input-output-options).
                  Determines if the project is a template.
                type: boolean
                example: false
              layout:
                description: The layout (board or list view) of a project
                type: string
                enum:
                  - list
                  - board
                readOnly: true
              members:
                description: Array of users who are members of this project.
                type: array
                items:
                  description: >-
                    A *user* object represents an account in Asana that can be given
                    access to various workspaces, projects, and tasks.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: user
                    name:
                      description: >-
                        *Read-only except when same user as requester*. The user’s
                        name.
                      type: string
                      example: Greg Sanchez
                readOnly: true
              modified_at:
                description: >-
                  The time at which this project was last modified.

                  *Note: This does not currently reflect any changes in
                  associations such as tasks or comments that may have been added
                  or
                  removed from the project.*
                type: string
                readOnly: true
                format: date-time
                example: '2012-02-22T02:06:58.147Z'
              notes:
                description: >-
                  More detailed, free-form textual information associated with the
                  project.
                type: string
                example: These are things we need to purchase.
              owner: {}
              public:
                description: >-
                  True if the project is public to the organization. If false, do
                  not share this project with other users in this organization
                  without explicitly checking to see if they have access.
                type: boolean
                example: false
              section_migration_status:
                description: >-
                  *Read-only* The section migration status of this project.
                type: string
                enum:
                  - not_migrated
                  - in_progress
                  - completed
                nullable: false
                readOnly: true
                example: not_migrated
              start_on:
                description: >-
                  The day on which work for this project begins, or null if the
                  project has no start date. This takes a date with `YYYY-MM-DD`
                  format. *Note: `due_on` or `due_at` must be present in the
                  request when setting or unsetting the `start_on` parameter.*
                type: string
                nullable: true
                format: date
                example: '2012-03-26'
              team: {}
              workspace: {}
    ProjectMembership:
      description: >-
        With the introduction of “comment-only” projects in Asana, a user’s
        membership in a project comes with associated permissions. These
        permissions (whether a user has full access to the project or
        comment-only access) are accessible through the project memberships
        endpoints described here.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: project_membership
        user:
          description: >-
            A *user* object represents an account in Asana that can be given
            access to various workspaces, projects, and tasks.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: user
            name:
              description: >-
                *Read-only except when same user as requester*. The user’s name.
              type: string
              example: Greg Sanchez
        project:
          description: >-
            A *project* represents a prioritized list of tasks in Asana or a board
            with columns of tasks represented as cards. It exists in a single
            workspace or organization and is accessible to a subset of users in
            that workspace or organization, depending on its permissions.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: project
            name:
              description: >-
                Name of the project. This is generally a short sentence fragment
                that fits on a line in the UI for maximum readability. However, it
                can be longer.
              type: string
              example: Stuff to buy
        write_access:
          description: >-
            Whether the user has full access to the project or has
            comment-only access.
          type: string
          enum:
            - full_write
            - comment_only
          readOnly: true
          example: full_write
    ProjectMembershipCompact:
      description: >-
        With the introduction of “comment-only” projects in Asana, a user’s
        membership in a project comes with associated permissions. These
        permissions (whether a user has full access to the project or
        comment-only access) are accessible through the project memberships
        endpoints described here.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: project_membership
        user:
          description: >-
            A *user* object represents an account in Asana that can be given
            access to various workspaces, projects, and tasks.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: user
            name:
              description: >-
                *Read-only except when same user as requester*. The user’s name.
              type: string
              example: Greg Sanchez
    ProjectMembershipObject:
      type: object
      properties:
        data:
          description: >-
            With the introduction of “comment-only” projects in Asana, a user’s
            membership in a project comes with associated permissions. These
            permissions (whether a user has full access to the project or
            comment-only access) are accessible through the project memberships
            endpoints described here.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: project_membership
            user:
              description: >-
                A *user* object represents an account in Asana that can be given
                access to various workspaces, projects, and tasks.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: user
                name:
                  description: >-
                    *Read-only except when same user as requester*. The user’s name.
                  type: string
                  example: Greg Sanchez
            project:
              description: >-
                A *project* represents a prioritized list of tasks in Asana or a board
                with columns of tasks represented as cards. It exists in a single
                workspace or organization and is accessible to a subset of users in
                that workspace or organization, depending on its permissions.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: project
                name:
                  description: >-
                    Name of the project. This is generally a short sentence fragment
                    that fits on a line in the UI for maximum readability. However,
                    it
                    can be longer.
                  type: string
                  example: Stuff to buy
            write_access:
              description: >-
                Whether the user has full access to the project or has
                comment-only access.
              type: string
              enum:
                - full_write
                - comment_only
              readOnly: true
              example: full_write
    ProjectMembershipArray:
      type: object
      properties:
        data:
          type: array
          items:
            description: >-
              With the introduction of “comment-only” projects in Asana, a user’s
              membership in a project comes with associated permissions. These
              permissions (whether a user has full access to the project or
              comment-only access) are accessible through the project memberships
              endpoints described here.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: project_membership
              user:
                description: >-
                  A *user* object represents an account in Asana that can be given
                  access to various workspaces, projects, and tasks.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: user
                  name:
                    description: >-
                      *Read-only except when same user as requester*. The user’s name.
                    type: string
                    example: Greg Sanchez
    ProjectStatus:
      description: >-
        A *project status* is an update on the progress of a particular
        project, and is sent out to all project followers when created. These
        updates include both text describing the update and a color code
        intended to represent the overall state of the project: "green" for
        projects that are on track, "yellow" for projects at risk, and "red"
        for projects that are behind.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: project_status
        title:
          description: The title of the project status update.
          readOnly: true
          type: string
          example: Status Update - Jun 15
        created_at:
          description: The time at which this resource was created.
          type: string
          format: date-time
          readOnly: true
          example: '2012-02-22T02:06:58.147Z'
        created_by:
          description: >-
            The user who created this resource.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: user
            name:
              description: >-
                *Read-only except when same user as requester*. The user’s name.
              type: string
              example: Greg Sanchez
          readOnly: true
          nullable: true
        text:
          description: The text content of the status update.
          readOnly: true
          type: string
          example: The project is moving forward according to plan...
        html-text:
          description: >-
            [Opt
            In](#input-output-options).
            The text content of the status update with formatting as HTML.
          readOnly: true
          type: string
          example: >-
            '&lt;body&gt;The project &lt;strong&gt;is&lt;/strong&gt; moving
            forward according to plan...&lt;/body&gt;'
        color:
          description: The color associated with the status update.
          readOnly: true
          type: string
          enum:
            - green
            - yellow
            - red
    ProjectStatusCompact:
      description: >-
        A *project status* is an update on the progress of a particular
        project, and is sent out to all project followers when created. These
        updates include both text describing the update and a color code
        intended to represent the overall state of the project: "green" for
        projects that are on track, "yellow" for projects at risk, and "red"
        for projects that are behind.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: project_status
        title:
          description: The title of the project status update.
          readOnly: true
          type: string
          example: Status Update - Jun 15
    ProjectStatusObject:
      type: object
      properties:
        data:
          description: >-
            A *project status* is an update on the progress of a particular
            project, and is sent out to all project followers when created. These
            updates include both text describing the update and a color code
            intended to represent the overall state of the project: "green" for
            projects that are on track, "yellow" for projects at risk, and "red"
            for projects that are behind.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: project_status
            title:
              description: The title of the project status update.
              readOnly: true
              type: string
              example: Status Update - Jun 15
            created_at:
              description: The time at which this resource was created.
              type: string
              format: date-time
              readOnly: true
              example: '2012-02-22T02:06:58.147Z'
            created_by:
              description: >-
                The user who created this resource.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: user
                name:
                  description: >-
                    *Read-only except when same user as requester*. The user’s name.
                  type: string
                  example: Greg Sanchez
              readOnly: true
              nullable: true
            text:
              description: The text content of the status update.
              readOnly: true
              type: string
              example: The project is moving forward according to plan...
            html-text:
              description: >-
                [Opt
                In](#input-output-options).
                The text content of the status update with formatting as HTML.
              readOnly: true
              type: string
              example: >-
                '&lt;body&gt;The project &lt;strong&gt;is&lt;/strong&gt; moving
                forward according to plan...&lt;/body&gt;'
            color:
              description: The color associated with the status update.
              readOnly: true
              type: string
              enum:
                - green
                - yellow
                - red
    ProjectStatusArray:
      type: object
      properties:
        data:
          type: array
          items:
            description: >-
              A *project status* is an update on the progress of a particular
              project, and is sent out to all project followers when created. These
              updates include both text describing the update and a color code
              intended to represent the overall state of the project: "green" for
              projects that are on track, "yellow" for projects at risk, and "red"
              for projects that are behind.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: project_status
              title:
                description: The title of the project status update.
                readOnly: true
                type: string
                example: Status Update - Jun 15
              created_at:
                description: The time at which this resource was created.
                type: string
                format: date-time
                readOnly: true
                example: '2012-02-22T02:06:58.147Z'
              created_by:
                description: >-
                  The user who created this resource.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: user
                  name:
                    description: >-
                      *Read-only except when same user as requester*. The user’s name.
                    type: string
                    example: Greg Sanchez
                readOnly: true
                nullable: true
              text:
                description: The text content of the status update.
                readOnly: true
                type: string
                example: The project is moving forward according to plan...
              html-text:
                description: >-
                  [Opt
                  In](#input-output-options).
                  The text content of the status update with formatting as HTML.
                readOnly: true
                type: string
                example: >-
                  '&lt;body&gt;The project &lt;strong&gt;is&lt;/strong&gt; moving
                  forward according to plan...&lt;/body&gt;'
              color:
                description: The color associated with the status update.
                readOnly: true
                type: string
                enum:
                  - green
                  - yellow
                  - red
    Section:
      description: >-
        A *section* is a subdivision of a project that groups tasks together.
        It can either be a header above a list of tasks in a list view or a
        column in a board view of a project.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: section
        name:
          description: >-
            The name of the section (i.e. the text displayed as the section
            header).
          type: string
          example: Next Actions
        created_at:
          description: The time at which this resource was created.
          type: string
          format: date-time
          readOnly: true
          example: '2012-02-22T02:06:58.147Z'
        projects:
          type: array
          items:
            description: >-
              A *project* represents a prioritized list of tasks in Asana or a board
              with columns of tasks represented as cards. It exists in a single
              workspace or organization and is accessible to a subset of users in
              that workspace or organization, depending on its permissions.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: project
              name:
                description: >-
                  Name of the project. This is generally a short sentence fragment
                  that fits on a line in the UI for maximum readability. However,
                  it
                  can be longer.
                type: string
                example: Stuff to buy
    SectionCompact:
      description: >-
        A *section* is a subdivision of a project that groups tasks together.
        It can either be a header above a list of tasks in a list view or a
        column in a board view of a project.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: section
        name:
          description: >-
            The name of the section (i.e. the text displayed as the section
            header).
          type: string
          example: Next Actions
    SectionObject:
      type: object
      properties:
        data:
          description: >-
            A *section* is a subdivision of a project that groups tasks together.
            It can either be a header above a list of tasks in a list view or a
            column in a board view of a project.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: section
            name:
              description: >-
                The name of the section (i.e. the text displayed as the section
                header).
              type: string
              example: Next Actions
            created_at:
              description: The time at which this resource was created.
              type: string
              format: date-time
              readOnly: true
              example: '2012-02-22T02:06:58.147Z'
            projects:
              type: array
              items:
                description: >-
                  A *project* represents a prioritized list of tasks in Asana or a
                  board
                  with columns of tasks represented as cards. It exists in a single
                  workspace or organization and is accessible to a subset of users
                  in
                  that workspace or organization, depending on its permissions.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: project
                  name:
                    description: >-
                      Name of the project. This is generally a short sentence fragment
                      that fits on a line in the UI for maximum readability. However,
                      it
                      can be longer.
                    type: string
                    example: Stuff to buy
    SectionArray:
      type: object
      properties:
        data:
          type: array
          items:
            description: >-
              A *section* is a subdivision of a project that groups tasks together.
              It can either be a header above a list of tasks in a list view or a
              column in a board view of a project.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: section
              name:
                description: >-
                  The name of the section (i.e. the text displayed as the section
                  header).
                type: string
                example: Next Actions
              created_at:
                description: The time at which this resource was created.
                type: string
                format: date-time
                readOnly: true
                example: '2012-02-22T02:06:58.147Z'
              projects:
                type: array
                items:
                  description: >-
                    A *project* represents a prioritized list of tasks in Asana or
                    a board
                    with columns of tasks represented as cards. It exists in a single
                    workspace or organization and is accessible to a subset of users
                    in
                    that workspace or organization, depending on its permissions.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: project
                    name:
                      description: >-
                        Name of the project. This is generally a short sentence fragment
                        that fits on a line in the UI for maximum readability. However,
                        it
                        can be longer.
                      type: string
                      example: Stuff to buy
    Story:
      description: >-
        A story represents an activity associated with an object in the Asana
        system.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: story
        resource_subtype:
          description: >-
            The subtype of this resource. Different subtypes retain many of the
            same fields and behavior, but may render differently in Asana or
            represent resources with different semantic meaning.
          type: string
          readOnly: true
          example: comment_added
        created_at:
          description: The time at which this resource was created.
          type: string
          format: date-time
          readOnly: true
          example: '2012-02-22T02:06:58.147Z'
        created_by:
          description: >-
            The user who created this resource.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: user
            name:
              description: >-
                *Read-only except when same user as requester*. The user’s name.
              type: string
              example: Greg Sanchez
          readOnly: true
          nullable: true
        text:
          description: >-
            *Create-only*. Human-readable text for the story or comment.

            This will not include the name of the creator.

            *Note: This is not guaranteed to be stable for a given type of
            story. For example, text for a reassignment may not always say
            “assigned to …” as the text for a story can both be edited and
            change based on the language settings of the user making the
            request.*

            Use the `resource_subtype` property to discover the action that
            created the story.
          example: marked today
        type:
          description: >
            *Deprecated: new integrations should prefer the
            `resource_subtype` field.*
          type: string
          readOnly: true
          example: comment
        html_text:
          description: >-
            [Opt
            In](#input-output-options).

            HTML formatted text for a comment. This will not include the name

            of the creator.


            *Note: This field is under active migration—please see our blog

            post for more information.*
          type: string
          example: Get whatever Sashimi has.
        is_edited:
          description: >-
            *Conditional*. Whether the text of the story has been edited
            after creation.
          type: boolean
          readOnly: true
          example: false
        is_pinned:
          description: >-
            *Conditional*. Whether the story should be pinned on the
            resource.
          type: boolean
          example: false
        hearted:
          description: >-
            *Deprecated - please use likes instead*


            *Conditional*. True if the story is hearted by the authorized
            user, false if not.
          type: boolean
          readOnly: true
          example: false
        hearts:
          description: |-
            *Deprecated - please use likes instead*

            *Conditional*. Array of users who have hearted this story.
          type: array
          items:
            description: >-
              A *user* object represents an account in Asana that can be given
              access to various workspaces, projects, and tasks.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: user
              name:
                description: >-
                  *Read-only except when same user as requester*. The user’s name.
                type: string
                example: Greg Sanchez
          readOnly: true
        num_hearts:
          description: |-
            *Deprecated - please use likes instead*

            *Conditional*. The number of users who have hearted this story.
          type: integer
          readOnly: true
          example: 5
        liked:
          description: >-
            *Conditional*. True if the story is liked by the authorized
            user, false if not.
          type: boolean
          readOnly: true
          example: false
        likes:
          description: >-
            *Conditional*. Array of users who have liked this story.
          type: array
          items:
            description: >-
              A *user* object represents an account in Asana that can be given
              access to various workspaces, projects, and tasks.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: user
              name:
                description: >-
                  *Read-only except when same user as requester*. The user’s name.
                type: string
                example: Greg Sanchez
          readOnly: true
        num_likes:
          description: >-
            *Conditional*. The number of users who have liked this story.
          type: integer
          readOnly: true
          example: 5
        previews:
          description: >-
            *Conditional*. A collection of previews to be displayed in the
            story.


            *Note: This property only exists for comment stories.*
          type: array
          items:
            type: object
            description: >-
              A collection of rich text that will be displayed as a preview to another
              app.


              This is read-only except for a small group of whitelisted apps.
            readOnly: true
            properties:
              fallback:
                description: Some fallback text to display if unable to display the
                  full preview.
                type: string
                example: >-
                  Greg: Great! I like this
                  idea.\n\nhttps//a_company.slack.com/archives/ABCDEFG/12345678
              footer:
                description: Text to display in the footer.
                type: string
                example: Mar 17, 2019 1:25 PM
              header:
                description: Text to display in the header.
                type: string
                example: Asana for Slack
              header_link:
                description: Where the header will link to.
                type: string
                example: https://asana.comn/apps/slack
              html_text:
                description: HTML formatted text for the body of the preview.
                type: string
                example: <body>Great! I like this idea.</body>
              text:
                description: Text for the body of the preview.
                type: string
                example: Great! I like this idea.
              title:
                description: Text to display as the title.
                type: string
                example: Greg
              title_link:
                description: Where to title will link to.
                type: string
                example: https://asana.slack.com/archives/ABCDEFG/12345678
          readOnly: true
        old_name:
          description: >-
            *Conditional*'
          type: string
          example: This was the Old Name
        new_name:
          description: >-
            *Conditional*
          type: string
          readOnly: true
          example: This is the New Name
        old_dates:
          description: >-
            *Conditional*
          type: object
          readOnly: true
          properties:
            start_on:
              type: string
              format: date
              example: '2019-09-15'
            due_at:
              type: string
              format: date-time
              example: '2012-02-22T02:06:58.158Z'
            due_on:
              type: string
              format: date
              example: '2019-09-15'
        new_dates:
          description: >-
            *Conditional*
          type: object
          readOnly: true
          properties:
            start_on:
              type: string
              format: date
              example: '2019-09-15'
            due_at:
              type: string
              format: date-time
              example: '2012-02-22T02:06:58.158Z'
            due_on:
              type: string
              format: date
              example: '2019-09-15'
        old_resource_subtype:
          description: >-
            *Conditional*
          type: string
          readOnly: true
          example: default_task
        new_resource_subtype:
          description: >-
            *Conditional*
          type: string
          readOnly: true
          example: milestone
        story:
          description: >-
            A story represents an activity associated with an object in the Asana
            system.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: story
            resource_subtype:
              description: >-
                The subtype of this resource. Different subtypes retain many of the
                same fields and behavior, but may render differently in Asana or
                represent resources with different semantic meaning.
              type: string
              readOnly: true
              example: comment_added
            created_at:
              description: The time at which this resource was created.
              type: string
              format: date-time
              readOnly: true
              example: '2012-02-22T02:06:58.147Z'
            created_by:
              description: >-
                The user who created this resource.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: user
                name:
                  description: >-
                    *Read-only except when same user as requester*. The user’s name.
                  type: string
                  example: Greg Sanchez
              readOnly: true
              nullable: true
            text:
              description: >-
                *Create-only*. Human-readable text for the story or comment.

                This will not include the name of the creator.

                *Note: This is not guaranteed to be stable for a given type of
                story. For example, text for a reassignment may not always say
                “assigned to …” as the text for a story can both be edited and
                change based on the language settings of the user making the
                request.*

                Use the `resource_subtype` property to discover the action that
                created the story.
              example: marked today
            type:
              description: >
                *Deprecated: new integrations should prefer the
                `resource_subtype` field.*
              type: string
              readOnly: true
              example: comment
        assignee:
          description: >-
            A *user* object represents an account in Asana that can be given
            access to various workspaces, projects, and tasks.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: user
            name:
              description: >-
                *Read-only except when same user as requester*. The user’s name.
              type: string
              example: Greg Sanchez
        follower:
          description: >-
            A *user* object represents an account in Asana that can be given
            access to various workspaces, projects, and tasks.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: user
            name:
              description: >-
                *Read-only except when same user as requester*. The user’s name.
              type: string
              example: Greg Sanchez
        old_section:
          description: >-
            A *section* is a subdivision of a project that groups tasks together.
            It can either be a header above a list of tasks in a list view or a
            column in a board view of a project.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: section
            name:
              description: >-
                The name of the section (i.e. the text displayed as the section
                header).
              type: string
              example: Next Actions
        new_section:
          description: >-
            A *section* is a subdivision of a project that groups tasks together.
            It can either be a header above a list of tasks in a list view or a
            column in a board view of a project.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: section
            name:
              description: >-
                The name of the section (i.e. the text displayed as the section
                header).
              type: string
              example: Next Actions
        task:
          description: >-
            The *task* is the basic object around which many operations in Asana
            are centered.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: task
            name:
              description: The name of the object.
              type: string
              example: Bug Task
        project:
          description: >-
            A *project* represents a prioritized list of tasks in Asana or a board
            with columns of tasks represented as cards. It exists in a single
            workspace or organization and is accessible to a subset of users in
            that workspace or organization, depending on its permissions.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: project
            name:
              description: >-
                Name of the project. This is generally a short sentence fragment
                that fits on a line in the UI for maximum readability. However, it
                can be longer.
              type: string
              example: Stuff to buy
        tag:
          description: >-
            A *tag* is a label that can be attached to any task in Asana. It
            exists in a single workspace or organization.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: tag
            name:
              description: >-
                Name of the tag. This is generally a short sentence fragment that
                fits on a line in the UI for maximum readability. However, it can
                be longer.
              type: string
              example: Stuff to buy
        custom_field:
          description: >-
            Custom Fields store the metadata that is used in order to
            add user-specified information to tasks in Asana. Be sure
            to reference the [Custom Fields](#asana-custom-fields)
            developer documentation for more information about how custom fields
            relate to various resources in Asana.


            Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields),
            which will make them read-only when accessed by other users.
            Attempting to edit a locked custom field will return HTTP error code
            `403 Forbidden`.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: custom_field
            name:
              description: The name of the object.
              type: string
              example: Bug Task
            resource_subtype:
              description: >
                The type of the custom field. Must be one of the given values.
              type: string
              example: text
              enum:
                - text
                - enum
                - number
            type:
              description: >
                *Deprecated: new integrations should prefer the resource_subtype
                field.* The type of the custom field. Must be one of the given
                values.
              type: string
              readOnly: true
              enum:
                - text
                - enum
                - number
            enum_options:
              description: >-
                *Conditional*. Only relevant for custom fields of type `enum`.
                This array specifies the possible values which an `enum` custom
                field can adopt. To modify the enum options, refer to [working
                with enum
                options](#create-an-enum-option).
              type: array
              items:
                description: >-
                  Enum options are the possible values which an enum custom field
                  can
                  adopt. An enum custom field must contain at least 1 enum option
                  but no
                  more than 50.


                  You can add enum options to a custom field by using the `POST
                  /custom_fields/custom_field_gid/enum_options` endpoint.


                  **It is not possible to remove or delete an enum option**. Instead,
                  enum options can be disabled by updating the `enabled` field to
                  false
                  with the `PUT /enum_options/enum_option_gid` endpoint. Other
                  attributes can be updated similarly.


                  On creation of an enum option, `enabled` is always set to `true`,
                  meaning the enum option is a selectable value for the custom field.
                  Setting `enabled=false` is equivalent to “trashing” the enum option
                  in
                  the Asana web app within the “Edit Fields” dialog. The enum option
                  will no longer be selectable but, if the enum option value was
                  previously set within a task, the task will retain the value.


                  Enum options are an ordered list and by default new enum options
                  are
                  inserted at the end. Ordering in relation to existing enum options
                  can
                  be specified on creation by using `insert_before` or `insert_after`
                  to
                  reference an existing enum option. Only one of `insert_before` and
                  `insert_after` can be provided when creating a new enum option.


                  An enum options list can be reordered with the `POST
                  /custom_fields/custom_field_gid/enum_options/insert` endpoint.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: enum_option
                  name:
                    description: The name of the enum option.
                    type: string
                    example: Low
                  enabled:
                    description: "The color of the enum option. Defaults to \u2018\
                      none\u2019."
                    type: boolean
                    example: true
                  color:
                    description: >-
                      Whether or not the enum option is a selectable value for the
                      custom field.
                    type: string
                    example: blue
            enum_value: {}
            enabled:
              description: >-
                *Conditional*. Determines if the custom field is enabled or not.
              type: boolean
              example: true
            text_value:
              description: >-
                *Conditional*. This string is the value of a text custom field.
              type: string
              example: Some Value
        old_text_value:
          description: >-
            *Conditional*
          type: string
          readOnly: true
          example: This was the Old Text
        new_text_value:
          description: >-
            *Conditional*
          type: string
          readOnly: true
          example: This is the New Text
        old_number_value:
          description: >-
            *Conditional*
          type: integer
          readOnly: true
          example: 1
        new_number_value:
          description: >-
            *Conditional*
          type: integer
          readOnly: true
          example: 2
        old_enum_value:
          description: >-
            Enum options are the possible values which an enum custom field can
            adopt. An enum custom field must contain at least 1 enum option but no
            more than 50.


            You can add enum options to a custom field by using the `POST
            /custom_fields/custom_field_gid/enum_options` endpoint.


            **It is not possible to remove or delete an enum option**. Instead,
            enum options can be disabled by updating the `enabled` field to false
            with the `PUT /enum_options/enum_option_gid` endpoint. Other
            attributes can be updated similarly.


            On creation of an enum option, `enabled` is always set to `true`,
            meaning the enum option is a selectable value for the custom field.
            Setting `enabled=false` is equivalent to “trashing” the enum option in
            the Asana web app within the “Edit Fields” dialog. The enum option
            will no longer be selectable but, if the enum option value was
            previously set within a task, the task will retain the value.


            Enum options are an ordered list and by default new enum options are
            inserted at the end. Ordering in relation to existing enum options can
            be specified on creation by using `insert_before` or `insert_after` to
            reference an existing enum option. Only one of `insert_before` and
            `insert_after` can be provided when creating a new enum option.


            An enum options list can be reordered with the `POST
            /custom_fields/custom_field_gid/enum_options/insert` endpoint.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: enum_option
            name:
              description: The name of the enum option.
              type: string
              example: Low
            enabled:
              description: "The color of the enum option. Defaults to \u2018none\u2019\
                ."
              type: boolean
              example: true
            color:
              description: >-
                Whether or not the enum option is a selectable value for the
                custom field.
              type: string
              example: blue
        new_enum_value:
          description: >-
            Enum options are the possible values which an enum custom field can
            adopt. An enum custom field must contain at least 1 enum option but no
            more than 50.


            You can add enum options to a custom field by using the `POST
            /custom_fields/custom_field_gid/enum_options` endpoint.


            **It is not possible to remove or delete an enum option**. Instead,
            enum options can be disabled by updating the `enabled` field to false
            with the `PUT /enum_options/enum_option_gid` endpoint. Other
            attributes can be updated similarly.


            On creation of an enum option, `enabled` is always set to `true`,
            meaning the enum option is a selectable value for the custom field.
            Setting `enabled=false` is equivalent to “trashing” the enum option in
            the Asana web app within the “Edit Fields” dialog. The enum option
            will no longer be selectable but, if the enum option value was
            previously set within a task, the task will retain the value.


            Enum options are an ordered list and by default new enum options are
            inserted at the end. Ordering in relation to existing enum options can
            be specified on creation by using `insert_before` or `insert_after` to
            reference an existing enum option. Only one of `insert_before` and
            `insert_after` can be provided when creating a new enum option.


            An enum options list can be reordered with the `POST
            /custom_fields/custom_field_gid/enum_options/insert` endpoint.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: enum_option
            name:
              description: The name of the enum option.
              type: string
              example: Low
            enabled:
              description: "The color of the enum option. Defaults to \u2018none\u2019\
                ."
              type: boolean
              example: true
            color:
              description: >-
                Whether or not the enum option is a selectable value for the
                custom field.
              type: string
              example: blue
        duplicate_of:
          description: >-
            The *task* is the basic object around which many operations in Asana
            are centered.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: task
            name:
              description: The name of the object.
              type: string
              example: Bug Task
        duplicated_from:
          description: >-
            The *task* is the basic object around which many operations in Asana
            are centered.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: task
            name:
              description: The name of the object.
              type: string
              example: Bug Task
        dependency:
          description: >-
            The *task* is the basic object around which many operations in Asana
            are centered.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: task
            name:
              description: The name of the object.
              type: string
              example: Bug Task
        source:
          description: >-
            The component of the Asana product the user used to trigger the
            story.
          type: string
          readOnly: true
          example: web
        target:
          description: >-
            The object this story is associated with. Currently may only be a
            task.
          readOnly: true
          properties:
            gid:
              type: string
              example: '1234'
            name:
              type: string
              example: Bug Task
    StoryCompact:
      description: >-
        A story represents an activity associated with an object in the Asana
        system.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: story
        resource_subtype:
          description: >-
            The subtype of this resource. Different subtypes retain many of the
            same fields and behavior, but may render differently in Asana or
            represent resources with different semantic meaning.
          type: string
          readOnly: true
          example: comment_added
        created_at:
          description: The time at which this resource was created.
          type: string
          format: date-time
          readOnly: true
          example: '2012-02-22T02:06:58.147Z'
        created_by:
          description: >-
            The user who created this resource.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: user
            name:
              description: >-
                *Read-only except when same user as requester*. The user’s name.
              type: string
              example: Greg Sanchez
          readOnly: true
          nullable: true
        text:
          description: >-
            *Create-only*. Human-readable text for the story or comment.

            This will not include the name of the creator.

            *Note: This is not guaranteed to be stable for a given type of
            story. For example, text for a reassignment may not always say
            “assigned to …” as the text for a story can both be edited and
            change based on the language settings of the user making the
            request.*

            Use the `resource_subtype` property to discover the action that
            created the story.
          example: marked today
        type:
          description: >
            *Deprecated: new integrations should prefer the
            `resource_subtype` field.*
          type: string
          readOnly: true
          example: comment
    StoryObject:
      type: object
      properties:
        data:
          description: >-
            A story represents an activity associated with an object in the Asana
            system.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: story
            resource_subtype:
              description: >-
                The subtype of this resource. Different subtypes retain many of the
                same fields and behavior, but may render differently in Asana or
                represent resources with different semantic meaning.
              type: string
              readOnly: true
              example: comment_added
            created_at:
              description: The time at which this resource was created.
              type: string
              format: date-time
              readOnly: true
              example: '2012-02-22T02:06:58.147Z'
            created_by:
              description: >-
                The user who created this resource.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: user
                name:
                  description: >-
                    *Read-only except when same user as requester*. The user’s name.
                  type: string
                  example: Greg Sanchez
              readOnly: true
              nullable: true
            text:
              description: >-
                *Create-only*. Human-readable text for the story or comment.

                This will not include the name of the creator.

                *Note: This is not guaranteed to be stable for a given type of
                story. For example, text for a reassignment may not always say
                “assigned to …” as the text for a story can both be edited and
                change based on the language settings of the user making the
                request.*

                Use the `resource_subtype` property to discover the action that
                created the story.
              example: marked today
            type:
              description: >
                *Deprecated: new integrations should prefer the
                `resource_subtype` field.*
              type: string
              readOnly: true
              example: comment
            html_text:
              description: >-
                [Opt
                In](#input-output-options).

                HTML formatted text for a comment. This will not include the name

                of the creator.


                *Note: This field is under active migration—please see our blog

                post for more information.*
              type: string
              example: Get whatever Sashimi has.
            is_edited:
              description: >-
                *Conditional*. Whether the text of the story has been edited
                after creation.
              type: boolean
              readOnly: true
              example: false
            is_pinned:
              description: >-
                *Conditional*. Whether the story should be pinned on the
                resource.
              type: boolean
              example: false
            hearted:
              description: >-
                *Deprecated - please use likes instead*


                *Conditional*. True if the story is hearted by the authorized
                user, false if not.
              type: boolean
              readOnly: true
              example: false
            hearts:
              description: |-
                *Deprecated - please use likes instead*

                *Conditional*. Array of users who have hearted this story.
              type: array
              items:
                description: >-
                  A *user* object represents an account in Asana that can be given
                  access to various workspaces, projects, and tasks.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: user
                  name:
                    description: >-
                      *Read-only except when same user as requester*. The user’s name.
                    type: string
                    example: Greg Sanchez
              readOnly: true
            num_hearts:
              description: |-
                *Deprecated - please use likes instead*

                *Conditional*. The number of users who have hearted this story.
              type: integer
              readOnly: true
              example: 5
            liked:
              description: >-
                *Conditional*. True if the story is liked by the authorized
                user, false if not.
              type: boolean
              readOnly: true
              example: false
            likes:
              description: >-
                *Conditional*. Array of users who have liked this story.
              type: array
              items:
                description: >-
                  A *user* object represents an account in Asana that can be given
                  access to various workspaces, projects, and tasks.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: user
                  name:
                    description: >-
                      *Read-only except when same user as requester*. The user’s name.
                    type: string
                    example: Greg Sanchez
              readOnly: true
            num_likes:
              description: >-
                *Conditional*. The number of users who have liked this story.
              type: integer
              readOnly: true
              example: 5
            previews:
              description: >-
                *Conditional*. A collection of previews to be displayed in the
                story.


                *Note: This property only exists for comment stories.*
              type: array
              items:
                type: object
                description: >-
                  A collection of rich text that will be displayed as a preview to
                  another
                  app.


                  This is read-only except for a small group of whitelisted apps.
                readOnly: true
                properties:
                  fallback:
                    description: Some fallback text to display if unable to display
                      the full preview.
                    type: string
                    example: >-
                      Greg: Great! I like this
                      idea.\n\nhttps//a_company.slack.com/archives/ABCDEFG/12345678
                  footer:
                    description: Text to display in the footer.
                    type: string
                    example: Mar 17, 2019 1:25 PM
                  header:
                    description: Text to display in the header.
                    type: string
                    example: Asana for Slack
                  header_link:
                    description: Where the header will link to.
                    type: string
                    example: https://asana.comn/apps/slack
                  html_text:
                    description: HTML formatted text for the body of the preview.
                    type: string
                    example: <body>Great! I like this idea.</body>
                  text:
                    description: Text for the body of the preview.
                    type: string
                    example: Great! I like this idea.
                  title:
                    description: Text to display as the title.
                    type: string
                    example: Greg
                  title_link:
                    description: Where to title will link to.
                    type: string
                    example: https://asana.slack.com/archives/ABCDEFG/12345678
              readOnly: true
            old_name:
              description: >-
                *Conditional*'
              type: string
              example: This was the Old Name
            new_name:
              description: >-
                *Conditional*
              type: string
              readOnly: true
              example: This is the New Name
            old_dates:
              description: >-
                *Conditional*
              type: object
              readOnly: true
              properties:
                start_on:
                  type: string
                  format: date
                  example: '2019-09-15'
                due_at:
                  type: string
                  format: date-time
                  example: '2012-02-22T02:06:58.158Z'
                due_on:
                  type: string
                  format: date
                  example: '2019-09-15'
            new_dates:
              description: >-
                *Conditional*
              type: object
              readOnly: true
              properties:
                start_on:
                  type: string
                  format: date
                  example: '2019-09-15'
                due_at:
                  type: string
                  format: date-time
                  example: '2012-02-22T02:06:58.158Z'
                due_on:
                  type: string
                  format: date
                  example: '2019-09-15'
            old_resource_subtype:
              description: >-
                *Conditional*
              type: string
              readOnly: true
              example: default_task
            new_resource_subtype:
              description: >-
                *Conditional*
              type: string
              readOnly: true
              example: milestone
            story:
              description: >-
                A story represents an activity associated with an object in the Asana
                system.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: story
                resource_subtype:
                  description: >-
                    The subtype of this resource. Different subtypes retain many of
                    the
                    same fields and behavior, but may render differently in Asana
                    or
                    represent resources with different semantic meaning.
                  type: string
                  readOnly: true
                  example: comment_added
                created_at:
                  description: The time at which this resource was created.
                  type: string
                  format: date-time
                  readOnly: true
                  example: '2012-02-22T02:06:58.147Z'
                created_by:
                  description: >-
                    The user who created this resource.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: user
                    name:
                      description: >-
                        *Read-only except when same user as requester*. The user’s
                        name.
                      type: string
                      example: Greg Sanchez
                  readOnly: true
                  nullable: true
                text:
                  description: >-
                    *Create-only*. Human-readable text for the story or comment.

                    This will not include the name of the creator.

                    *Note: This is not guaranteed to be stable for a given type of
                    story. For example, text for a reassignment may not always say
                    “assigned to …” as the text for a story can both be edited and
                    change based on the language settings of the user making the
                    request.*

                    Use the `resource_subtype` property to discover the action that
                    created the story.
                  example: marked today
                type:
                  description: >
                    *Deprecated: new integrations should prefer the
                    `resource_subtype` field.*
                  type: string
                  readOnly: true
                  example: comment
            assignee:
              description: >-
                A *user* object represents an account in Asana that can be given
                access to various workspaces, projects, and tasks.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: user
                name:
                  description: >-
                    *Read-only except when same user as requester*. The user’s name.
                  type: string
                  example: Greg Sanchez
            follower:
              description: >-
                A *user* object represents an account in Asana that can be given
                access to various workspaces, projects, and tasks.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: user
                name:
                  description: >-
                    *Read-only except when same user as requester*. The user’s name.
                  type: string
                  example: Greg Sanchez
            old_section:
              description: >-
                A *section* is a subdivision of a project that groups tasks together.
                It can either be a header above a list of tasks in a list view or
                a
                column in a board view of a project.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: section
                name:
                  description: >-
                    The name of the section (i.e. the text displayed as the section
                    header).
                  type: string
                  example: Next Actions
            new_section:
              description: >-
                A *section* is a subdivision of a project that groups tasks together.
                It can either be a header above a list of tasks in a list view or
                a
                column in a board view of a project.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: section
                name:
                  description: >-
                    The name of the section (i.e. the text displayed as the section
                    header).
                  type: string
                  example: Next Actions
            task:
              description: >-
                The *task* is the basic object around which many operations in Asana
                are centered.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: task
                name:
                  description: The name of the object.
                  type: string
                  example: Bug Task
            project:
              description: >-
                A *project* represents a prioritized list of tasks in Asana or a board
                with columns of tasks represented as cards. It exists in a single
                workspace or organization and is accessible to a subset of users in
                that workspace or organization, depending on its permissions.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: project
                name:
                  description: >-
                    Name of the project. This is generally a short sentence fragment
                    that fits on a line in the UI for maximum readability. However,
                    it
                    can be longer.
                  type: string
                  example: Stuff to buy
            tag:
              description: >-
                A *tag* is a label that can be attached to any task in Asana. It
                exists in a single workspace or organization.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: tag
                name:
                  description: >-
                    Name of the tag. This is generally a short sentence fragment that
                    fits on a line in the UI for maximum readability. However, it
                    can
                    be longer.
                  type: string
                  example: Stuff to buy
            custom_field:
              description: >-
                Custom Fields store the metadata that is used in order to
                add user-specified information to tasks in Asana. Be sure
                to reference the [Custom Fields](#asana-custom-fields)
                developer documentation for more information about how custom fields
                relate to various resources in Asana.


                Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields),
                which will make them read-only when accessed by other users.
                Attempting to edit a locked custom field will return HTTP error code
                `403 Forbidden`.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: custom_field
                name:
                  description: The name of the object.
                  type: string
                  example: Bug Task
                resource_subtype:
                  description: >
                    The type of the custom field. Must be one of the given values.
                  type: string
                  example: text
                  enum:
                    - text
                    - enum
                    - number
                type:
                  description: >
                    *Deprecated: new integrations should prefer the resource_subtype
                    field.* The type of the custom field. Must be one of the given
                    values.
                  type: string
                  readOnly: true
                  enum:
                    - text
                    - enum
                    - number
                enum_options:
                  description: >-
                    *Conditional*. Only relevant for custom fields of type `enum`.
                    This array specifies the possible values which an `enum` custom
                    field can adopt. To modify the enum options, refer to [working
                    with enum
                    options](#create-an-enum-option).
                  type: array
                  items:
                    description: >-
                      Enum options are the possible values which an enum custom field
                      can
                      adopt. An enum custom field must contain at least 1 enum option
                      but no
                      more than 50.


                      You can add enum options to a custom field by using the `POST
                      /custom_fields/custom_field_gid/enum_options` endpoint.


                      **It is not possible to remove or delete an enum option**. Instead,
                      enum options can be disabled by updating the `enabled` field
                      to false
                      with the `PUT /enum_options/enum_option_gid` endpoint. Other
                      attributes can be updated similarly.


                      On creation of an enum option, `enabled` is always set to `true`,
                      meaning the enum option is a selectable value for the custom
                      field.
                      Setting `enabled=false` is equivalent to “trashing” the enum
                      option in
                      the Asana web app within the “Edit Fields” dialog. The enum
                      option
                      will no longer be selectable but, if the enum option value was
                      previously set within a task, the task will retain the value.


                      Enum options are an ordered list and by default new enum options
                      are
                      inserted at the end. Ordering in relation to existing enum options
                      can
                      be specified on creation by using `insert_before` or `insert_after`
                      to
                      reference an existing enum option. Only one of `insert_before`
                      and
                      `insert_after` can be provided when creating a new enum option.


                      An enum options list can be reordered with the `POST
                      /custom_fields/custom_field_gid/enum_options/insert` endpoint.
                    type: object
                    properties:
                      gid:
                        description: >-
                          Globally unique identifier of the object, as a string.
                        type: string
                        readOnly: true
                        example: '12345'
                      resource_type:
                        description: The base type of this resource.
                        type: string
                        readOnly: true
                        example: enum_option
                      name:
                        description: The name of the enum option.
                        type: string
                        example: Low
                      enabled:
                        description: "The color of the enum option. Defaults to \u2018\
                          none\u2019."
                        type: boolean
                        example: true
                      color:
                        description: >-
                          Whether or not the enum option is a selectable value for
                          the
                          custom field.
                        type: string
                        example: blue
                enum_value: {}
                enabled:
                  description: >-
                    *Conditional*. Determines if the custom field is enabled or not.
                  type: boolean
                  example: true
                text_value:
                  description: >-
                    *Conditional*. This string is the value of a text custom field.
                  type: string
                  example: Some Value
            old_text_value:
              description: >-
                *Conditional*
              type: string
              readOnly: true
              example: This was the Old Text
            new_text_value:
              description: >-
                *Conditional*
              type: string
              readOnly: true
              example: This is the New Text
            old_number_value:
              description: >-
                *Conditional*
              type: integer
              readOnly: true
              example: 1
            new_number_value:
              description: >-
                *Conditional*
              type: integer
              readOnly: true
              example: 2
            old_enum_value:
              description: >-
                Enum options are the possible values which an enum custom field can
                adopt. An enum custom field must contain at least 1 enum option but
                no
                more than 50.


                You can add enum options to a custom field by using the `POST
                /custom_fields/custom_field_gid/enum_options` endpoint.


                **It is not possible to remove or delete an enum option**. Instead,
                enum options can be disabled by updating the `enabled` field to false
                with the `PUT /enum_options/enum_option_gid` endpoint. Other
                attributes can be updated similarly.


                On creation of an enum option, `enabled` is always set to `true`,
                meaning the enum option is a selectable value for the custom field.
                Setting `enabled=false` is equivalent to “trashing” the enum option
                in
                the Asana web app within the “Edit Fields” dialog. The enum option
                will no longer be selectable but, if the enum option value was
                previously set within a task, the task will retain the value.


                Enum options are an ordered list and by default new enum options are
                inserted at the end. Ordering in relation to existing enum options
                can
                be specified on creation by using `insert_before` or `insert_after`
                to
                reference an existing enum option. Only one of `insert_before` and
                `insert_after` can be provided when creating a new enum option.


                An enum options list can be reordered with the `POST
                /custom_fields/custom_field_gid/enum_options/insert` endpoint.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: enum_option
                name:
                  description: The name of the enum option.
                  type: string
                  example: Low
                enabled:
                  description: "The color of the enum option. Defaults to \u2018none\u2019\
                    ."
                  type: boolean
                  example: true
                color:
                  description: >-
                    Whether or not the enum option is a selectable value for the
                    custom field.
                  type: string
                  example: blue
            new_enum_value:
              description: >-
                Enum options are the possible values which an enum custom field can
                adopt. An enum custom field must contain at least 1 enum option but
                no
                more than 50.


                You can add enum options to a custom field by using the `POST
                /custom_fields/custom_field_gid/enum_options` endpoint.


                **It is not possible to remove or delete an enum option**. Instead,
                enum options can be disabled by updating the `enabled` field to false
                with the `PUT /enum_options/enum_option_gid` endpoint. Other
                attributes can be updated similarly.


                On creation of an enum option, `enabled` is always set to `true`,
                meaning the enum option is a selectable value for the custom field.
                Setting `enabled=false` is equivalent to “trashing” the enum option
                in
                the Asana web app within the “Edit Fields” dialog. The enum option
                will no longer be selectable but, if the enum option value was
                previously set within a task, the task will retain the value.


                Enum options are an ordered list and by default new enum options are
                inserted at the end. Ordering in relation to existing enum options
                can
                be specified on creation by using `insert_before` or `insert_after`
                to
                reference an existing enum option. Only one of `insert_before` and
                `insert_after` can be provided when creating a new enum option.


                An enum options list can be reordered with the `POST
                /custom_fields/custom_field_gid/enum_options/insert` endpoint.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: enum_option
                name:
                  description: The name of the enum option.
                  type: string
                  example: Low
                enabled:
                  description: "The color of the enum option. Defaults to \u2018none\u2019\
                    ."
                  type: boolean
                  example: true
                color:
                  description: >-
                    Whether or not the enum option is a selectable value for the
                    custom field.
                  type: string
                  example: blue
            duplicate_of:
              description: >-
                The *task* is the basic object around which many operations in Asana
                are centered.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: task
                name:
                  description: The name of the object.
                  type: string
                  example: Bug Task
            duplicated_from:
              description: >-
                The *task* is the basic object around which many operations in Asana
                are centered.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: task
                name:
                  description: The name of the object.
                  type: string
                  example: Bug Task
            dependency:
              description: >-
                The *task* is the basic object around which many operations in Asana
                are centered.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: task
                name:
                  description: The name of the object.
                  type: string
                  example: Bug Task
            source:
              description: >-
                The component of the Asana product the user used to trigger the
                story.
              type: string
              readOnly: true
              example: web
            target:
              description: >-
                The object this story is associated with. Currently may only be a
                task.
              readOnly: true
              properties:
                gid:
                  type: string
                  example: '1234'
                name:
                  type: string
                  example: Bug Task
    StoryArray:
      type: object
      properties:
        data:
          items:
            description: >-
              A story represents an activity associated with an object in the Asana
              system.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: story
              resource_subtype:
                description: >-
                  The subtype of this resource. Different subtypes retain many of
                  the
                  same fields and behavior, but may render differently in Asana or
                  represent resources with different semantic meaning.
                type: string
                readOnly: true
                example: comment_added
              created_at:
                description: The time at which this resource was created.
                type: string
                format: date-time
                readOnly: true
                example: '2012-02-22T02:06:58.147Z'
              created_by:
                description: >-
                  The user who created this resource.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: user
                  name:
                    description: >-
                      *Read-only except when same user as requester*. The user’s name.
                    type: string
                    example: Greg Sanchez
                readOnly: true
                nullable: true
              text:
                description: >-
                  *Create-only*. Human-readable text for the story or comment.

                  This will not include the name of the creator.

                  *Note: This is not guaranteed to be stable for a given type of
                  story. For example, text for a reassignment may not always say
                  “assigned to …” as the text for a story can both be edited and
                  change based on the language settings of the user making the
                  request.*

                  Use the `resource_subtype` property to discover the action that
                  created the story.
                example: marked today
              type:
                description: >
                  *Deprecated: new integrations should prefer the
                  `resource_subtype` field.*
                type: string
                readOnly: true
                example: comment
              html_text:
                description: >-
                  [Opt
                  In](#input-output-options).

                  HTML formatted text for a comment. This will not include the name

                  of the creator.


                  *Note: This field is under active migration—please see our blog

                  post for more information.*
                type: string
                example: Get whatever Sashimi has.
              is_edited:
                description: >-
                  *Conditional*. Whether the text of the story has been edited
                  after creation.
                type: boolean
                readOnly: true
                example: false
              is_pinned:
                description: >-
                  *Conditional*. Whether the story should be pinned on the
                  resource.
                type: boolean
                example: false
              hearted:
                description: >-
                  *Deprecated - please use likes instead*


                  *Conditional*. True if the story is hearted by the authorized
                  user, false if not.
                type: boolean
                readOnly: true
                example: false
              hearts:
                description: |-
                  *Deprecated - please use likes instead*

                  *Conditional*. Array of users who have hearted this story.
                type: array
                items:
                  description: >-
                    A *user* object represents an account in Asana that can be given
                    access to various workspaces, projects, and tasks.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: user
                    name:
                      description: >-
                        *Read-only except when same user as requester*. The user’s
                        name.
                      type: string
                      example: Greg Sanchez
                readOnly: true
              num_hearts:
                description: |-
                  *Deprecated - please use likes instead*

                  *Conditional*. The number of users who have hearted this story.
                type: integer
                readOnly: true
                example: 5
              liked:
                description: >-
                  *Conditional*. True if the story is liked by the authorized
                  user, false if not.
                type: boolean
                readOnly: true
                example: false
              likes:
                description: >-
                  *Conditional*. Array of users who have liked this story.
                type: array
                items:
                  description: >-
                    A *user* object represents an account in Asana that can be given
                    access to various workspaces, projects, and tasks.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: user
                    name:
                      description: >-
                        *Read-only except when same user as requester*. The user’s
                        name.
                      type: string
                      example: Greg Sanchez
                readOnly: true
              num_likes:
                description: >-
                  *Conditional*. The number of users who have liked this story.
                type: integer
                readOnly: true
                example: 5
              previews:
                description: >-
                  *Conditional*. A collection of previews to be displayed in the
                  story.


                  *Note: This property only exists for comment stories.*
                type: array
                items:
                  type: object
                  description: >-
                    A collection of rich text that will be displayed as a preview
                    to another
                    app.


                    This is read-only except for a small group of whitelisted apps.
                  readOnly: true
                  properties:
                    fallback:
                      description: Some fallback text to display if unable to display
                        the full preview.
                      type: string
                      example: >-
                        Greg: Great! I like this
                        idea.\n\nhttps//a_company.slack.com/archives/ABCDEFG/12345678
                    footer:
                      description: Text to display in the footer.
                      type: string
                      example: Mar 17, 2019 1:25 PM
                    header:
                      description: Text to display in the header.
                      type: string
                      example: Asana for Slack
                    header_link:
                      description: Where the header will link to.
                      type: string
                      example: https://asana.comn/apps/slack
                    html_text:
                      description: HTML formatted text for the body of the preview.
                      type: string
                      example: <body>Great! I like this idea.</body>
                    text:
                      description: Text for the body of the preview.
                      type: string
                      example: Great! I like this idea.
                    title:
                      description: Text to display as the title.
                      type: string
                      example: Greg
                    title_link:
                      description: Where to title will link to.
                      type: string
                      example: https://asana.slack.com/archives/ABCDEFG/12345678
                readOnly: true
              old_name:
                description: >-
                  *Conditional*'
                type: string
                example: This was the Old Name
              new_name:
                description: >-
                  *Conditional*
                type: string
                readOnly: true
                example: This is the New Name
              old_dates:
                description: >-
                  *Conditional*
                type: object
                readOnly: true
                properties:
                  start_on:
                    type: string
                    format: date
                    example: '2019-09-15'
                  due_at:
                    type: string
                    format: date-time
                    example: '2012-02-22T02:06:58.158Z'
                  due_on:
                    type: string
                    format: date
                    example: '2019-09-15'
              new_dates:
                description: >-
                  *Conditional*
                type: object
                readOnly: true
                properties:
                  start_on:
                    type: string
                    format: date
                    example: '2019-09-15'
                  due_at:
                    type: string
                    format: date-time
                    example: '2012-02-22T02:06:58.158Z'
                  due_on:
                    type: string
                    format: date
                    example: '2019-09-15'
              old_resource_subtype:
                description: >-
                  *Conditional*
                type: string
                readOnly: true
                example: default_task
              new_resource_subtype:
                description: >-
                  *Conditional*
                type: string
                readOnly: true
                example: milestone
              story:
                description: >-
                  A story represents an activity associated with an object in the
                  Asana
                  system.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: story
                  resource_subtype:
                    description: >-
                      The subtype of this resource. Different subtypes retain many
                      of the
                      same fields and behavior, but may render differently in Asana
                      or
                      represent resources with different semantic meaning.
                    type: string
                    readOnly: true
                    example: comment_added
                  created_at:
                    description: The time at which this resource was created.
                    type: string
                    format: date-time
                    readOnly: true
                    example: '2012-02-22T02:06:58.147Z'
                  created_by:
                    description: >-
                      The user who created this resource.
                    type: object
                    properties:
                      gid:
                        description: >-
                          Globally unique identifier of the object, as a string.
                        type: string
                        readOnly: true
                        example: '12345'
                      resource_type:
                        description: The base type of this resource.
                        type: string
                        readOnly: true
                        example: user
                      name:
                        description: >-
                          *Read-only except when same user as requester*. The user’s
                          name.
                        type: string
                        example: Greg Sanchez
                    readOnly: true
                    nullable: true
                  text:
                    description: >-
                      *Create-only*. Human-readable text for the story or comment.

                      This will not include the name of the creator.

                      *Note: This is not guaranteed to be stable for a given type
                      of
                      story. For example, text for a reassignment may not always say
                      “assigned to …” as the text for a story can both be edited and
                      change based on the language settings of the user making the
                      request.*

                      Use the `resource_subtype` property to discover the action that
                      created the story.
                    example: marked today
                  type:
                    description: >
                      *Deprecated: new integrations should prefer the
                      `resource_subtype` field.*
                    type: string
                    readOnly: true
                    example: comment
              assignee:
                description: >-
                  A *user* object represents an account in Asana that can be given
                  access to various workspaces, projects, and tasks.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: user
                  name:
                    description: >-
                      *Read-only except when same user as requester*. The user’s name.
                    type: string
                    example: Greg Sanchez
              follower:
                description: >-
                  A *user* object represents an account in Asana that can be given
                  access to various workspaces, projects, and tasks.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: user
                  name:
                    description: >-
                      *Read-only except when same user as requester*. The user’s name.
                    type: string
                    example: Greg Sanchez
              old_section:
                description: >-
                  A *section* is a subdivision of a project that groups tasks together.
                  It can either be a header above a list of tasks in a list view or
                  a
                  column in a board view of a project.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: section
                  name:
                    description: >-
                      The name of the section (i.e. the text displayed as the section
                      header).
                    type: string
                    example: Next Actions
              new_section:
                description: >-
                  A *section* is a subdivision of a project that groups tasks together.
                  It can either be a header above a list of tasks in a list view or
                  a
                  column in a board view of a project.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: section
                  name:
                    description: >-
                      The name of the section (i.e. the text displayed as the section
                      header).
                    type: string
                    example: Next Actions
              task:
                description: >-
                  The *task* is the basic object around which many operations in Asana
                  are centered.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: task
                  name:
                    description: The name of the object.
                    type: string
                    example: Bug Task
              project:
                description: >-
                  A *project* represents a prioritized list of tasks in Asana or a
                  board
                  with columns of tasks represented as cards. It exists in a single
                  workspace or organization and is accessible to a subset of users
                  in
                  that workspace or organization, depending on its permissions.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: project
                  name:
                    description: >-
                      Name of the project. This is generally a short sentence fragment
                      that fits on a line in the UI for maximum readability. However,
                      it
                      can be longer.
                    type: string
                    example: Stuff to buy
              tag:
                description: >-
                  A *tag* is a label that can be attached to any task in Asana. It
                  exists in a single workspace or organization.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: tag
                  name:
                    description: >-
                      Name of the tag. This is generally a short sentence fragment
                      that
                      fits on a line in the UI for maximum readability. However, it
                      can
                      be longer.
                    type: string
                    example: Stuff to buy
              custom_field:
                description: >-
                  Custom Fields store the metadata that is used in order to
                  add user-specified information to tasks in Asana. Be sure
                  to reference the [Custom Fields](#asana-custom-fields)
                  developer documentation for more information about how custom fields
                  relate to various resources in Asana.


                  Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields),
                  which will make them read-only when accessed by other users.
                  Attempting to edit a locked custom field will return HTTP error
                  code
                  `403 Forbidden`.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: custom_field
                  name:
                    description: The name of the object.
                    type: string
                    example: Bug Task
                  resource_subtype:
                    description: >
                      The type of the custom field. Must be one of the given values.
                    type: string
                    example: text
                    enum:
                      - text
                      - enum
                      - number
                  type:
                    description: >
                      *Deprecated: new integrations should prefer the resource_subtype
                      field.* The type of the custom field. Must be one of the given
                      values.
                    type: string
                    readOnly: true
                    enum:
                      - text
                      - enum
                      - number
                  enum_options:
                    description: >-
                      *Conditional*. Only relevant for custom fields of type `enum`.
                      This array specifies the possible values which an `enum` custom
                      field can adopt. To modify the enum options, refer to [working
                      with enum
                      options](#create-an-enum-option).
                    type: array
                    items:
                      description: >-
                        Enum options are the possible values which an enum custom
                        field can
                        adopt. An enum custom field must contain at least 1 enum option
                        but no
                        more than 50.


                        You can add enum options to a custom field by using the `POST
                        /custom_fields/custom_field_gid/enum_options` endpoint.


                        **It is not possible to remove or delete an enum option**.
                        Instead,
                        enum options can be disabled by updating the `enabled` field
                        to false
                        with the `PUT /enum_options/enum_option_gid` endpoint. Other
                        attributes can be updated similarly.


                        On creation of an enum option, `enabled` is always set to
                        `true`,
                        meaning the enum option is a selectable value for the custom
                        field.
                        Setting `enabled=false` is equivalent to “trashing” the enum
                        option in
                        the Asana web app within the “Edit Fields” dialog. The enum
                        option
                        will no longer be selectable but, if the enum option value
                        was
                        previously set within a task, the task will retain the value.


                        Enum options are an ordered list and by default new enum options
                        are
                        inserted at the end. Ordering in relation to existing enum
                        options can
                        be specified on creation by using `insert_before` or `insert_after`
                        to
                        reference an existing enum option. Only one of `insert_before`
                        and
                        `insert_after` can be provided when creating a new enum option.


                        An enum options list can be reordered with the `POST
                        /custom_fields/custom_field_gid/enum_options/insert` endpoint.
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the object, as a string.
                          type: string
                          readOnly: true
                          example: '12345'
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: enum_option
                        name:
                          description: The name of the enum option.
                          type: string
                          example: Low
                        enabled:
                          description: "The color of the enum option. Defaults to\
                            \ \u2018none\u2019."
                          type: boolean
                          example: true
                        color:
                          description: >-
                            Whether or not the enum option is a selectable value for
                            the
                            custom field.
                          type: string
                          example: blue
                  enum_value: {}
                  enabled:
                    description: >-
                      *Conditional*. Determines if the custom field is enabled or
                      not.
                    type: boolean
                    example: true
                  text_value:
                    description: >-
                      *Conditional*. This string is the value of a text custom field.
                    type: string
                    example: Some Value
              old_text_value:
                description: >-
                  *Conditional*
                type: string
                readOnly: true
                example: This was the Old Text
              new_text_value:
                description: >-
                  *Conditional*
                type: string
                readOnly: true
                example: This is the New Text
              old_number_value:
                description: >-
                  *Conditional*
                type: integer
                readOnly: true
                example: 1
              new_number_value:
                description: >-
                  *Conditional*
                type: integer
                readOnly: true
                example: 2
              old_enum_value:
                description: >-
                  Enum options are the possible values which an enum custom field
                  can
                  adopt. An enum custom field must contain at least 1 enum option
                  but no
                  more than 50.


                  You can add enum options to a custom field by using the `POST
                  /custom_fields/custom_field_gid/enum_options` endpoint.


                  **It is not possible to remove or delete an enum option**. Instead,
                  enum options can be disabled by updating the `enabled` field to
                  false
                  with the `PUT /enum_options/enum_option_gid` endpoint. Other
                  attributes can be updated similarly.


                  On creation of an enum option, `enabled` is always set to `true`,
                  meaning the enum option is a selectable value for the custom field.
                  Setting `enabled=false` is equivalent to “trashing” the enum option
                  in
                  the Asana web app within the “Edit Fields” dialog. The enum option
                  will no longer be selectable but, if the enum option value was
                  previously set within a task, the task will retain the value.


                  Enum options are an ordered list and by default new enum options
                  are
                  inserted at the end. Ordering in relation to existing enum options
                  can
                  be specified on creation by using `insert_before` or `insert_after`
                  to
                  reference an existing enum option. Only one of `insert_before` and
                  `insert_after` can be provided when creating a new enum option.


                  An enum options list can be reordered with the `POST
                  /custom_fields/custom_field_gid/enum_options/insert` endpoint.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: enum_option
                  name:
                    description: The name of the enum option.
                    type: string
                    example: Low
                  enabled:
                    description: "The color of the enum option. Defaults to \u2018\
                      none\u2019."
                    type: boolean
                    example: true
                  color:
                    description: >-
                      Whether or not the enum option is a selectable value for the
                      custom field.
                    type: string
                    example: blue
              new_enum_value:
                description: >-
                  Enum options are the possible values which an enum custom field
                  can
                  adopt. An enum custom field must contain at least 1 enum option
                  but no
                  more than 50.


                  You can add enum options to a custom field by using the `POST
                  /custom_fields/custom_field_gid/enum_options` endpoint.


                  **It is not possible to remove or delete an enum option**. Instead,
                  enum options can be disabled by updating the `enabled` field to
                  false
                  with the `PUT /enum_options/enum_option_gid` endpoint. Other
                  attributes can be updated similarly.


                  On creation of an enum option, `enabled` is always set to `true`,
                  meaning the enum option is a selectable value for the custom field.
                  Setting `enabled=false` is equivalent to “trashing” the enum option
                  in
                  the Asana web app within the “Edit Fields” dialog. The enum option
                  will no longer be selectable but, if the enum option value was
                  previously set within a task, the task will retain the value.


                  Enum options are an ordered list and by default new enum options
                  are
                  inserted at the end. Ordering in relation to existing enum options
                  can
                  be specified on creation by using `insert_before` or `insert_after`
                  to
                  reference an existing enum option. Only one of `insert_before` and
                  `insert_after` can be provided when creating a new enum option.


                  An enum options list can be reordered with the `POST
                  /custom_fields/custom_field_gid/enum_options/insert` endpoint.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: enum_option
                  name:
                    description: The name of the enum option.
                    type: string
                    example: Low
                  enabled:
                    description: "The color of the enum option. Defaults to \u2018\
                      none\u2019."
                    type: boolean
                    example: true
                  color:
                    description: >-
                      Whether or not the enum option is a selectable value for the
                      custom field.
                    type: string
                    example: blue
              duplicate_of:
                description: >-
                  The *task* is the basic object around which many operations in Asana
                  are centered.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: task
                  name:
                    description: The name of the object.
                    type: string
                    example: Bug Task
              duplicated_from:
                description: >-
                  The *task* is the basic object around which many operations in Asana
                  are centered.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: task
                  name:
                    description: The name of the object.
                    type: string
                    example: Bug Task
              dependency:
                description: >-
                  The *task* is the basic object around which many operations in Asana
                  are centered.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: task
                  name:
                    description: The name of the object.
                    type: string
                    example: Bug Task
              source:
                description: >-
                  The component of the Asana product the user used to trigger the
                  story.
                type: string
                readOnly: true
                example: web
              target:
                description: >-
                  The object this story is associated with. Currently may only be
                  a
                  task.
                readOnly: true
                properties:
                  gid:
                    type: string
                    example: '1234'
                  name:
                    type: string
                    example: Bug Task
    Tag:
      description: >-
        A *tag* is a label that can be attached to any task in Asana. It
        exists in a single workspace or organization.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: tag
        name:
          description: >-
            Name of the tag. This is generally a short sentence fragment that
            fits on a line in the UI for maximum readability. However, it can
            be longer.
          type: string
          example: Stuff to buy
        followers:
          description: Array of users following this tag.
          type: array
          readOnly: true
          items:
            description: >-
              A *user* object represents an account in Asana that can be given
              access to various workspaces, projects, and tasks.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: user
              name:
                description: >-
                  *Read-only except when same user as requester*. The user’s name.
                type: string
                example: Greg Sanchez
        color:
          type: string
          description: Color of the tag.
          enum:
            - dark-pink
            - dark-green
            - dark-blue
            - dark-red
            - dark-teal
            - dark-brown
            - dark-orange
            - dark-purple
            - dark-warm-gray
            - light-pink
            - light-green
            - light-blue
            - light-red
            - light-teal
            - light-brown
            - light-orange
            - light-purple
            - light-warm-gray
          example: light-green
        workspace:
          description: >-
            A *workspace* is the highest-level organizational unit in Asana. All
            projects and tasks have an associated workspace.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: workspace
            name:
              description: The name of the object.
              type: string
              example: My Company Workspace
    TagCompact:
      description: >-
        A *tag* is a label that can be attached to any task in Asana. It
        exists in a single workspace or organization.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: tag
        name:
          description: >-
            Name of the tag. This is generally a short sentence fragment that
            fits on a line in the UI for maximum readability. However, it can
            be longer.
          type: string
          example: Stuff to buy
    TagObject:
      type: object
      properties:
        data:
          description: >-
            A *tag* is a label that can be attached to any task in Asana. It
            exists in a single workspace or organization.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: tag
            name:
              description: >-
                Name of the tag. This is generally a short sentence fragment that
                fits on a line in the UI for maximum readability. However, it can
                be longer.
              type: string
              example: Stuff to buy
            followers:
              description: Array of users following this tag.
              type: array
              readOnly: true
              items:
                description: >-
                  A *user* object represents an account in Asana that can be given
                  access to various workspaces, projects, and tasks.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: user
                  name:
                    description: >-
                      *Read-only except when same user as requester*. The user’s name.
                    type: string
                    example: Greg Sanchez
            color:
              type: string
              description: Color of the tag.
              enum:
                - dark-pink
                - dark-green
                - dark-blue
                - dark-red
                - dark-teal
                - dark-brown
                - dark-orange
                - dark-purple
                - dark-warm-gray
                - light-pink
                - light-green
                - light-blue
                - light-red
                - light-teal
                - light-brown
                - light-orange
                - light-purple
                - light-warm-gray
              example: light-green
            workspace:
              description: >-
                A *workspace* is the highest-level organizational unit in Asana. All
                projects and tasks have an associated workspace.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: workspace
                name:
                  description: The name of the object.
                  type: string
                  example: My Company Workspace
    TagArray:
      type: object
      properties:
        data:
          type: array
          items:
            description: >-
              A *tag* is a label that can be attached to any task in Asana. It
              exists in a single workspace or organization.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: tag
              name:
                description: >-
                  Name of the tag. This is generally a short sentence fragment that
                  fits on a line in the UI for maximum readability. However, it can
                  be longer.
                type: string
                example: Stuff to buy
              followers:
                description: Array of users following this tag.
                type: array
                readOnly: true
                items:
                  description: >-
                    A *user* object represents an account in Asana that can be given
                    access to various workspaces, projects, and tasks.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: user
                    name:
                      description: >-
                        *Read-only except when same user as requester*. The user’s
                        name.
                      type: string
                      example: Greg Sanchez
              color:
                type: string
                description: Color of the tag.
                enum:
                  - dark-pink
                  - dark-green
                  - dark-blue
                  - dark-red
                  - dark-teal
                  - dark-brown
                  - dark-orange
                  - dark-purple
                  - dark-warm-gray
                  - light-pink
                  - light-green
                  - light-blue
                  - light-red
                  - light-teal
                  - light-brown
                  - light-orange
                  - light-purple
                  - light-warm-gray
                example: light-green
              workspace:
                description: >-
                  A *workspace* is the highest-level organizational unit in Asana.
                  All
                  projects and tasks have an associated workspace.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: workspace
                  name:
                    description: The name of the object.
                    type: string
                    example: My Company Workspace
    Task:
      description: >-
        The *task* is the basic object around which many operations in Asana
        are centered.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: task
        name:
          description: >-
            Name of the task. This is generally a short sentence fragment that
            fits on a line in the UI for maximum readability. However, it can
            be longer.
          type: string
          example: Buy catnip
        created_at:
          description: The time at which this resource was created.
          type: string
          format: date-time
          readOnly: true
          example: '2012-02-22T02:06:58.147Z'
        resource_subtype:
          description: >-
            The subtype of this resource. Different subtypes retain many of
            the same fields and behavior, but may render differently in Asana
            or represent resources with different semantic meaning.

            The resource_subtype `milestone` represent a single moment in
            time. This means tasks with this subtype cannot have a start_date.

            *Note: The resource_subtype of `section` is under active
            migration—please see our [forum
            post](https://forum.asana.com/t/sections-are-dead-long-live-sections)
            for more information.*
          type: string
          readOnly: true
          enum:
            - default_task
            - milestone
            - section
          example: default_task
        assignee: {}
        assignee_status:
          description: >-
            Scheduling status of this task for the user it is assigned to.
            This field can only be set if the assignee is non-null.
          type: string
          enum:
            - today
            - upcoming
            - later
            - new
            - inbox
          example: upcoming
        completed:
          description: >-
            True if the task is currently marked complete, false if not.
          type: boolean
          example: false
        completed_at:
          description: >-
            The time at which this task was completed, or null if the task is
            incomplete.
          type: string
          format: date-time
          readOnly: true
          nullable: true
          example: '2012-02-22T02:06:58.147Z'
        custom_fields:
          description: >-
            Array of custom field values applied to the project. These
            represent the custom field values recorded on this project for a
            particular custom field. For example, these custom field values
            will contain an `enum_value` property for custom fields of type
            `enum`, a `text_value` property for custom fields of type
            `text`, and so on. Please note that the `gid` returned on each
            custom field value *is identical* to the `gid` of the custom field,
            which allows referencing the custom field metadata through the
            `/custom_fields/custom_field-gid` endpoint.
          type: array
          items:
            description: >-
              Custom Fields store the metadata that is used in order to
              add user-specified information to tasks in Asana. Be sure
              to reference the [Custom Fields](#asana-custom-fields)
              developer documentation for more information about how custom fields
              relate to various resources in Asana.


              Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields),
              which will make them read-only when accessed by other users.
              Attempting to edit a locked custom field will return HTTP error code
              `403 Forbidden`.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: custom_field
              name:
                description: The name of the object.
                type: string
                example: Bug Task
              resource_subtype:
                description: >
                  The type of the custom field. Must be one of the given values.
                type: string
                example: text
                enum:
                  - text
                  - enum
                  - number
              type:
                description: >
                  *Deprecated: new integrations should prefer the resource_subtype
                  field.* The type of the custom field. Must be one of the given
                  values.
                type: string
                readOnly: true
                enum:
                  - text
                  - enum
                  - number
              enum_options:
                description: >-
                  *Conditional*. Only relevant for custom fields of type `enum`.
                  This array specifies the possible values which an `enum` custom
                  field can adopt. To modify the enum options, refer to [working
                  with enum
                  options](#create-an-enum-option).
                type: array
                items:
                  description: >-
                    Enum options are the possible values which an enum custom field
                    can
                    adopt. An enum custom field must contain at least 1 enum option
                    but no
                    more than 50.


                    You can add enum options to a custom field by using the `POST
                    /custom_fields/custom_field_gid/enum_options` endpoint.


                    **It is not possible to remove or delete an enum option**. Instead,
                    enum options can be disabled by updating the `enabled` field to
                    false
                    with the `PUT /enum_options/enum_option_gid` endpoint. Other
                    attributes can be updated similarly.


                    On creation of an enum option, `enabled` is always set to `true`,
                    meaning the enum option is a selectable value for the custom field.
                    Setting `enabled=false` is equivalent to “trashing” the enum option
                    in
                    the Asana web app within the “Edit Fields” dialog. The enum option
                    will no longer be selectable but, if the enum option value was
                    previously set within a task, the task will retain the value.


                    Enum options are an ordered list and by default new enum options
                    are
                    inserted at the end. Ordering in relation to existing enum options
                    can
                    be specified on creation by using `insert_before` or `insert_after`
                    to
                    reference an existing enum option. Only one of `insert_before`
                    and
                    `insert_after` can be provided when creating a new enum option.


                    An enum options list can be reordered with the `POST
                    /custom_fields/custom_field_gid/enum_options/insert` endpoint.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: enum_option
                    name:
                      description: The name of the enum option.
                      type: string
                      example: Low
                    enabled:
                      description: "The color of the enum option. Defaults to \u2018\
                        none\u2019."
                      type: boolean
                      example: true
                    color:
                      description: >-
                        Whether or not the enum option is a selectable value for the
                        custom field.
                      type: string
                      example: blue
              enum_value: {}
              enabled:
                description: >-
                  *Conditional*. Determines if the custom field is enabled or not.
                type: boolean
                example: true
              text_value:
                description: >-
                  *Conditional*. This string is the value of a text custom field.
                type: string
                example: Some Value
              description:
                description: >-
                  [Opt
                  In](#input-output-options).
                  The description of the custom field.
                type: string
                example: Development team priority
              precision:
                description: >-
                  Only relevant for custom fields of type ‘Number’. This field
                  dictates the number of places after the decimal to round to, i.e.
                  0 is integer values, 1 rounds to the nearest tenth, and so on.
                  Must be between 0 and 6, inclusive.
                type: integer
                example: 2
              is_global_to_workspace:
                description: >-
                  This flag describes whether this custom field is available to
                  every container in the workspace. Before project-specific custom
                  fields, this field was always true.
                type: boolean
                example: true
                readOnly: true
              has_notifications_enabled:
                description: >-
                  This flag describes whether a follower of a task with this field
                  should receive inbox notifications from changes to this field.
                type: boolean
                example: true
          readOnly: true
        dependencies:
          description: >-
            [Opt
            In](#input-output-options).
            Array of resources referencing tasks that this task depends on.
            The objects contain only the gid of the dependency.
          type: array
          items:
            type: object
            properties:
              gid:
                type: string
                example: '1234'
          readOnly: true
          example:
            - gid: '1234'
            - gid: '4321'
        dependents:
          description: >-
            [Opt
            In](#input-output-options).
            Array of resources referencing tasks that depend on this task. The
            objects contain only the ID of the dependent.
          type: array
          items:
            type: object
            properties:
              gid:
                type: string
                example: '1234'
          readOnly: true
          example:
            - gid: '1234'
            - gid: '4321'
        due_at:
          description: >-
            Date and time on which this task is due, or null if the task has
            no due time. This takes a UTC timestamp and should not be used
            together with `due_on`.
          type: string
          format: date
          example: '2012-02-22T02:06:58.147Z'
          nullable: true
        due_on:
          description: >-
            Date on which this task is due, or null if the task has no due
            date.  This takes a date with `YYYY-MM-DD` format and should not
            be used together with due_at.
          type: string
          format: date
          example: '2012-03-26'
          nullable: true
        external:
          description: >-
            *OAuth Required*. *Conditional*. This field is returned only
            if external values are set or included by using [Opt In]
            (#input-output-options).

            The external field allows you to store app-specific metadata on
            tasks, including a gid that can be used to retrieve tasks and a
            data blob that can store app-specific character strings. Note that
            you will need to authenticate with Oauth to access or modify this
            data. Once an external gid is set, you can use the notation
            `external:custom_gid` to reference your object anywhere in the API
            where you may use the original object gid. See the page on Custom
            External Data for more details.
          type: object
          properties:
            gid:
              type: string
              example: '1234'
            data:
              type: string
              example: A blob of information.
          example:
            gid: my_gid
            data: A blob of information
        followers:
          description: Array of users following this task.
          type: array
          readOnly: true
          items:
            description: >-
              A *user* object represents an account in Asana that can be given
              access to various workspaces, projects, and tasks.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: user
              name:
                description: >-
                  *Read-only except when same user as requester*. The user’s name.
                type: string
                example: Greg Sanchez
        html_notes:
          description: >-
            [Opt
            In](#input-output-options).
            The notes of the text with formatting as HTML.

            *Note: This field is under active migration—please see our blog
            post for more information.*
          type: string
          example: >-
            <body>Mittens <em>really</em> likes the stuff from
            Humboldt.</body>
        hearted:
          description: >-
            *Deprecated - please use liked instead* True if the task is
            hearted by the authorized user, false if not.
          type: boolean
          example: true
          readOnly: true
        hearts:
          description: >-
            *Deprecated - please use likes instead* Array of users who have
            hearted this task.
          type: array
          items:
            description: >-
              A *user* object represents an account in Asana that can be given
              access to various workspaces, projects, and tasks.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: user
              name:
                description: >-
                  *Read-only except when same user as requester*. The user’s name.
                type: string
                example: Greg Sanchez
          readOnly: true
        is_rendered_as_separator:
          description: >-
            [Opt In](#input-output-options).
            In some contexts tasks can be rendered as a visual separator;
            for instance, subtasks can appear similar to
            [sections](#asana-sections) without being true
            `section` objects. If a `task` object is rendered this way in any
            context it will have the property `is_rendered_as_separator` set
            to `true`.<br /><br />*Note: Until the default behavior for our
            API changes integrations must [opt in to the `new_sections` change]
            (https://forum.asana.com/t/sections-are-dead-long-live-sections/33951)
            to modify the `is_rendered_as_separator` property.*
          type: boolean
          example: false
          readOnly: true
        liked:
          description: >-
            True if the task is liked by the authorized user, false if not.
          type: boolean
          example: true
          readOnly: true
        likes:
          description: Array of users who have liked this task.
          type: array
          items:
            description: >-
              A *user* object represents an account in Asana that can be given
              access to various workspaces, projects, and tasks.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: user
              name:
                description: >-
                  *Read-only except when same user as requester*. The user’s name.
                type: string
                example: Greg Sanchez
          readOnly: true
        memberships:
          description: >-
            *Create-only*. Array of projects this task is associated with
            and the section it is in. At task creation time, this array can be
            used to add the task to specific sections. After task creation,
            these associations can be modified using the `addProject` and
            `removeProject` endpoints. Note that over time, more types of
            memberships may be added to this property.
          type: array
          readOnly: true
          items:
            type: object
            properties:
              project:
                description: >-
                  A *project* represents a prioritized list of tasks in Asana or a
                  board
                  with columns of tasks represented as cards. It exists in a single
                  workspace or organization and is accessible to a subset of users
                  in
                  that workspace or organization, depending on its permissions.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: project
                  name:
                    description: >-
                      Name of the project. This is generally a short sentence fragment
                      that fits on a line in the UI for maximum readability. However,
                      it
                      can be longer.
                    type: string
                    example: Stuff to buy
              section:
                description: >-
                  A *section* is a subdivision of a project that groups tasks together.
                  It can either be a header above a list of tasks in a list view or
                  a
                  column in a board view of a project.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: section
                  name:
                    description: >-
                      The name of the section (i.e. the text displayed as the section
                      header).
                    type: string
                    example: Next Actions
        modified_at:
          description: |-
            The time at which this task was last modified.

            *Note: This does not currently reflect any changes in
            associations such as projects or comments that may have been
            added or removed from the task.*
          type: string
          format: date-time
          readOnly: true
          example: '2012-02-22T02:06:58.147Z'
        notes:
          description: >-
            More detailed, free-form textual information associated with the
            task.
          type: string
          example: Mittens really likes the stuff from Humboldt.
        num_hearts:
          description: >-
            *Deprecated - please use likes instead* The number of users who
            have hearted this task.
          type: integer
          example: 5
          readOnly: true
        num_likes:
          description: The number of users who have liked this task.
          type: integer
          example: 5
          readOnly: true
        num_subtasks:
          description: >
            [Opt
            In](#input-output-options).
            The number of subtasks on this task.
          type: integer
          example: 3
          readOnly: true
        parent: {}
        projects:
          description: >-
            *Create-only.* Array of projects this task is associated with.
            At task creation time, this array can be used to add the task to
            many projects at once. After task creation, these associations can
            be modified using the addProject and removeProject endpoints.
          type: array
          readOnly: true
          items:
            description: >-
              A *project* represents a prioritized list of tasks in Asana or a board
              with columns of tasks represented as cards. It exists in a single
              workspace or organization and is accessible to a subset of users in
              that workspace or organization, depending on its permissions.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: project
              name:
                description: >-
                  Name of the project. This is generally a short sentence fragment
                  that fits on a line in the UI for maximum readability. However,
                  it
                  can be longer.
                type: string
                example: Stuff to buy
        start_on:
          description: >-
            The day on which work begins for the task , or null if the task
            has no start date. This takes a date with `YYYY-MM-DD` format.

            *Note: `due_on` or `due_at` must be present in the request when
            setting or unsetting the `start_on` parameter.*
          type: string
          nullable: true
          format: date
          example: '2012-03-26'
        tags:
          description: >-
            *Create-only*. Array of tags associated with this task. This
            property may be specified on creation using just an array of tag
            gids.  In order to change tags on an existing task use `addTag` and
            `removeTag`.
          type: array
          readOnly: true
          items:
            description: >-
              A *tag* is a label that can be attached to any task in Asana. It
              exists in a single workspace or organization.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: tag
              name:
                description: >-
                  Name of the tag. This is generally a short sentence fragment that
                  fits on a line in the UI for maximum readability. However, it can
                  be longer.
                type: string
                example: Stuff to buy
          example:
            - gid: '59746'
              name: Grade A
        workspace: {}
    TaskCompact:
      description: >-
        The *task* is the basic object around which many operations in Asana
        are centered.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: task
        name:
          description: The name of the object.
          type: string
          example: Bug Task
    TaskObject:
      type: object
      properties:
        data:
          description: >-
            The *task* is the basic object around which many operations in Asana
            are centered.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: task
            name:
              description: >-
                Name of the task. This is generally a short sentence fragment that
                fits on a line in the UI for maximum readability. However, it can
                be longer.
              type: string
              example: Buy catnip
            created_at:
              description: The time at which this resource was created.
              type: string
              format: date-time
              readOnly: true
              example: '2012-02-22T02:06:58.147Z'
            resource_subtype:
              description: >-
                The subtype of this resource. Different subtypes retain many of
                the same fields and behavior, but may render differently in Asana
                or represent resources with different semantic meaning.

                The resource_subtype `milestone` represent a single moment in
                time. This means tasks with this subtype cannot have a start_date.

                *Note: The resource_subtype of `section` is under active
                migration—please see our [forum
                post](https://forum.asana.com/t/sections-are-dead-long-live-sections)
                for more information.*
              type: string
              readOnly: true
              enum:
                - default_task
                - milestone
                - section
              example: default_task
            assignee: {}
            assignee_status:
              description: >-
                Scheduling status of this task for the user it is assigned to.
                This field can only be set if the assignee is non-null.
              type: string
              enum:
                - today
                - upcoming
                - later
                - new
                - inbox
              example: upcoming
            completed:
              description: >-
                True if the task is currently marked complete, false if not.
              type: boolean
              example: false
            completed_at:
              description: >-
                The time at which this task was completed, or null if the task is
                incomplete.
              type: string
              format: date-time
              readOnly: true
              nullable: true
              example: '2012-02-22T02:06:58.147Z'
            custom_fields:
              description: >-
                Array of custom field values applied to the project. These
                represent the custom field values recorded on this project for a
                particular custom field. For example, these custom field values
                will contain an `enum_value` property for custom fields of type
                `enum`, a `text_value` property for custom fields of type
                `text`, and so on. Please note that the `gid` returned on each
                custom field value *is identical* to the `gid` of the custom field,
                which allows referencing the custom field metadata through the
                `/custom_fields/custom_field-gid` endpoint.
              type: array
              items:
                description: >-
                  Custom Fields store the metadata that is used in order to
                  add user-specified information to tasks in Asana. Be sure
                  to reference the [Custom Fields](#asana-custom-fields)
                  developer documentation for more information about how custom fields
                  relate to various resources in Asana.


                  Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields),
                  which will make them read-only when accessed by other users.
                  Attempting to edit a locked custom field will return HTTP error
                  code
                  `403 Forbidden`.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: custom_field
                  name:
                    description: The name of the object.
                    type: string
                    example: Bug Task
                  resource_subtype:
                    description: >
                      The type of the custom field. Must be one of the given values.
                    type: string
                    example: text
                    enum:
                      - text
                      - enum
                      - number
                  type:
                    description: >
                      *Deprecated: new integrations should prefer the resource_subtype
                      field.* The type of the custom field. Must be one of the given
                      values.
                    type: string
                    readOnly: true
                    enum:
                      - text
                      - enum
                      - number
                  enum_options:
                    description: >-
                      *Conditional*. Only relevant for custom fields of type `enum`.
                      This array specifies the possible values which an `enum` custom
                      field can adopt. To modify the enum options, refer to [working
                      with enum
                      options](#create-an-enum-option).
                    type: array
                    items:
                      description: >-
                        Enum options are the possible values which an enum custom
                        field can
                        adopt. An enum custom field must contain at least 1 enum option
                        but no
                        more than 50.


                        You can add enum options to a custom field by using the `POST
                        /custom_fields/custom_field_gid/enum_options` endpoint.


                        **It is not possible to remove or delete an enum option**.
                        Instead,
                        enum options can be disabled by updating the `enabled` field
                        to false
                        with the `PUT /enum_options/enum_option_gid` endpoint. Other
                        attributes can be updated similarly.


                        On creation of an enum option, `enabled` is always set to
                        `true`,
                        meaning the enum option is a selectable value for the custom
                        field.
                        Setting `enabled=false` is equivalent to “trashing” the enum
                        option in
                        the Asana web app within the “Edit Fields” dialog. The enum
                        option
                        will no longer be selectable but, if the enum option value
                        was
                        previously set within a task, the task will retain the value.


                        Enum options are an ordered list and by default new enum options
                        are
                        inserted at the end. Ordering in relation to existing enum
                        options can
                        be specified on creation by using `insert_before` or `insert_after`
                        to
                        reference an existing enum option. Only one of `insert_before`
                        and
                        `insert_after` can be provided when creating a new enum option.


                        An enum options list can be reordered with the `POST
                        /custom_fields/custom_field_gid/enum_options/insert` endpoint.
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the object, as a string.
                          type: string
                          readOnly: true
                          example: '12345'
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: enum_option
                        name:
                          description: The name of the enum option.
                          type: string
                          example: Low
                        enabled:
                          description: "The color of the enum option. Defaults to\
                            \ \u2018none\u2019."
                          type: boolean
                          example: true
                        color:
                          description: >-
                            Whether or not the enum option is a selectable value for
                            the
                            custom field.
                          type: string
                          example: blue
                  enum_value: {}
                  enabled:
                    description: >-
                      *Conditional*. Determines if the custom field is enabled or
                      not.
                    type: boolean
                    example: true
                  text_value:
                    description: >-
                      *Conditional*. This string is the value of a text custom field.
                    type: string
                    example: Some Value
                  description:
                    description: >-
                      [Opt
                      In](#input-output-options).
                      The description of the custom field.
                    type: string
                    example: Development team priority
                  precision:
                    description: >-
                      Only relevant for custom fields of type ‘Number’. This field
                      dictates the number of places after the decimal to round to,
                      i.e.
                      0 is integer values, 1 rounds to the nearest tenth, and so on.
                      Must be between 0 and 6, inclusive.
                    type: integer
                    example: 2
                  is_global_to_workspace:
                    description: >-
                      This flag describes whether this custom field is available to
                      every container in the workspace. Before project-specific custom
                      fields, this field was always true.
                    type: boolean
                    example: true
                    readOnly: true
                  has_notifications_enabled:
                    description: >-
                      This flag describes whether a follower of a task with this field
                      should receive inbox notifications from changes to this field.
                    type: boolean
                    example: true
              readOnly: true
            dependencies:
              description: >-
                [Opt
                In](#input-output-options).
                Array of resources referencing tasks that this task depends on.
                The objects contain only the gid of the dependency.
              type: array
              items:
                type: object
                properties:
                  gid:
                    type: string
                    example: '1234'
              readOnly: true
              example:
                - gid: '1234'
                - gid: '4321'
            dependents:
              description: >-
                [Opt
                In](#input-output-options).
                Array of resources referencing tasks that depend on this task. The
                objects contain only the ID of the dependent.
              type: array
              items:
                type: object
                properties:
                  gid:
                    type: string
                    example: '1234'
              readOnly: true
              example:
                - gid: '1234'
                - gid: '4321'
            due_at:
              description: >-
                Date and time on which this task is due, or null if the task has
                no due time. This takes a UTC timestamp and should not be used
                together with `due_on`.
              type: string
              format: date
              example: '2012-02-22T02:06:58.147Z'
              nullable: true
            due_on:
              description: >-
                Date on which this task is due, or null if the task has no due
                date.  This takes a date with `YYYY-MM-DD` format and should not
                be used together with due_at.
              type: string
              format: date
              example: '2012-03-26'
              nullable: true
            external:
              description: >-
                *OAuth Required*. *Conditional*. This field is returned only
                if external values are set or included by using [Opt In]
                (#input-output-options).

                The external field allows you to store app-specific metadata on
                tasks, including a gid that can be used to retrieve tasks and a
                data blob that can store app-specific character strings. Note that
                you will need to authenticate with Oauth to access or modify this
                data. Once an external gid is set, you can use the notation
                `external:custom_gid` to reference your object anywhere in the API
                where you may use the original object gid. See the page on Custom
                External Data for more details.
              type: object
              properties:
                gid:
                  type: string
                  example: '1234'
                data:
                  type: string
                  example: A blob of information.
              example:
                gid: my_gid
                data: A blob of information
            followers:
              description: Array of users following this task.
              type: array
              readOnly: true
              items:
                description: >-
                  A *user* object represents an account in Asana that can be given
                  access to various workspaces, projects, and tasks.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: user
                  name:
                    description: >-
                      *Read-only except when same user as requester*. The user’s name.
                    type: string
                    example: Greg Sanchez
            html_notes:
              description: >-
                [Opt
                In](#input-output-options).
                The notes of the text with formatting as HTML.

                *Note: This field is under active migration—please see our blog
                post for more information.*
              type: string
              example: >-
                <body>Mittens <em>really</em> likes the stuff from
                Humboldt.</body>
            hearted:
              description: >-
                *Deprecated - please use liked instead* True if the task is
                hearted by the authorized user, false if not.
              type: boolean
              example: true
              readOnly: true
            hearts:
              description: >-
                *Deprecated - please use likes instead* Array of users who have
                hearted this task.
              type: array
              items:
                description: >-
                  A *user* object represents an account in Asana that can be given
                  access to various workspaces, projects, and tasks.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: user
                  name:
                    description: >-
                      *Read-only except when same user as requester*. The user’s name.
                    type: string
                    example: Greg Sanchez
              readOnly: true
            is_rendered_as_separator:
              description: >-
                [Opt In](#input-output-options).
                In some contexts tasks can be rendered as a visual separator;
                for instance, subtasks can appear similar to
                [sections](#asana-sections) without being true
                `section` objects. If a `task` object is rendered this way in any
                context it will have the property `is_rendered_as_separator` set
                to `true`.<br /><br />*Note: Until the default behavior for our
                API changes integrations must [opt in to the `new_sections` change]
                (https://forum.asana.com/t/sections-are-dead-long-live-sections/33951)
                to modify the `is_rendered_as_separator` property.*
              type: boolean
              example: false
              readOnly: true
            liked:
              description: >-
                True if the task is liked by the authorized user, false if not.
              type: boolean
              example: true
              readOnly: true
            likes:
              description: Array of users who have liked this task.
              type: array
              items:
                description: >-
                  A *user* object represents an account in Asana that can be given
                  access to various workspaces, projects, and tasks.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: user
                  name:
                    description: >-
                      *Read-only except when same user as requester*. The user’s name.
                    type: string
                    example: Greg Sanchez
              readOnly: true
            memberships:
              description: >-
                *Create-only*. Array of projects this task is associated with
                and the section it is in. At task creation time, this array can be
                used to add the task to specific sections. After task creation,
                these associations can be modified using the `addProject` and
                `removeProject` endpoints. Note that over time, more types of
                memberships may be added to this property.
              type: array
              readOnly: true
              items:
                type: object
                properties:
                  project:
                    description: >-
                      A *project* represents a prioritized list of tasks in Asana
                      or a board
                      with columns of tasks represented as cards. It exists in a single
                      workspace or organization and is accessible to a subset of users
                      in
                      that workspace or organization, depending on its permissions.
                    type: object
                    properties:
                      gid:
                        description: >-
                          Globally unique identifier of the object, as a string.
                        type: string
                        readOnly: true
                        example: '12345'
                      resource_type:
                        description: The base type of this resource.
                        type: string
                        readOnly: true
                        example: project
                      name:
                        description: >-
                          Name of the project. This is generally a short sentence
                          fragment
                          that fits on a line in the UI for maximum readability. However,
                          it
                          can be longer.
                        type: string
                        example: Stuff to buy
                  section:
                    description: >-
                      A *section* is a subdivision of a project that groups tasks
                      together.
                      It can either be a header above a list of tasks in a list view
                      or a
                      column in a board view of a project.
                    type: object
                    properties:
                      gid:
                        description: >-
                          Globally unique identifier of the object, as a string.
                        type: string
                        readOnly: true
                        example: '12345'
                      resource_type:
                        description: The base type of this resource.
                        type: string
                        readOnly: true
                        example: section
                      name:
                        description: >-
                          The name of the section (i.e. the text displayed as the
                          section
                          header).
                        type: string
                        example: Next Actions
            modified_at:
              description: |-
                The time at which this task was last modified.

                *Note: This does not currently reflect any changes in
                associations such as projects or comments that may have been
                added or removed from the task.*
              type: string
              format: date-time
              readOnly: true
              example: '2012-02-22T02:06:58.147Z'
            notes:
              description: >-
                More detailed, free-form textual information associated with the
                task.
              type: string
              example: Mittens really likes the stuff from Humboldt.
            num_hearts:
              description: >-
                *Deprecated - please use likes instead* The number of users who
                have hearted this task.
              type: integer
              example: 5
              readOnly: true
            num_likes:
              description: The number of users who have liked this task.
              type: integer
              example: 5
              readOnly: true
            num_subtasks:
              description: >
                [Opt
                In](#input-output-options).
                The number of subtasks on this task.
              type: integer
              example: 3
              readOnly: true
            parent: {}
            projects:
              description: >-
                *Create-only.* Array of projects this task is associated with.
                At task creation time, this array can be used to add the task to
                many projects at once. After task creation, these associations can
                be modified using the addProject and removeProject endpoints.
              type: array
              readOnly: true
              items:
                description: >-
                  A *project* represents a prioritized list of tasks in Asana or a
                  board
                  with columns of tasks represented as cards. It exists in a single
                  workspace or organization and is accessible to a subset of users
                  in
                  that workspace or organization, depending on its permissions.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: project
                  name:
                    description: >-
                      Name of the project. This is generally a short sentence fragment
                      that fits on a line in the UI for maximum readability. However,
                      it
                      can be longer.
                    type: string
                    example: Stuff to buy
            start_on:
              description: >-
                The day on which work begins for the task , or null if the task
                has no start date. This takes a date with `YYYY-MM-DD` format.

                *Note: `due_on` or `due_at` must be present in the request when
                setting or unsetting the `start_on` parameter.*
              type: string
              nullable: true
              format: date
              example: '2012-03-26'
            tags:
              description: >-
                *Create-only*. Array of tags associated with this task. This
                property may be specified on creation using just an array of tag
                gids.  In order to change tags on an existing task use `addTag` and
                `removeTag`.
              type: array
              readOnly: true
              items:
                description: >-
                  A *tag* is a label that can be attached to any task in Asana. It
                  exists in a single workspace or organization.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: tag
                  name:
                    description: >-
                      Name of the tag. This is generally a short sentence fragment
                      that
                      fits on a line in the UI for maximum readability. However, it
                      can
                      be longer.
                    type: string
                    example: Stuff to buy
              example:
                - gid: '59746'
                  name: Grade A
            workspace: {}
    TaskArray:
      type: object
      properties:
        data:
          type: array
          items:
            description: >-
              The *task* is the basic object around which many operations in Asana
              are centered.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: task
              name:
                description: The name of the object.
                type: string
                example: Bug Task
    TaskCount:
      description: A response object returned from the task count endpoint.
      type: object
      properties:
        num_tasks:
          description: The number of tasks in a project.
          type: integer
          example: 200
        num_incomplete_tasks:
          description: The number of incomplete tasks in a project.
          type: integer
          example: 50
        num_completed_tasks:
          description: The number of completed tasks in a project.
          type: integer
          example: 150
        num_milestones:
          description: The number of milestones in a project.
          type: integer
          example: 10
        num_incomplete_milestones:
          description: The number of incomplete milestones in a project.
          type: integer
          example: 7
        num_completed_milestones:
          description: The number of completed milestones in a project.
          type: integer
          example: 3
    TaskCountObject:
      type: object
      properties:
        data:
          description: A response object returned from the task count endpoint.
          type: object
          properties:
            num_tasks:
              description: The number of tasks in a project.
              type: integer
              example: 200
            num_incomplete_tasks:
              description: The number of incomplete tasks in a project.
              type: integer
              example: 50
            num_completed_tasks:
              description: The number of completed tasks in a project.
              type: integer
              example: 150
            num_milestones:
              description: The number of milestones in a project.
              type: integer
              example: 10
            num_incomplete_milestones:
              description: The number of incomplete milestones in a project.
              type: integer
              example: 7
            num_completed_milestones:
              description: The number of completed milestones in a project.
              type: integer
              example: 3
    Team:
      description: >-
        A *team* is used to group related projects and people together within
        an organization. Each project in an organization is associated with a
        team.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: team
        name:
          description: The name of the object.
          type: string
          example: Bug Task
        description:
          description: >
            [Opt
            In](#input-output-options).
            The description of the team.
          type: string
          example: All developers should be members of this team.
        html_description:
          description: >
            [Opt
            In](#input-output-options).
            The description of the team with formatting as HTML.

            *Note: This field is under active migration—please see our [blog
            post](https://developers.asana.com/docs/#rich-text) for more
            information.*
          type: string
          example: >-
            <body><em>All</em> developers should be members of this
            team.</body>
        organization: {}
    TeamCompact:
      description: >-
        A *team* is used to group related projects and people together within
        an organization. Each project in an organization is associated with a
        team.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: team
        name:
          description: The name of the object.
          type: string
          example: Bug Task
    TeamObject:
      type: object
      properties:
        data:
          description: >-
            A *team* is used to group related projects and people together within
            an organization. Each project in an organization is associated with a
            team.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: team
            name:
              description: The name of the object.
              type: string
              example: Bug Task
            description:
              description: >
                [Opt
                In](#input-output-options).
                The description of the team.
              type: string
              example: All developers should be members of this team.
            html_description:
              description: >
                [Opt
                In](#input-output-options).
                The description of the team with formatting as HTML.

                *Note: This field is under active migration—please see our [blog
                post](https://developers.asana.com/docs/#rich-text) for more
                information.*
              type: string
              example: >-
                <body><em>All</em> developers should be members of this
                team.</body>
            organization: {}
    TeamArray:
      type: object
      properties:
        data:
          type: array
          items:
            description: >-
              A *team* is used to group related projects and people together within
              an organization. Each project in an organization is associated with
              a
              team.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: team
              name:
                description: The name of the object.
                type: string
                example: Bug Task
              description:
                description: >
                  [Opt
                  In](#input-output-options).
                  The description of the team.
                type: string
                example: All developers should be members of this team.
              html_description:
                description: >
                  [Opt
                  In](#input-output-options).
                  The description of the team with formatting as HTML.

                  *Note: This field is under active migration—please see our [blog
                  post](https://developers.asana.com/docs/#rich-text) for more
                  information.*
                type: string
                example: >-
                  <body><em>All</em> developers should be members of this
                  team.</body>
              organization: {}
    User:
      description: >-
        A *user* object represents an account in Asana that can be given
        access to various workspaces, projects, and tasks.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: user
        name:
          description: >-
            *Read-only except when same user as requester*. The user’s name.
          type: string
          example: Greg Sanchez
        email:
          type: string
          format: email
          readOnly: true
          description: "The user\u2019s email address."
          example: gsanchez@example.com
        photo:
          type: object
          nullable: true
          properties:
            image_21x21:
              type: string
              format: uri
            image_27x27:
              type: string
              format: uri
            image_36x36:
              type: string
              format: uri
            image_60x60:
              type: string
              format: uri
            image_128x128:
              type: string
              format: uri
          readOnly: true
          description: >-
            A map of the user’s profile photo in various sizes, or null if no
            photo is set. Sizes provided are 21, 27, 36, 60, and 128. Images
            are in PNG format.
          example:
            image_21x21: https://...
            image_27x27: https://...
            image_36x36: https://...
            image_60x60: https://...
            image_128x128: https://...
        workspaces:
          description: >-
            Workspaces and organizations this user may access.

            Note\: The API will only return workspaces and organizations that
            also contain the authenticated user.
          readOnly: true
          type: array
          items:
            description: >-
              A *workspace* is the highest-level organizational unit in Asana. All
              projects and tasks have an associated workspace.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: workspace
              name:
                description: The name of the object.
                type: string
                example: My Company Workspace
    UserCompact:
      description: >-
        A *user* object represents an account in Asana that can be given
        access to various workspaces, projects, and tasks.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: user
        name:
          description: >-
            *Read-only except when same user as requester*. The user’s name.
          type: string
          example: Greg Sanchez
    UserObject:
      type: object
      properties:
        data:
          description: >-
            A *user* object represents an account in Asana that can be given
            access to various workspaces, projects, and tasks.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: user
            name:
              description: >-
                *Read-only except when same user as requester*. The user’s name.
              type: string
              example: Greg Sanchez
            email:
              type: string
              format: email
              readOnly: true
              description: "The user\u2019s email address."
              example: gsanchez@example.com
            photo:
              type: object
              nullable: true
              properties:
                image_21x21:
                  type: string
                  format: uri
                image_27x27:
                  type: string
                  format: uri
                image_36x36:
                  type: string
                  format: uri
                image_60x60:
                  type: string
                  format: uri
                image_128x128:
                  type: string
                  format: uri
              readOnly: true
              description: >-
                A map of the user’s profile photo in various sizes, or null if no
                photo is set. Sizes provided are 21, 27, 36, 60, and 128. Images
                are in PNG format.
              example:
                image_21x21: https://...
                image_27x27: https://...
                image_36x36: https://...
                image_60x60: https://...
                image_128x128: https://...
            workspaces:
              description: >-
                Workspaces and organizations this user may access.

                Note\: The API will only return workspaces and organizations that
                also contain the authenticated user.
              readOnly: true
              type: array
              items:
                description: >-
                  A *workspace* is the highest-level organizational unit in Asana.
                  All
                  projects and tasks have an associated workspace.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: workspace
                  name:
                    description: The name of the object.
                    type: string
                    example: My Company Workspace
    UserArray:
      type: object
      properties:
        data:
          type: array
          items:
            description: >-
              A *user* object represents an account in Asana that can be given
              access to various workspaces, projects, and tasks.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: user
              name:
                description: >-
                  *Read-only except when same user as requester*. The user’s name.
                type: string
                example: Greg Sanchez
              email:
                type: string
                format: email
                readOnly: true
                description: "The user\u2019s email address."
                example: gsanchez@example.com
              photo:
                type: object
                nullable: true
                properties:
                  image_21x21:
                    type: string
                    format: uri
                  image_27x27:
                    type: string
                    format: uri
                  image_36x36:
                    type: string
                    format: uri
                  image_60x60:
                    type: string
                    format: uri
                  image_128x128:
                    type: string
                    format: uri
                readOnly: true
                description: >-
                  A map of the user’s profile photo in various sizes, or null if no
                  photo is set. Sizes provided are 21, 27, 36, 60, and 128. Images
                  are in PNG format.
                example:
                  image_21x21: https://...
                  image_27x27: https://...
                  image_36x36: https://...
                  image_60x60: https://...
                  image_128x128: https://...
              workspaces:
                description: >-
                  Workspaces and organizations this user may access.

                  Note\: The API will only return workspaces and organizations that
                  also contain the authenticated user.
                readOnly: true
                type: array
                items:
                  description: >-
                    A *workspace* is the highest-level organizational unit in Asana.
                    All
                    projects and tasks have an associated workspace.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: workspace
                    name:
                      description: The name of the object.
                      type: string
                      example: My Company Workspace
    UserIdObject:
      description: A user identification object for specification with the addUser/removeUser
        endpoints.
      type: object
      properties:
        data:
          type: object
          properties:
            user:
              type: string
              example: '12345'
    UserTaskList:
      description: >-
        A user task list represents the tasks assigned to a particular user.
        It provides API access to a user’s “My Tasks” view in Asana.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: task
        name:
          description: The name of the object.
          type: string
          example: Bug Task
        owner: {}
        workspace: {}
    UserTaskListCompact:
      description: >-
        A generic Asana Object, containing a globally unique identifier.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: task
        name:
          description: The name of the object.
          type: string
          example: Bug Task
    UserTaskListObject:
      type: object
      properties:
        data:
          description: >-
            A user task list represents the tasks assigned to a particular user.
            It provides API access to a user’s “My Tasks” view in Asana.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: task
            name:
              description: The name of the object.
              type: string
              example: Bug Task
            owner: {}
            workspace: {}
    Webhook:
      description: >-
        Webhooks allow an application to be notified of changes. This is in
        addition to the ability to fetch those changes directly as Events - in
        fact, Webhooks are just a way to receive
        [Events](#asana-events) via HTTP
        POST at the time they occur instead of polling for them. For services
        accessible via HTTP this is often vastly more convenient, and if
        events are not too frequent can be significantly more efficient.


        In both cases, however, changes are represented as Event objects -
        refer to the [Events documentation](#asana-events)
        for more information on what data these events contain.


        *Note: While Webhooks send arrays of Event objects to their target,
        the Event objects themselves contain *only gids*, rather than the
        actual resource they are referencing. Webhooks themselves contain only
        the information necessary to deliver the events to the desired target
        as they are generated.*
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: task
        created_at:
          description: The time at which this resource was created.
          type: string
          format: date-time
          readOnly: true
          example: '2012-02-22T02:06:58.147Z'
        active:
          description: >-
            If true, the webhook will send events - if false it is considered
            inactive and will not generate events.
          type: boolean
          example: false
        last_failure_at:
          description: >-
            The timestamp when the webhook last received an error when sending
            an event to the target.
          type: string
          format: date-time
          readOnly: true
          example: '2012-02-22T02:06:58.147Z'
        last_failure_content:
          description: >-
            The contents of the last error response sent to the webhook when
            attempting to deliver events to the target.
          type: string
          readOnly: true
          example: 500 Server Error\n\nCould not complete the request
        last_success_at:
          description: >-
            The timestamp when the webhook last successfully sent an event to
            the target.
          type: string
          format: date-time
          readOnly: true
          example: '2012-02-22T02:06:58.147Z'
        resource: {}
        target:
          description: The URL to receive the HTTP POST.
          type: string
          format: uri
          readOnly: true
          example: https://example.com/receive-webhook/7654
    WebhookEvent:
      type: object
      properties:
        action:
          description: The type of action taken that triggered the event.
          type: string
          readOnly: true
          example: changed
        created_at:
          description: The timestamp when the event occurred.
          type: string
          format: date-time
          readOnly: true
          example: '2012-02-22T02:06:58.147Z'
        parent:
          description: >-
            For added/removed events, the parent gid that resource was added to or
            removed from. The parent will be `null` for other event types.
          type: string
          readOnly: true
          nullable: true
          example: '12345'
        resource:
          description: |-
            The resource gid the event occurred on.

            *Note: The resource that triggered the event may be different from
            the one that the events were requested for. For example, a
            subscription to a project will contain events for tasks contained
            within the project.*
          type: string
          readOnly: true
          example: '32154'
        type:
          description: |-
            The type of the resource that generated the event.

            *Note: Currently, only tasks, projects and stories generate
            events.*
          type: string
          readOnly: true
          example: task
        user:
          description: |-
            The gid of the user who triggered the event.

            *Note: The event may be triggered by a different user than the
            subscriber. For example, if user A subscribes to a task and user B
            modified it, the event’s user will be user B. Note: Some events are
            generated by the system, and will have `null` as the user. API
            consumers should make sure to handle this case.*
          type: string
          readOnly: true
          nullable: true
          example: '321654987'
    WebhookObject:
      type: object
      properties:
        data:
          description: >-
            Webhooks allow an application to be notified of changes. This is in
            addition to the ability to fetch those changes directly as Events - in
            fact, Webhooks are just a way to receive
            [Events](#asana-events) via HTTP
            POST at the time they occur instead of polling for them. For services
            accessible via HTTP this is often vastly more convenient, and if
            events are not too frequent can be significantly more efficient.


            In both cases, however, changes are represented as Event objects -
            refer to the [Events documentation](#asana-events)
            for more information on what data these events contain.


            *Note: While Webhooks send arrays of Event objects to their target,
            the Event objects themselves contain *only gids*, rather than the
            actual resource they are referencing. Webhooks themselves contain only
            the information necessary to deliver the events to the desired target
            as they are generated.*
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: task
            created_at:
              description: The time at which this resource was created.
              type: string
              format: date-time
              readOnly: true
              example: '2012-02-22T02:06:58.147Z'
            active:
              description: >-
                If true, the webhook will send events - if false it is considered
                inactive and will not generate events.
              type: boolean
              example: false
            last_failure_at:
              description: >-
                The timestamp when the webhook last received an error when sending
                an event to the target.
              type: string
              format: date-time
              readOnly: true
              example: '2012-02-22T02:06:58.147Z'
            last_failure_content:
              description: >-
                The contents of the last error response sent to the webhook when
                attempting to deliver events to the target.
              type: string
              readOnly: true
              example: 500 Server Error\n\nCould not complete the request
            last_success_at:
              description: >-
                The timestamp when the webhook last successfully sent an event to
                the target.
              type: string
              format: date-time
              readOnly: true
              example: '2012-02-22T02:06:58.147Z'
            resource: {}
            target:
              description: The URL to receive the HTTP POST.
              type: string
              format: uri
              readOnly: true
              example: https://example.com/receive-webhook/7654
    WebhookArray:
      type: object
      properties:
        data:
          type: array
          items:
            description: >-
              Webhooks allow an application to be notified of changes. This is in
              addition to the ability to fetch those changes directly as Events -
              in
              fact, Webhooks are just a way to receive
              [Events](#asana-events) via HTTP
              POST at the time they occur instead of polling for them. For services
              accessible via HTTP this is often vastly more convenient, and if
              events are not too frequent can be significantly more efficient.


              In both cases, however, changes are represented as Event objects -
              refer to the [Events documentation](#asana-events)
              for more information on what data these events contain.


              *Note: While Webhooks send arrays of Event objects to their target,
              the Event objects themselves contain *only gids*, rather than the
              actual resource they are referencing. Webhooks themselves contain only
              the information necessary to deliver the events to the desired target
              as they are generated.*
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: task
              created_at:
                description: The time at which this resource was created.
                type: string
                format: date-time
                readOnly: true
                example: '2012-02-22T02:06:58.147Z'
              active:
                description: >-
                  If true, the webhook will send events - if false it is considered
                  inactive and will not generate events.
                type: boolean
                example: false
              last_failure_at:
                description: >-
                  The timestamp when the webhook last received an error when sending
                  an event to the target.
                type: string
                format: date-time
                readOnly: true
                example: '2012-02-22T02:06:58.147Z'
              last_failure_content:
                description: >-
                  The contents of the last error response sent to the webhook when
                  attempting to deliver events to the target.
                type: string
                readOnly: true
                example: 500 Server Error\n\nCould not complete the request
              last_success_at:
                description: >-
                  The timestamp when the webhook last successfully sent an event to
                  the target.
                type: string
                format: date-time
                readOnly: true
                example: '2012-02-22T02:06:58.147Z'
              resource: {}
              target:
                description: The URL to receive the HTTP POST.
                type: string
                format: uri
                readOnly: true
                example: https://example.com/receive-webhook/7654
    Workspace:
      description: >-
        A *workspace* is the highest-level organizational unit in Asana. All
        projects and tasks have an associated workspace.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: workspace
        name:
          description: The name of the object.
          type: string
          example: My Company Workspace
        email_domains:
          description: The email domains that are associated with this workspace.
          type: array
          items:
            type: string
            format: uri
          example:
            - asana.com
        is_organization:
          description: Whether the workspace is an *organization*.
          type: boolean
          example: false
    WorkspaceCompact:
      description: >-
        A *workspace* is the highest-level organizational unit in Asana. All
        projects and tasks have an associated workspace.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: The base type of this resource.
          type: string
          readOnly: true
          example: workspace
        name:
          description: The name of the object.
          type: string
          example: My Company Workspace
    WorkspaceObject:
      type: object
      properties:
        data:
          description: >-
            A *workspace* is the highest-level organizational unit in Asana. All
            projects and tasks have an associated workspace.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: workspace
            name:
              description: The name of the object.
              type: string
              example: My Company Workspace
            email_domains:
              description: The email domains that are associated with this workspace.
              type: array
              items:
                type: string
                format: uri
              example:
                - asana.com
            is_organization:
              description: Whether the workspace is an *organization*.
              type: boolean
              example: false
    WorkspaceArray:
      type: object
      properties:
        data:
          type: array
          items:
            description: >-
              A *workspace* is the highest-level organizational unit in Asana. All
              projects and tasks have an associated workspace.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: The base type of this resource.
                type: string
                readOnly: true
                example: workspace
              name:
                description: The name of the object.
                type: string
                example: My Company Workspace
    WorkspaceMembership:
      description: >-
        This object determines if a user is a member of a workspace.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: >-
            The resource type of this resource. The value for this resource is always
            `workspace_membership`.
          type: string
          readOnly: true
          example: workspace_membership
        user:
          description: >-
            A *user* object represents an account in Asana that can be given
            access to various workspaces, projects, and tasks.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: user
            name:
              description: >-
                *Read-only except when same user as requester*. The user’s name.
              type: string
              example: Greg Sanchez
        workspace:
          description: >-
            A *workspace* is the highest-level organizational unit in Asana. All
            projects and tasks have an associated workspace.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: workspace
            name:
              description: The name of the object.
              type: string
              example: My Company Workspace
        user_task_list:
          description: >-
            A user task list represents the tasks assigned to a particular user.
            It provides API access to a user’s “My Tasks” view in Asana.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: task
            name:
              description: The name of the object.
              type: string
              example: Bug Task
            owner: {}
            workspace: {}
        is_active:
          type: boolean
          readOnly: true
          description: >-
            Reflects if this user still a member of the workspace.
        is_admin:
          type: boolean
          readOnly: true
          description: >-
            Reflects if this user is an admin of the workspace.
        is_guest:
          type: boolean
          readOnly: true
          description: >-
            Reflects if this user is a guest of the workspace.
    WorkspaceMembershipCompact:
      description: >-
        This object determines if a user is a member of a workspace.
      type: object
      properties:
        gid:
          description: >-
            Globally unique identifier of the object, as a string.
          type: string
          readOnly: true
          example: '12345'
        resource_type:
          description: >-
            The resource type of this resource. The value for this resource is always
            `workspace_membership`.
          type: string
          readOnly: true
          example: workspace_membership
        user:
          description: >-
            A *user* object represents an account in Asana that can be given
            access to various workspaces, projects, and tasks.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: user
            name:
              description: >-
                *Read-only except when same user as requester*. The user’s name.
              type: string
              example: Greg Sanchez
        workspace:
          description: >-
            A *workspace* is the highest-level organizational unit in Asana. All
            projects and tasks have an associated workspace.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: The base type of this resource.
              type: string
              readOnly: true
              example: workspace
            name:
              description: The name of the object.
              type: string
              example: My Company Workspace
    WorkspaceMembershipObject:
      type: object
      properties:
        data:
          description: >-
            This object determines if a user is a member of a workspace.
          type: object
          properties:
            gid:
              description: >-
                Globally unique identifier of the object, as a string.
              type: string
              readOnly: true
              example: '12345'
            resource_type:
              description: >-
                The resource type of this resource. The value for this resource is
                always `workspace_membership`.
              type: string
              readOnly: true
              example: workspace_membership
            user:
              description: >-
                A *user* object represents an account in Asana that can be given
                access to various workspaces, projects, and tasks.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: user
                name:
                  description: >-
                    *Read-only except when same user as requester*. The user’s name.
                  type: string
                  example: Greg Sanchez
            workspace:
              description: >-
                A *workspace* is the highest-level organizational unit in Asana. All
                projects and tasks have an associated workspace.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: workspace
                name:
                  description: The name of the object.
                  type: string
                  example: My Company Workspace
            user_task_list:
              description: >-
                A user task list represents the tasks assigned to a particular user.
                It provides API access to a user’s “My Tasks” view in Asana.
              type: object
              properties:
                gid:
                  description: >-
                    Globally unique identifier of the object, as a string.
                  type: string
                  readOnly: true
                  example: '12345'
                resource_type:
                  description: The base type of this resource.
                  type: string
                  readOnly: true
                  example: task
                name:
                  description: The name of the object.
                  type: string
                  example: Bug Task
                owner: {}
                workspace: {}
            is_active:
              type: boolean
              readOnly: true
              description: >-
                Reflects if this user still a member of the workspace.
            is_admin:
              type: boolean
              readOnly: true
              description: >-
                Reflects if this user is an admin of the workspace.
            is_guest:
              type: boolean
              readOnly: true
              description: >-
                Reflects if this user is a guest of the workspace.
    WorkspaceMembershipArray:
      type: object
      properties:
        data:
          type: array
          items:
            description: >-
              This object determines if a user is a member of a workspace.
            type: object
            properties:
              gid:
                description: >-
                  Globally unique identifier of the object, as a string.
                type: string
                readOnly: true
                example: '12345'
              resource_type:
                description: >-
                  The resource type of this resource. The value for this resource
                  is always `workspace_membership`.
                type: string
                readOnly: true
                example: workspace_membership
              user:
                description: >-
                  A *user* object represents an account in Asana that can be given
                  access to various workspaces, projects, and tasks.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: user
                  name:
                    description: >-
                      *Read-only except when same user as requester*. The user’s name.
                    type: string
                    example: Greg Sanchez
              workspace:
                description: >-
                  A *workspace* is the highest-level organizational unit in Asana.
                  All
                  projects and tasks have an associated workspace.
                type: object
                properties:
                  gid:
                    description: >-
                      Globally unique identifier of the object, as a string.
                    type: string
                    readOnly: true
                    example: '12345'
                  resource_type:
                    description: The base type of this resource.
                    type: string
                    readOnly: true
                    example: workspace
                  name:
                    description: The name of the object.
                    type: string
                    example: My Company Workspace
  securitySchemes:
    personalAccessToken:
      type: http
      description: >-
        A personal access token allows access to the api for the user who
        created it. This should be kept a secret and be treated like a
        password.
      name: pat
      in: header
      scheme: bearer
    oauth2:
      type: oauth2
      description: >-
        We require that applications designed to access the Asana API on behalf
        of multiple users implement OAuth 2.0.

        Asana supports the Authorization Code Grant flow.
      flows:
        authorizationCode:
          authorizationUrl: https://app.asana.com/-/oauth_authorize
          tokenUrl: https://app.asana.com/-/oauth_token
          refreshUrl: https://app.asana.com/-/oauth_token
          scopes:
            default:
              description: Provides access to all endpoints documented in our API
                reference. If no scopes are requested, this scope is assumed by default.
            openid:
              description: Provides access to OpenID Connect ID tokens and the OpenID
                Connect user info endpoint.
            email:
              description: "Provides access to the user\u2019s email through the OpenID\
                \ Connect user info endpoint."
            profile:
              description: "Provides access to the user\u2019s name and profile photo\
                \ through the OpenID Connect user info endpoint."
paths:
  /attachments/{attachment_gid}:
    parameters:
      - $ref: '#/components/parameters/attachment_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get an attachment
      description: Get the full record for a single attachment.
      tags:
        - Attachments
      operationId: getAttachment
      responses:
        200:
          description: Successfully retrieved the record for a single attachment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        402:
          $ref: '#/components/responses/PaymentRequired'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        424:
          $ref: '#/components/responses/TooManyRequests'
        500:
          $ref: '#/components/responses/InternalServerError'
        501:
          $ref: '#/components/responses/BadGateway'
        503:
          $ref: '#/components/responses/ServiceUnavailable'
        504:
          $ref: '#/components/responses/GatewayTimeout'
    delete:
      summary: Delete an attachment
      description: |-
        Deletes a specific, existing attachment.

        Returns an empty data record.
      tags:
        - Attachments
      operationId: deleteAttachment
      responses:
        200:
          description: Successfully deleted the specified attachment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tasks/{task_gid}/attachments:
    parameters:
      - $ref: '#/components/parameters/task_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get attachments for a task
      description: Returns the compact records for all attachments on the task.
      tags:
        - Attachments
      operationId: getAttachmentsForTask
      responses:
        200:
          description: >-
            Successfully retrieved the compact records for all attachments on the
            task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Upload an attachment
      description: |-
        Upload an attachment.

        This method uploads an attachment to a task and returns the compact
        record for the created attachment object. It is not possible to attach
        files from third party services such as Dropbox, Box & Google Drive via
        the API. You must download the file content first and then upload it as
        any other attachment.

        The 100MB size limit on attachments in Asana is enforced on this endpoint.

        This endpoint expects a multipart/form-data encoded request containing
        the full contents of the file to be uploaded.

        Requests made should follow the HTTP/1.1 specification that line
        terminators are of the form `CRLF` or `\r\n` outlined
        [here](http://www.w3.org/Protocols/HTTP/1.1/draft-ietf-http-v11-spec-01#Basic-Rules)
        in order for the server to reliably and properly handle the request.
      tags:
        - Attachments
      operationId: uploadAttachmentToTask
      requestBody:
        description: |-
          The file you want to upload.

          *Note when using curl:*

          Be sure to add an `‘@’` before the file path, and use the `—form`
          option instead of the `-d` option.

          When uploading PDFs with curl, force the content-type to be pdf by
          appending the content type to the file path: `—form
          “file=@file.pdf;type=application/pdf”`.
        required: true
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: Successfully uploaded the attachment to the task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /batch:
    parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Submit parallel requests
      description: |-
        Make multiple requests in parallel to Asana's API.
      tags:
        - Batch API
      operationId: batchRequest
      requestBody:
        description: >-
          The requests to batch together via the Batch API.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    actions:
                      type: array
                      items:
                        $ref: '#/components/schemas/BatchRequest'
      responses:
        200:
          description: Successfully completed the requested batch API operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResultArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /projects/{project_gid}/custom_field_settings:
    parameters:
      - $ref: '#/components/parameters/project_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get a project's custom fields
      description: >-
        Returns a list of all of the custom fields settings on a project, in
        compact form. Note that, as in all queries to collections which return
        compact representation, `opt_fields` can be used to
        include more data than is returned in the compact representation. See the
        [getting started guide on input/output
        options](https://developers.asana.com/docs/#input-output-options)
        for more information.
      tags:
        - Custom Field Settings
      operationId: getCustomFieldSettingsForProject
      responses:
        200:
          description: >-
            Successfully retrieved custom field settings objects for a project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldSettingArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /portfolios/{portfolio_gid}/custom_field_settings:
    parameters:
      - $ref: '#/components/parameters/portfolio_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get a portfolio's custom fields
      description: >-
        Returns a list of all of the custom fields settings on a portfolio, in
        compact form.
      tags:
        - Custom Field Settings
      operationId: getCustomFieldSettingsForPortfolio
      responses:
        200:
          description: >-
            Successfully retrieved custom field settings objects for a portfolio.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldSettingArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /custom_fields:
    parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    post:
      summary: Create a custom field
      description: |-
        Creates a new custom field in a workspace. Every custom field is required
        to be created in a specific workspace, and this workspace cannot be
        changed once set.

        A custom field’s name must be unique within a workspace and not conflict
        with names of existing task properties such as ‘Due Date’ or ‘Assignee’.
        A custom field’s type must be one of ‘text’, ‘enum’, or ‘number’.

        Returns the full record of the newly created custom field.
      tags:
        - Custom Fields
      operationId: createCustomField
      requestBody:
        description: The custom field object to create.
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  description: >-
                    Custom Fields store the metadata that is used in order to
                    add user-specified information to tasks in Asana. Be sure
                    to reference the [Custom Fields](#asana-custom-fields)
                    developer documentation for more information about how custom
                    fields
                    relate to various resources in Asana.


                    Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields),
                    which will make them read-only when accessed by other users.
                    Attempting to edit a locked custom field will return HTTP error
                    code
                    `403 Forbidden`.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: custom_field
                    name:
                      description: The name of the object.
                      type: string
                      example: Bug Task
                    resource_subtype:
                      description: >
                        The type of the custom field. Must be one of the given values.
                      type: string
                      example: text
                      enum:
                        - text
                        - enum
                        - number
                    type:
                      description: >
                        *Deprecated: new integrations should prefer the resource_subtype
                        field.* The type of the custom field. Must be one of the given
                        values.
                      type: string
                      readOnly: true
                      enum:
                        - text
                        - enum
                        - number
                    enum_options:
                      description: >-
                        *Conditional*. Only relevant for custom fields of type `enum`.
                        This array specifies the possible values which an `enum` custom
                        field can adopt. To modify the enum options, refer to [working
                        with enum
                        options](#create-an-enum-option).
                      type: array
                      items:
                        description: >-
                          Enum options are the possible values which an enum custom
                          field can
                          adopt. An enum custom field must contain at least 1 enum
                          option but no
                          more than 50.


                          You can add enum options to a custom field by using the
                          `POST
                          /custom_fields/custom_field_gid/enum_options` endpoint.


                          **It is not possible to remove or delete an enum option**.
                          Instead,
                          enum options can be disabled by updating the `enabled` field
                          to false
                          with the `PUT /enum_options/enum_option_gid` endpoint. Other
                          attributes can be updated similarly.


                          On creation of an enum option, `enabled` is always set to
                          `true`,
                          meaning the enum option is a selectable value for the custom
                          field.
                          Setting `enabled=false` is equivalent to “trashing” the
                          enum option in
                          the Asana web app within the “Edit Fields” dialog. The enum
                          option
                          will no longer be selectable but, if the enum option value
                          was
                          previously set within a task, the task will retain the value.


                          Enum options are an ordered list and by default new enum
                          options are
                          inserted at the end. Ordering in relation to existing enum
                          options can
                          be specified on creation by using `insert_before` or `insert_after`
                          to
                          reference an existing enum option. Only one of `insert_before`
                          and
                          `insert_after` can be provided when creating a new enum
                          option.


                          An enum options list can be reordered with the `POST
                          /custom_fields/custom_field_gid/enum_options/insert` endpoint.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: enum_option
                          name:
                            description: The name of the enum option.
                            type: string
                            example: Low
                          enabled:
                            description: "The color of the enum option. Defaults to\
                              \ \u2018none\u2019."
                            type: boolean
                            example: true
                          color:
                            description: >-
                              Whether or not the enum option is a selectable value
                              for the
                              custom field.
                            type: string
                            example: blue
                    enum_value: {}
                    enabled:
                      description: >-
                        *Conditional*. Determines if the custom field is enabled or
                        not.
                      type: boolean
                      example: true
                    text_value:
                      description: >-
                        *Conditional*. This string is the value of a text custom field.
                      type: string
                      example: Some Value
                    description:
                      description: >-
                        [Opt
                        In](#input-output-options).
                        The description of the custom field.
                      type: string
                      example: Development team priority
                    precision:
                      description: >-
                        Only relevant for custom fields of type ‘Number’. This field
                        dictates the number of places after the decimal to round to,
                        i.e.
                        0 is integer values, 1 rounds to the nearest tenth, and so
                        on.
                        Must be between 0 and 6, inclusive.
                      type: integer
                      example: 2
                    is_global_to_workspace:
                      description: >-
                        This flag describes whether this custom field is available
                        to
                        every container in the workspace. Before project-specific
                        custom
                        fields, this field was always true.
                      type: boolean
                      example: true
                      readOnly: true
                    has_notifications_enabled:
                      description: >-
                        This flag describes whether a follower of a task with this
                        field
                        should receive inbox notifications from changes to this field.
                      type: boolean
                      example: true
                    workspace:
                      type: string
                      description: The workspace to create a custom field in.
                      example: '1331'
                  required:
                    - workspace
      responses:
        201:
          description: Custom field successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /custom_fields/{custom_field_gid}:
    parameters:
      - $ref: '#/components/parameters/custom_field_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get a custom field
      description: |-
        Get the complete definition of a custom field’s metadata.

        Since custom fields can be defined for one of a number of types, and
        these types have different data and behaviors, there are fields that are
        relevant to a particular type. For instance, as noted above, enum_options
        is only relevant for the enum type and defines the set of choices that
        the enum could represent. The examples below show some of these
        type-specific custom field definitions.
      tags:
        - Custom Fields
      operationId: getCustomField
      responses:
        200:
          description: >-
            Successfully retrieved the complete definition of a custom field’s
            metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update a custom field
      description: >-
        A specific, existing custom field can be updated by making a PUT request
        on the URL for that custom field. Only the fields provided in the `data`
        block will be updated; any unspecified fields will remain unchanged

        When using this method, it is best to specify only those fields you wish
        to change, or else you may overwrite changes made by another user since
        you last retrieved the custom field.

        A custom field’s `type` cannot be updated.

        An enum custom field’s `enum_options` cannot be updated with this
        endpoint.
        Instead see “Work With Enum Options” for information on how to update
        `enum_options`.

        Locked custom fields can only be updated by the user who locked the field.

        Returns the complete updated custom field record.
      tags:
        - Custom Fields
      operationId: updateCustomField
      requestBody:
        description: The custom field object with all updated properties.
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  description: >-
                    Custom Fields store the metadata that is used in order to
                    add user-specified information to tasks in Asana. Be sure
                    to reference the [Custom Fields](#asana-custom-fields)
                    developer documentation for more information about how custom
                    fields
                    relate to various resources in Asana.


                    Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields),
                    which will make them read-only when accessed by other users.
                    Attempting to edit a locked custom field will return HTTP error
                    code
                    `403 Forbidden`.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: custom_field
                    name:
                      description: The name of the object.
                      type: string
                      example: Bug Task
                    resource_subtype:
                      description: >
                        The type of the custom field. Must be one of the given values.
                      type: string
                      example: text
                      enum:
                        - text
                        - enum
                        - number
                    type:
                      description: >
                        *Deprecated: new integrations should prefer the resource_subtype
                        field.* The type of the custom field. Must be one of the given
                        values.
                      type: string
                      readOnly: true
                      enum:
                        - text
                        - enum
                        - number
                    enum_options:
                      description: >-
                        *Conditional*. Only relevant for custom fields of type `enum`.
                        This array specifies the possible values which an `enum` custom
                        field can adopt. To modify the enum options, refer to [working
                        with enum
                        options](#create-an-enum-option).
                      type: array
                      items:
                        description: >-
                          Enum options are the possible values which an enum custom
                          field can
                          adopt. An enum custom field must contain at least 1 enum
                          option but no
                          more than 50.


                          You can add enum options to a custom field by using the
                          `POST
                          /custom_fields/custom_field_gid/enum_options` endpoint.


                          **It is not possible to remove or delete an enum option**.
                          Instead,
                          enum options can be disabled by updating the `enabled` field
                          to false
                          with the `PUT /enum_options/enum_option_gid` endpoint. Other
                          attributes can be updated similarly.


                          On creation of an enum option, `enabled` is always set to
                          `true`,
                          meaning the enum option is a selectable value for the custom
                          field.
                          Setting `enabled=false` is equivalent to “trashing” the
                          enum option in
                          the Asana web app within the “Edit Fields” dialog. The enum
                          option
                          will no longer be selectable but, if the enum option value
                          was
                          previously set within a task, the task will retain the value.


                          Enum options are an ordered list and by default new enum
                          options are
                          inserted at the end. Ordering in relation to existing enum
                          options can
                          be specified on creation by using `insert_before` or `insert_after`
                          to
                          reference an existing enum option. Only one of `insert_before`
                          and
                          `insert_after` can be provided when creating a new enum
                          option.


                          An enum options list can be reordered with the `POST
                          /custom_fields/custom_field_gid/enum_options/insert` endpoint.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: enum_option
                          name:
                            description: The name of the enum option.
                            type: string
                            example: Low
                          enabled:
                            description: "The color of the enum option. Defaults to\
                              \ \u2018none\u2019."
                            type: boolean
                            example: true
                          color:
                            description: >-
                              Whether or not the enum option is a selectable value
                              for the
                              custom field.
                            type: string
                            example: blue
                    enum_value: {}
                    enabled:
                      description: >-
                        *Conditional*. Determines if the custom field is enabled or
                        not.
                      type: boolean
                      example: true
                    text_value:
                      description: >-
                        *Conditional*. This string is the value of a text custom field.
                      type: string
                      example: Some Value
                    description:
                      description: >-
                        [Opt
                        In](#input-output-options).
                        The description of the custom field.
                      type: string
                      example: Development team priority
                    precision:
                      description: >-
                        Only relevant for custom fields of type ‘Number’. This field
                        dictates the number of places after the decimal to round to,
                        i.e.
                        0 is integer values, 1 rounds to the nearest tenth, and so
                        on.
                        Must be between 0 and 6, inclusive.
                      type: integer
                      example: 2
                    is_global_to_workspace:
                      description: >-
                        This flag describes whether this custom field is available
                        to
                        every container in the workspace. Before project-specific
                        custom
                        fields, this field was always true.
                      type: boolean
                      example: true
                      readOnly: true
                    has_notifications_enabled:
                      description: >-
                        This flag describes whether a follower of a task with this
                        field
                        should receive inbox notifications from changes to this field.
                      type: boolean
                      example: true
      responses:
        200:
          description: The custom field was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete a custom field
      description: >-
        A specific, existing custom field can be deleted by making a DELETE
        request on the URL for that custom field.

        Locked custom fields can only be deleted by the user who locked the field.

        Returns an empty data record.
      tags:
        - Custom Fields
      operationId: deleteCustomField
      responses:
        200:
          description: The custom field was successfully deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /workspaces/{workspace_gid}/custom_fields:
    parameters:
      - $ref: '#/components/parameters/workspace_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get a workspace's custom fields
      description: >-
        Returns a list of the compact representation of all of the custom fields
        in a workspace.
      tags:
        - Custom Fields
      operationId: getCustomFieldsInWorkspace
      responses:
        200:
          description: >-
            Successfully retrieved all custom fields for the given workspace.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /custom_fields/{custom_field_gid}/enum_options:
    parameters:
      - $ref: '#/components/parameters/custom_field_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    post:
      summary: Create an enum option
      description: >-
        Creates an enum option and adds it to this custom field’s list of enum
        options. A custom field can have at most 50 enum options (including
        disabled options). By default new enum options are inserted at the end of
        a custom field’s list.

        Locked custom fields can only have enum options added by the user who locked
        the field.

        Returns the full record of the newly created enum option.
      tags:
        - Custom Fields
      operationId: addEnumOption
      requestBody:
        description: The enum option object to create.
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  description: >-
                    Enum options are the possible values which an enum custom field
                    can
                    adopt. An enum custom field must contain at least 1 enum option
                    but no
                    more than 50.


                    You can add enum options to a custom field by using the `POST
                    /custom_fields/custom_field_gid/enum_options` endpoint.


                    **It is not possible to remove or delete an enum option**. Instead,
                    enum options can be disabled by updating the `enabled` field to
                    false
                    with the `PUT /enum_options/enum_option_gid` endpoint. Other
                    attributes can be updated similarly.


                    On creation of an enum option, `enabled` is always set to `true`,
                    meaning the enum option is a selectable value for the custom field.
                    Setting `enabled=false` is equivalent to “trashing” the enum option
                    in
                    the Asana web app within the “Edit Fields” dialog. The enum option
                    will no longer be selectable but, if the enum option value was
                    previously set within a task, the task will retain the value.


                    Enum options are an ordered list and by default new enum options
                    are
                    inserted at the end. Ordering in relation to existing enum options
                    can
                    be specified on creation by using `insert_before` or `insert_after`
                    to
                    reference an existing enum option. Only one of `insert_before`
                    and
                    `insert_after` can be provided when creating a new enum option.


                    An enum options list can be reordered with the `POST
                    /custom_fields/custom_field_gid/enum_options/insert` endpoint.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: enum_option
                    name:
                      description: The name of the enum option.
                      type: string
                      example: Low
                    enabled:
                      description: "The color of the enum option. Defaults to \u2018\
                        none\u2019."
                      type: boolean
                      example: true
                    color:
                      description: >-
                        Whether or not the enum option is a selectable value for the
                        custom field.
                      type: string
                      example: blue
                    insert_before:
                      type: string
                      description: >-
                        An existing enum option within this custom field
                        before which the new enum option should be
                        inserted. Cannot be provided together with
                        after_enum_option.
                      example: '12345'
                    insert_after:
                      type: string
                      description: >-
                        An existing enum option within this custom field
                        after which the new enum option should be inserted.
                        Cannot be provided together with
                        before_enum_option.
                      example: '12345'
      responses:
        201:
          description: Custom field enum option successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumOptionObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /custom_fields/{custom_field_gid}/enum_options/insert:
    parameters:
      - $ref: '#/components/parameters/custom_field_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Reorder a custom field's enum
      description: >-
        Moves a particular enum option to be either before or after another
        specified enum option in the custom field.

        Locked custom fields can only be reordered by the user who locked the field.
      tags:
        - Custom Fields
      operationId: reorderEnumOption
      requestBody:
        description: The enum option object to create.
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  description: >-
                    Enum options are the possible values which an enum custom field
                    can
                    adopt. An enum custom field must contain at least 1 enum option
                    but no
                    more than 50.


                    You can add enum options to a custom field by using the `POST
                    /custom_fields/custom_field_gid/enum_options` endpoint.


                    **It is not possible to remove or delete an enum option**. Instead,
                    enum options can be disabled by updating the `enabled` field to
                    false
                    with the `PUT /enum_options/enum_option_gid` endpoint. Other
                    attributes can be updated similarly.


                    On creation of an enum option, `enabled` is always set to `true`,
                    meaning the enum option is a selectable value for the custom field.
                    Setting `enabled=false` is equivalent to “trashing” the enum option
                    in
                    the Asana web app within the “Edit Fields” dialog. The enum option
                    will no longer be selectable but, if the enum option value was
                    previously set within a task, the task will retain the value.


                    Enum options are an ordered list and by default new enum options
                    are
                    inserted at the end. Ordering in relation to existing enum options
                    can
                    be specified on creation by using `insert_before` or `insert_after`
                    to
                    reference an existing enum option. Only one of `insert_before`
                    and
                    `insert_after` can be provided when creating a new enum option.


                    An enum options list can be reordered with the `POST
                    /custom_fields/custom_field_gid/enum_options/insert` endpoint.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: enum_option
                    name:
                      description: The name of the enum option.
                      type: string
                      example: Low
                    enabled:
                      description: "The color of the enum option. Defaults to \u2018\
                        none\u2019."
                      type: boolean
                      example: true
                    color:
                      description: >-
                        Whether or not the enum option is a selectable value for the
                        custom field.
                      type: string
                      example: blue
                    enum_option:
                      type: string
                      description: The gid of the enum option to relocate.
                      example: '97285'
                    before_enum_option:
                      type: string
                      description: >-
                        An existing enum option within this custom field
                        before which the new enum option should be
                        inserted. Cannot be provided together with
                        after_enum_option.
                      example: '12345'
                    after_enum_option:
                      type: string
                      description: >-
                        An existing enum option within this custom field
                        after which the new enum option should be inserted.
                        Cannot be provided together with
                        before_enum_option.
                      example: '12345'
                  required:
                    - enum_option
      responses:
        200:
          description: Custom field enum option successfully reordered.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumOptionObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /enum_options/{enum_option_gid}:
    parameters:
      - name: enum_option_gid
        in: path
        description: >-
          Globally unique identifier for the enum option.
        schema:
          type: string
        example: '124578'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    put:
      summary: Update an enum option
      description: >-
        Updates an existing enum option. Enum custom fields require at least one
        enabled enum option.

        Locked custom fields can only be updated by the user who locked the field.

        Returns the full record of the updated enum option.
      tags:
        - Custom Fields
      operationId: updateEnumOption
      requestBody:
        description: The enum option object to update
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  description: >-
                    Enum options are the possible values which an enum custom field
                    can
                    adopt. An enum custom field must contain at least 1 enum option
                    but no
                    more than 50.


                    You can add enum options to a custom field by using the `POST
                    /custom_fields/custom_field_gid/enum_options` endpoint.


                    **It is not possible to remove or delete an enum option**. Instead,
                    enum options can be disabled by updating the `enabled` field to
                    false
                    with the `PUT /enum_options/enum_option_gid` endpoint. Other
                    attributes can be updated similarly.


                    On creation of an enum option, `enabled` is always set to `true`,
                    meaning the enum option is a selectable value for the custom field.
                    Setting `enabled=false` is equivalent to “trashing” the enum option
                    in
                    the Asana web app within the “Edit Fields” dialog. The enum option
                    will no longer be selectable but, if the enum option value was
                    previously set within a task, the task will retain the value.


                    Enum options are an ordered list and by default new enum options
                    are
                    inserted at the end. Ordering in relation to existing enum options
                    can
                    be specified on creation by using `insert_before` or `insert_after`
                    to
                    reference an existing enum option. Only one of `insert_before`
                    and
                    `insert_after` can be provided when creating a new enum option.


                    An enum options list can be reordered with the `POST
                    /custom_fields/custom_field_gid/enum_options/insert` endpoint.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: enum_option
                    name:
                      description: The name of the enum option.
                      type: string
                      example: Low
                    enabled:
                      description: "The color of the enum option. Defaults to \u2018\
                        none\u2019."
                      type: boolean
                      example: true
                    color:
                      description: >-
                        Whether or not the enum option is a selectable value for the
                        custom field.
                      type: string
                      example: blue
      responses:
        200:
          description: Successfully updated the specified custom field enum.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumOptionObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /events:
    parameters:
      - name: resource
        in: query
        required: true
        description: >-
          A resource ID to subscribe to. The resource can be a task or project.
        schema:
          type: string
        example: '12345'
      - name: sync
        in: query
        required: false
        description: >-
          A sync token received from the last request, or none on first sync.
          Events will be returned from the point in time that the sync token was
          generated.

          *Note: On your first request, omit the sync token. The response will
          be the same as for an expired sync token, and will include a new valid
          sync token.If the sync token is too old (which may happen from time to
          time) the API will return a `412 Precondition Failed` error, and
          include a fresh sync token in the response.*
        schema:
          type: string
        example: de4774f6915eae04714ca93bb2f5ee81
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get events on a resource
      description: |-
        Returns the full record for all events that have occurred since the sync
        token was created.

        A GET request to the endpoint /[path_to_resource]/events can be made in
        lieu of including the resource ID in the data for the request.
      tags:
        - Events
      operationId: getEvents
      responses:
        200:
          description: Successfully retrieved events.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /jobs/{job_gid}:
    parameters:
      - $ref: '#/components/parameters/job_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get a job by id
      description: |-
        Returns the full record for a job.
      tags:
        - Jobs
      operationId: getJob
      responses:
        200:
          description: Successfully retrieved Job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /organization_exports:
    parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    post:
      summary: Create an organization export request
      description: >-
        This method creates a request to export an Organization. Asana will
        complete the export at some point after you create the request.
      tags:
        - Organization Exports
      operationId: createOrganizationExport
      requestBody:
        description: The organization to export.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    organization:
                      description: >-
                        Globally unique identifier for the workspace or organization.
                      type: string
                      example: '1331'
      responses:
        201:
          description: Successfully created organization export request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationExportObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /organization_exports/{organization_export_gid}:
    parameters:
      - $ref: '#/components/parameters/organization_export_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get details on an org export request
      description: >-
        Returns details of a previously-requested Organization export.
      tags:
        - Organization Exports
      operationId: getOrganizationExport
      responses:
        200:
          description: Successfully retrieved organization export object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationExportObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /portfolio_memberships:
    parameters:
      - $ref: '#/components/parameters/portfolio_query_param'
      - $ref: '#/components/parameters/workspace_query_param'
      - $ref: '#/components/parameters/user_query_param'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get multiple portfolio memberships
      description: >-
        Returns a list of portfolio memberships in compact representation. You must
        specify `portfolio`, `portfolio` and `user`, or `workspace` and `user`.
      tags:
        - Portfolio Memberships
      operationId: getPortfolioMemberships
      responses:
        200:
          description: Successfully retrieved portfolio memberships.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /portfolio_memberships/{portfolio_membership_gid}:
    parameters:
      - $ref: '#/components/parameters/portfolio_membership_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get a portfolio membership
      description: >-
        Returns the complete portfolio record for a single portfolio membership.
      tags:
        - Portfolio Memberships
      operationId: getPortfolioMembership
      responses:
        200:
          description: >-
            Successfully retrieved the requested portfolio membership.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioMembershipObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /portfolios/{portfolio_gid}/portfolio_memberships:
    parameters:
      - $ref: '#/components/parameters/portfolio_path_gid'
      - $ref: '#/components/parameters/user_query_param'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get memberships from a portfolio
      description: >-
        Returns the compact portfolio membership records for the portfolio.
      tags:
        - Portfolio Memberships
      operationId: getPortfolioMembershipsForPortfolio
      responses:
        200:
          description: >-
            Successfully retrieved the requested portfolio's memberships.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioMembershipArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /portfolios:
    parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get multiple portfolios
      description: >-
        Returns a list of the portfolios in compact representation that are
        owned by the current API user.
      tags:
        - Portfolios
      operationId: getPortfolios
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - name: workspace
          in: query
          description: >-
            The workspace or organization to filter portfolios on.
          schema:
            type: string
          example: '1331'
        - name: owner
          in: query
          description: The user who owns the portfolio. Currently, API users can only
            get a list of portfolios that they themselves own.
          schema:
            type: string
          example: '14916'
      responses:
        200:
          description: Successfully retrieved portfolios.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create a portfolio
      description: |-
        Creates a new portfolio in the given workspace with the supplied name.

        Note that portfolios created in the Asana UI may have some state
        (like the “Priority” custom field) which is automatically added
        to the portfolio when it is created. Portfolios created via our
        API will *not* be created with the same initial state to allow
        integrations to create their own starting state on a portfolio.
      tags:
        - Portfolios
      operationId: createPortfolio
      requestBody:
        description: The portfolio to create.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  description: >-
                    A *portfolio* gives a high-level overview of the status of multiple
                    initiatives in Asana. Portfolios provide a dashboard overview
                    of
                    the state of multiple projects, including a progress report and
                    the
                    most recent [project
                    status](#asana-project-statuses)
                    update.

                    Portfolios have some restrictions on size. Each portfolio has
                    a max of
                    250 items and, like projects, a max of 20 custom fields.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: portfolio
                    name:
                      description: The name of the object.
                      type: string
                      example: Bug Task
                    created_at:
                      description: The time at which this resource was created.
                      type: string
                      format: date-time
                      readOnly: true
                      example: '2012-02-22T02:06:58.147Z'
                    created_by:
                      description: >-
                        The user who created this resource.
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the object, as a string.
                          type: string
                          readOnly: true
                          example: '12345'
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: user
                        name:
                          description: >-
                            *Read-only except when same user as requester*. The user’s
                            name.
                          type: string
                          example: Greg Sanchez
                      readOnly: true
                      nullable: true
                    color:
                      description: Color of the portfolio.
                      type: string
                      enum:
                        - dark-pink
                        - dark-green
                        - dark-blue
                        - dark-red
                        - dark-teal
                        - dark-brown
                        - dark-orange
                        - dark-purple
                        - dark-warm-gray
                        - light-pink
                        - light-green
                        - light-blue
                        - light-red
                        - light-teal
                        - light-brown
                        - light-orange
                        - light-purple
                        - light-warm-gray
                      example: light-green
                    custom_field_settings:
                      description: Array of custom field settings applied to the portfolio.
                      readOnly: true
                      type: array
                      items:
                        description: >-
                          Custom Fields Settings objects represent the many-to-many
                          join of the
                          Custom Field and Project as well as stores information that
                          is
                          relevant to that particular pairing.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: custom_field_setting
                          project: {}
                          is_important:
                            description: >-
                              `is_important` is used in the Asana web application
                              to determine
                              if this custom field is displayed in the task list (left
                              pane) of
                              a project. A project can have a maximum of 5 custom
                              field settings
                              marked as `is_important`.
                            type: boolean
                            readOnly: true
                            example: false
                          parent: {}
                          custom_field: {}
                    owner: {}
                    workspace: {}
                    members: {}
      responses:
        201:
          description: Successfully retrieved portfolios.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /portfolios/{portfolio_gid}:
    parameters:
      - $ref: '#/components/parameters/portfolio_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get a portfolio
      description: Returns the complete portfolio record for a single portfolio.
      tags:
        - Portfolios
      operationId: getPortfolio
      responses:
        200:
          description: Successfully retrieved the requested portfolio.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update a portfolio
      description: |-
        An existing portfolio can be updated by making a PUT request on the URL for
        that portfolio. Only the fields provided in the `data` block will be updated;
        any unspecified fields will remain unchanged.

        Returns the complete updated portfolio record.
      tags:
        - Portfolios
      operationId: updateportfolio
      requestBody:
        description: The updated fields for the portfolio.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  description: >-
                    A *portfolio* gives a high-level overview of the status of multiple
                    initiatives in Asana. Portfolios provide a dashboard overview
                    of
                    the state of multiple projects, including a progress report and
                    the
                    most recent [project
                    status](#asana-project-statuses)
                    update.

                    Portfolios have some restrictions on size. Each portfolio has
                    a max of
                    250 items and, like projects, a max of 20 custom fields.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: portfolio
                    name:
                      description: The name of the object.
                      type: string
                      example: Bug Task
                    created_at:
                      description: The time at which this resource was created.
                      type: string
                      format: date-time
                      readOnly: true
                      example: '2012-02-22T02:06:58.147Z'
                    created_by:
                      description: >-
                        The user who created this resource.
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the object, as a string.
                          type: string
                          readOnly: true
                          example: '12345'
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: user
                        name:
                          description: >-
                            *Read-only except when same user as requester*. The user’s
                            name.
                          type: string
                          example: Greg Sanchez
                      readOnly: true
                      nullable: true
                    color:
                      description: Color of the portfolio.
                      type: string
                      enum:
                        - dark-pink
                        - dark-green
                        - dark-blue
                        - dark-red
                        - dark-teal
                        - dark-brown
                        - dark-orange
                        - dark-purple
                        - dark-warm-gray
                        - light-pink
                        - light-green
                        - light-blue
                        - light-red
                        - light-teal
                        - light-brown
                        - light-orange
                        - light-purple
                        - light-warm-gray
                      example: light-green
                    custom_field_settings:
                      description: Array of custom field settings applied to the portfolio.
                      readOnly: true
                      type: array
                      items:
                        description: >-
                          Custom Fields Settings objects represent the many-to-many
                          join of the
                          Custom Field and Project as well as stores information that
                          is
                          relevant to that particular pairing.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: custom_field_setting
                          project: {}
                          is_important:
                            description: >-
                              `is_important` is used in the Asana web application
                              to determine
                              if this custom field is displayed in the task list (left
                              pane) of
                              a project. A project can have a maximum of 5 custom
                              field settings
                              marked as `is_important`.
                            type: boolean
                            readOnly: true
                            example: false
                          parent: {}
                          custom_field: {}
                    owner: {}
                    workspace: {}
                    members: {}
      responses:
        200:
          description: Successfully updated the portfolio.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete a portfolio
      description: |-
        An existing portfolio can be deleted by making a DELETE request on
        the URL for that portfolio.

        Returns an empty data record.
      tags:
        - Portfolios
      operationId: deletePortfolio
      responses:
        200:
          description: Successfully deleted the specified portfolio.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /portfolios/{portfolio_gid}/items:
    parameters:
      - $ref: '#/components/parameters/portfolio_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get portfolio items
      description: >-
        Get a list of the items in compact form in a portfolio.
      tags:
        - Portfolios
        - Items
      operationId: getPortfolioItems
      responses:
        200:
          description: Successfully retrieved the requested portfolio's items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /portfolios/{portfolio_gid}/addItem:
    parameters:
      - $ref: '#/components/parameters/portfolio_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Add a portfolio item
      description: >-
        Add an item to a portfolio.

        Returns an empty data block.
      tags:
        - Portfolios
        - Items
      operationId: addPortfolioItem
      requestBody:
        description: Information about the item being inserted.
        required: true
        content:
          application/json:
            schema:
              name: data
              in: body
              type: object
              required:
                - item
              properties:
                item:
                  description: >-
                    The item to add to the portfolio.
                  type: string
                  example: '1331'
                insert_before:
                  description: >-
                    An id of an item in this portfolio. The new
                    item will be added before the one specified here.
                    `insert_before` and `insert_after` parameters cannot both
                    be specified.
                  type: string
                  example: '1331'
                insert_after:
                  description: >-
                    An id of an item in this portfolio. The new
                    item will be added after the one specified here.
                    `insert_before` and `insert_after` parameters cannot both
                    be specified.
                  type: string
                  example: '1331'
      responses:
        200:
          description: Successfully added the item to the portfolio.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /portfolios/{portfolio_gid}/removeItem:
    parameters:
      - $ref: '#/components/parameters/portfolio_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Remove a portfolio item
      description: >-
        Remove an item from a portfolio.

        Returns an empty data block.
      tags:
        - Portfolios
        - Items
      operationId: removePortfolioItem
      requestBody:
        description: Information about the item being removed.
        required: true
        content:
          application/json:
            schema:
              name: data
              in: body
              type: object
              required:
                - item
              properties:
                item:
                  description: >-
                    The item to remove from the portfolio.
                  type: string
                  example: '1331'
      responses:
        200:
          description: Successfully removed the item from the portfolio.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /portfolios/{portfolio_gid}/addCustomFieldSetting:
    parameters:
      - $ref: '#/components/parameters/portfolio_path_gid'
      - $ref: '#/components/parameters/pretty'
    post:
      summary: Add a custom field to a portfolio
      description: >-
        Custom fields are associated with portfolios by way of custom field
        settings.  This method creates a setting for the portfolio.
      tags:
        - Custom Field Settings
      operationId: portfolio.addCustomFieldSetting
      requestBody:
        description: Information about the custom field setting.
        required: true
        content:
          application/json:
            schema:
              name: data
              in: body
              type: object
              required:
                - custom_field
              properties:
                custom_field:
                  description: The custom field to associate with this portfolio.
                  type: string
                  example: '14916'
                is_important:
                  description: >-
                    Whether this field should be considered important to this portfolio
                    (for instance, to display in the list view of items in the portfolio).
                  type: boolean
                  example: true
                insert_before:
                  description: >-
                    An id of a Custom Field Setting on this portfolio, before which
                    the new
                    Custom Field Setting will be added.  `insert_before` and `insert_after`
                    parameters cannot both be specified.
                  type: string
                  example: '1331'
                insert_after:
                  description: >-
                    An id of a Custom Field Setting on this portfolio, after which
                    the new
                    Custom Field Setting will be added.  `insert_before` and `insert_after`
                    parameters cannot both be specified.
                  type: string
                  example: '1331'
      responses:
        200:
          description: Successfully added the custom field to the portfolio.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /portfolios/{portfolio_gid}/removeCustomFieldSetting:
    parameters:
      - $ref: '#/components/parameters/portfolio_path_gid'
      - $ref: '#/components/parameters/pretty'
    post:
      summary: Remove a custom field from a portfolio
      description: >-
        Removes a custom field setting from a portfolio.
      tags:
        - Custom Field Settings
      operationId: portfolio.removeCustomFieldSetting
      requestBody:
        description: Information about the custom field setting being removed.
        required: true
        content:
          application/json:
            schema:
              name: data
              in: body
              type: object
              required:
                - custom_field
              properties:
                custom_field:
                  description: The custom field to remove from this portfolio.
                  type: string
                  example: '14916'
      responses:
        200:
          description: Successfully removed the custom field from the portfolio.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /portfolios/{portfolio_gid}/addMembers:
    parameters:
      - $ref: '#/components/parameters/portfolio_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Add users to a portfolio
      description: >-
        Adds the specified list of users as members of the portfolio.

        Returns the updated portfolio record.
      tags:
        - Portfolios
      operationId: addPortfolioMembers
      requestBody:
        description: Information about the members being added.
        required: true
        content:
          application/json:
            schema:
              name: data
              in: body
              type: object
              required:
                - members
              properties:
                members:
                  description: >-
                    An array of user ids.
                  type: string
                  example: 521621,621373
      responses:
        200:
          description: Successfully added members to the portfolio.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /portfolios/{portfolio_gid}/removeMembers:
    parameters:
      - $ref: '#/components/parameters/portfolio_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Remove users from a portfolio
      description: >-
        Removes the specified list of users from members of the portfolio.

        Returns the updated portfolio record.
      tags:
        - Portfolios
      operationId: removePortfolioMembers
      requestBody:
        description: Information about the members being removed.
        required: true
        content:
          application/json:
            schema:
              name: data
              in: body
              type: object
              required:
                - members
              properties:
                members:
                  description: >-
                    An array of user ids.
                  type: string
                  example: 521621,621373
      responses:
        200:
          description: Successfully removed the members from the portfolio.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /project_memberships/{project_membership_gid}:
    parameters:
      - $ref: '#/components/parameters/project_membership_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get a project membership
      description: >-
        Returns the complete project record for a single project membership.
      tags:
        - Project Memberships
      operationId: getProjectMembership
      responses:
        200:
          description: >-
            Successfully retrieved the requested project membership.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMembershipObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /projects/{project_gid}/project_memberships:
    parameters:
      - $ref: '#/components/parameters/project_path_gid'
      - $ref: '#/components/parameters/user_query_param'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get memberships from a project
      description: >-
        Returns the compact project membership records for the project.
      tags:
        - Project Memberships
      operationId: getProjectMembershipsForProject
      responses:
        200:
          description: >-
            Successfully retrieved the requested project's memberships.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMembershipArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /project_statuses/{project_status_gid}:
    parameters:
      - $ref: '#/components/parameters/project_status_path_gid'
    get:
      summary: Get a project status
      description: >-
        Returns the complete record for a single status update.
      tags:
        - Project Statuses
      operationId: getProductStatus
      responses:
        200:
          description: Successfully retrieved the specified project's status updates.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectStatusObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete a project status
      description: |-
        Deletes a specific, existing project status update.

        Returns an empty data record.
      tags:
        - Project Statuses
      operationId: deleteProductStatus
      responses:
        200:
          description: Successfully deleted the specified product status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /projects/{project_gid}/project_statuses:
    parameters:
      - $ref: '#/components/parameters/project_path_gid'
    get:
      summary: Get statuses from a project
      description: >-
        Returns the compact project status update records for all updates on the project.
      tags:
        - Project Statuses
      operationId: getProductStatuses
      parameters:
        - $ref: '#/components/parameters/project_path_gid'
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        200:
          description: Successfully retrieved the specified project's status updates.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectStatusArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create a project status
      description: >-
        Creates a new status update on the project.

        Returns the full record of the newly created project status update.
      tags:
        - Project Statuses
      operationId: createProjectStatus
      requestBody:
        description: The project status to create.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    project:
                      description: Globally unique identifier for the project.
                      type: string
                      example: '123456'
                    text:
                      description: The text of the project status update.
                      type: string
                      example: The project is on track to ship next month!
                    color:
                      description: The color to associate with the status update.
                      enum:
                        - green
                        - yellow
                        - red
                  required:
                    - project
                    - text
                    - color
      responses:
        201:
          description: Successfully created a new story.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectStatusObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /projects:
    parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get multiple projects
      description: >-
        Returns the compact project records for some filtered set of projects.
        Use one or more of the parameters provided to filter the projects
        returned.
      tags:
        - Projects
      operationId: getProjects
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - name: workspace
          in: query
          description: >-
            The workspace or organization to filter projects on.
          schema:
            type: string
          example: '1331'
        - name: team
          in: query
          description: The team to filter projects on.
          schema:
            type: string
          example: '14916'
        - $ref: '#/components/parameters/archived_query_param'
      responses:
        200:
          description: Successfully retrieved projects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create a project
      description: |-
        Create a new project in a workspace or team.

        Every project is required to be created in a specific workspace or
        organization, and this cannot be changed once set. Note that you can use
        the `workspace` parameter regardless of whether or not it is an
        organization.

        If the workspace for your project is an organization, you must also
        supply a `team` to share the project with.

        Returns the full record of the newly created project.
      tags:
        - Projects
      operationId: createProject
      requestBody:
        description: The project to create.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    name:
                      description: The name of the project.
                      type: string
                      example: Bug Project
                    notes:
                      description: The description of the project.
                      type: string
                      example: For tracking pesky bugs.
                    workspace:
                      description: >-
                        The workspace or organization to create the project in.
                      type: string
                      example: '1331'
                    team:
                      description: >-
                        If creating in an organization, the specific team to
                        create the project in.
                      type: string
                      example: '14916'
      responses:
        201:
          description: Successfully retrieved projects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /projects/{project_gid}:
    parameters:
      - $ref: '#/components/parameters/project_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get a project
      description: Returns the complete project record for a single project.
      tags:
        - Projects
      operationId: getProject
      responses:
        200:
          description: Successfully retrieved the requested project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update a project
      description: |-
        A specific, existing project can be updated by making a PUT request on
        the URL for that project. Only the fields provided in the `data` block
        will be updated; any unspecified fields will remain unchanged.

        When using this method, it is best to specify only those fields you wish
        to change, or else you may overwrite changes made by another user since
        you last retrieved the task.

        Returns the complete updated project record.
      tags:
        - Projects
      operationId: updateProject
      requestBody:
        description: The updated fields for the project.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  description: >-
                    A *project* represents a prioritized list of tasks in Asana or
                    a board
                    with columns of tasks represented as cards. It exists in a single
                    workspace or organization and is accessible to a subset of users
                    in
                    that workspace or organization, depending on its permissions.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: project
                    name:
                      description: >-
                        Name of the project. This is generally a short sentence fragment
                        that fits on a line in the UI for maximum readability. However,
                        it
                        can be longer.
                      type: string
                      example: Stuff to buy
                    created_at:
                      description: The time at which this resource was created.
                      type: string
                      format: date-time
                      readOnly: true
                      example: '2012-02-22T02:06:58.147Z'
                    archived:
                      description: >-
                        True if the project is archived, false if not. Archived projects
                        do not show in the UI by default and may be treated differently
                        for queries.
                      type: boolean
                      example: false
                    color:
                      description: Color of the project.
                      type: string
                      nullable: true
                      enum:
                        - dark-pink
                        - dark-green
                        - dark-blue
                        - dark-red
                        - dark-teal
                        - dark-brown
                        - dark-orange
                        - dark-purple
                        - dark-warm-gray
                        - light-pink
                        - light-green
                        - light-blue
                        - light-red
                        - light-teal
                        - light-brown
                        - light-orange
                        - light-purple
                        - light-warm-gray
                      example: light-green
                    current_status:
                      description: >-
                        The most recently created status update for the project, or
                        `null`
                        if no update exists. See also the documentation for [project
                        status updates](#asana-project-statuses).
                      type: object
                      nullable: true
                      readOnly: true
                      properties:
                        color:
                          type: string
                          enum:
                            - green
                            - yellow
                            - red
                          example: green
                        text:
                          type: string
                          example: All gravy!
                        author:
                          description: >-
                            A *user* object represents an account in Asana that can
                            be given
                            access to various workspaces, projects, and tasks.
                          type: object
                          properties:
                            gid:
                              description: >-
                                Globally unique identifier of the object, as a string.
                              type: string
                              readOnly: true
                              example: '12345'
                            resource_type:
                              description: The base type of this resource.
                              type: string
                              readOnly: true
                              example: user
                            name:
                              description: >-
                                *Read-only except when same user as requester*. The
                                user’s name.
                              type: string
                              example: Greg Sanchez
                      example:
                        color: green
                        text: Everything is great
                        author:
                          gid: '12345'
                          name: Greg Bizarro
                    custom_fields:
                      description: Array of Custom Fields.
                      readOnly: true
                      type: array
                      items:
                        description: >-
                          Custom Fields store the metadata that is used in order to
                          add user-specified information to tasks in Asana. Be sure
                          to reference the [Custom Fields](#asana-custom-fields)
                          developer documentation for more information about how custom
                          fields
                          relate to various resources in Asana.


                          Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields),
                          which will make them read-only when accessed by other users.
                          Attempting to edit a locked custom field will return HTTP
                          error code
                          `403 Forbidden`.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: custom_field
                          name:
                            description: The name of the object.
                            type: string
                            example: Bug Task
                          resource_subtype:
                            description: >
                              The type of the custom field. Must be one of the given
                              values.
                            type: string
                            example: text
                            enum:
                              - text
                              - enum
                              - number
                          type:
                            description: >
                              *Deprecated: new integrations should prefer the resource_subtype
                              field.* The type of the custom field. Must be one of
                              the given
                              values.
                            type: string
                            readOnly: true
                            enum:
                              - text
                              - enum
                              - number
                          enum_options:
                            description: >-
                              *Conditional*. Only relevant for custom fields of type
                              `enum`.
                              This array specifies the possible values which an `enum`
                              custom
                              field can adopt. To modify the enum options, refer to
                              [working
                              with enum
                              options](#create-an-enum-option).
                            type: array
                            items:
                              description: >-
                                Enum options are the possible values which an enum
                                custom field can
                                adopt. An enum custom field must contain at least
                                1 enum option but no
                                more than 50.


                                You can add enum options to a custom field by using
                                the `POST
                                /custom_fields/custom_field_gid/enum_options` endpoint.


                                **It is not possible to remove or delete an enum option**.
                                Instead,
                                enum options can be disabled by updating the `enabled`
                                field to false
                                with the `PUT /enum_options/enum_option_gid` endpoint.
                                Other
                                attributes can be updated similarly.


                                On creation of an enum option, `enabled` is always
                                set to `true`,
                                meaning the enum option is a selectable value for
                                the custom field.
                                Setting `enabled=false` is equivalent to “trashing”
                                the enum option in
                                the Asana web app within the “Edit Fields” dialog.
                                The enum option
                                will no longer be selectable but, if the enum option
                                value was
                                previously set within a task, the task will retain
                                the value.


                                Enum options are an ordered list and by default new
                                enum options are
                                inserted at the end. Ordering in relation to existing
                                enum options can
                                be specified on creation by using `insert_before`
                                or `insert_after` to
                                reference an existing enum option. Only one of `insert_before`
                                and
                                `insert_after` can be provided when creating a new
                                enum option.


                                An enum options list can be reordered with the `POST
                                /custom_fields/custom_field_gid/enum_options/insert`
                                endpoint.
                              type: object
                              properties:
                                gid:
                                  description: >-
                                    Globally unique identifier of the object, as a
                                    string.
                                  type: string
                                  readOnly: true
                                  example: '12345'
                                resource_type:
                                  description: The base type of this resource.
                                  type: string
                                  readOnly: true
                                  example: enum_option
                                name:
                                  description: The name of the enum option.
                                  type: string
                                  example: Low
                                enabled:
                                  description: "The color of the enum option. Defaults\
                                    \ to \u2018none\u2019."
                                  type: boolean
                                  example: true
                                color:
                                  description: >-
                                    Whether or not the enum option is a selectable
                                    value for the
                                    custom field.
                                  type: string
                                  example: blue
                          enum_value: {}
                          enabled:
                            description: >-
                              *Conditional*. Determines if the custom field is enabled
                              or not.
                            type: boolean
                            example: true
                          text_value:
                            description: >-
                              *Conditional*. This string is the value of a text custom
                              field.
                            type: string
                            example: Some Value
                    custom_field_settings:
                      description: Array of Custom Field Settings (in compact form).
                      readOnly: true
                      type: array
                      items:
                        description: >-
                          Custom Fields Settings objects represent the many-to-many
                          join of the
                          Custom Field and Project as well as stores information that
                          is
                          relevant to that particular pairing.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: custom_field_setting
                    default_view:
                      description: The default view (list, board, calendar, or timeline)
                        of a project.
                      type: string
                      enum:
                        - list
                        - board
                        - calendar
                        - timeline
                      example: calendar
                    due_date:
                      description: >-
                        *Deprecated: new integrations should prefer the due_on field.*
                      type: string
                      nullable: true
                      format: date-time
                      example: '2012-03-26'
                    due_on:
                      description: >-
                        The day on which this project is due. This takes a date with
                        format YYYY-MM-DD.
                      type: string
                      nullable: true
                      format: date-time
                      example: '2012-03-26'
                    followers:
                      description: >-
                        Array of users following this project. Followers are a subset
                        of
                        members who receive all notifications for a project, the default
                        notification setting when adding members to a project in-product.
                      type: array
                      items:
                        description: >-
                          A *user* object represents an account in Asana that can
                          be given
                          access to various workspaces, projects, and tasks.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: user
                          name:
                            description: >-
                              *Read-only except when same user as requester*. The
                              user’s name.
                            type: string
                            example: Greg Sanchez
                      readOnly: true
                    html_notes:
                      description: >-
                        [Opt In](#input-output-options).
                        The notes of the project with formatting as HTML.

                        *Note: This field is under active migration—please see our
                        [blog
                        post] (https://developers.asana.com/docs/#rich-text) for more
                        information.*
                      type: string
                      example: These are things we need to purchase.
                    is_template:
                      description: >-
                        [Opt In](#input-output-options).
                        Determines if the project is a template.
                      type: boolean
                      example: false
                    layout:
                      description: The layout (board or list view) of a project
                      type: string
                      enum:
                        - list
                        - board
                      readOnly: true
                    members:
                      description: Array of users who are members of this project.
                      type: array
                      items:
                        description: >-
                          A *user* object represents an account in Asana that can
                          be given
                          access to various workspaces, projects, and tasks.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: user
                          name:
                            description: >-
                              *Read-only except when same user as requester*. The
                              user’s name.
                            type: string
                            example: Greg Sanchez
                      readOnly: true
                    modified_at:
                      description: >-
                        The time at which this project was last modified.

                        *Note: This does not currently reflect any changes in
                        associations such as tasks or comments that may have been
                        added or
                        removed from the project.*
                      type: string
                      readOnly: true
                      format: date-time
                      example: '2012-02-22T02:06:58.147Z'
                    notes:
                      description: >-
                        More detailed, free-form textual information associated with
                        the
                        project.
                      type: string
                      example: These are things we need to purchase.
                    owner: {}
                    public:
                      description: >-
                        True if the project is public to the organization. If false,
                        do
                        not share this project with other users in this organization
                        without explicitly checking to see if they have access.
                      type: boolean
                      example: false
                    section_migration_status:
                      description: >-
                        *Read-only* The section migration status of this project.
                      type: string
                      enum:
                        - not_migrated
                        - in_progress
                        - completed
                      nullable: false
                      readOnly: true
                      example: not_migrated
                    start_on:
                      description: >-
                        The day on which work for this project begins, or null if
                        the
                        project has no start date. This takes a date with `YYYY-MM-DD`
                        format. *Note: `due_on` or `due_at` must be present in the
                        request when setting or unsetting the `start_on` parameter.*
                      type: string
                      nullable: true
                      format: date
                      example: '2012-03-26'
                    team: {}
                    workspace: {}
      responses:
        200:
          description: Successfully updated the project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete a project
      description: |-
        A specific, existing project can be deleted by making a DELETE request on
        the URL for that project.

        Returns an empty data record.
      tags:
        - Projects
      operationId: deleteProject
      responses:
        200:
          description: Successfully deleted the specified project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /projects/{project_gid}/duplicate:
    parameters:
      - $ref: '#/components/parameters/project_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Duplicate a project
      description: >-
        Creates and returns a job that will asynchronously handle the duplication.
      tags:
        - Projects
      operationId: duplicateProject
      requestBody:
        description: >-
          Describes the duplicate's name and the elements that will be duplicated.
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      description: The name of the new project.
                      type: string
                      example: New Project Name
                    team:
                      description: >-
                        Sets the team of the new project. If team is not defined,
                        the new project will be in the same team as the the
                        original project.
                      type: string
                      example: '12345'
                    include:
                      description: >-
                        The elements that will be duplicated to the new project.
                        Tasks are always included.
                      type: string
                      enum:
                        - members
                        - notes
                        - task_notes
                        - task_assignee
                        - task_subtasks
                        - task_attachments
                        - task_dates
                        - task_dependencies
                        - task_followers
                        - task_tags
                        - task_projects
                      example:
                        - members
                        - task_notes
                    schedule_dates:
                      description: >-
                        A dictionary of options to auto-shift dates.
                        `task_dates` must be included to use this option.
                        Requires either `start_on` or `due_on`, but not both.
                      type: object
                      required:
                        - should_skip_weekends
                      properties:
                        should_skip_weekends:
                          description: >-
                            Determines if the auto-shifted dates should skip weekends.
                          type: boolean
                          example: true
                        due_on:
                          description: >-
                            Sets the last due date in the duplicated project to the
                            given
                            date. The rest of the due dates will be offset by the
                            same amount
                            as the due dates in the original project.
                          type: string
                          example: '2019-05-21'
                        start_on:
                          description: >-
                            Sets the first start date in the duplicated project to
                            the given
                            date. The rest of the start dates will be offset by the
                            same amount
                            as the start dates in the original project.
                          type: string
                          example: '2019-05-21'
      responses:
        201:
          description: Successfully created the job to handle duplication.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tasks/{task_gid}/projects:
    parameters:
      - $ref: '#/components/parameters/task_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get projects a task is in
      description: >-
        Returns a compact representation of all of the projects the task is in.
      tags:
        - Projects
      operationId: getTaskProjects
      responses:
        200:
          description: >-
            Successfully retrieved the projects for the given task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /teams/{team_gid}/projects:
    parameters:
      - $ref: '#/components/parameters/team_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get a team's projects
      description: >-
        Returns the compact project records for all projects in the team.
      tags:
        - Projects
      operationId: getProjectsInTeam
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/archived_query_param'
      responses:
        200:
          description: Successfully retrieved the requested team's projects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create a project in a team
      description: |-
        Creates a project shared with the given team.

        Returns the full record of the newly created project.
      tags:
        - Projects
      operationId: createProjectsWithTeam
      requestBody:
        description: The new project to create.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  description: >-
                    A *project* represents a prioritized list of tasks in Asana or
                    a board
                    with columns of tasks represented as cards. It exists in a single
                    workspace or organization and is accessible to a subset of users
                    in
                    that workspace or organization, depending on its permissions.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: project
                    name:
                      description: >-
                        Name of the project. This is generally a short sentence fragment
                        that fits on a line in the UI for maximum readability. However,
                        it
                        can be longer.
                      type: string
                      example: Stuff to buy
                    created_at:
                      description: The time at which this resource was created.
                      type: string
                      format: date-time
                      readOnly: true
                      example: '2012-02-22T02:06:58.147Z'
                    archived:
                      description: >-
                        True if the project is archived, false if not. Archived projects
                        do not show in the UI by default and may be treated differently
                        for queries.
                      type: boolean
                      example: false
                    color:
                      description: Color of the project.
                      type: string
                      nullable: true
                      enum:
                        - dark-pink
                        - dark-green
                        - dark-blue
                        - dark-red
                        - dark-teal
                        - dark-brown
                        - dark-orange
                        - dark-purple
                        - dark-warm-gray
                        - light-pink
                        - light-green
                        - light-blue
                        - light-red
                        - light-teal
                        - light-brown
                        - light-orange
                        - light-purple
                        - light-warm-gray
                      example: light-green
                    current_status:
                      description: >-
                        The most recently created status update for the project, or
                        `null`
                        if no update exists. See also the documentation for [project
                        status updates](#asana-project-statuses).
                      type: object
                      nullable: true
                      readOnly: true
                      properties:
                        color:
                          type: string
                          enum:
                            - green
                            - yellow
                            - red
                          example: green
                        text:
                          type: string
                          example: All gravy!
                        author:
                          description: >-
                            A *user* object represents an account in Asana that can
                            be given
                            access to various workspaces, projects, and tasks.
                          type: object
                          properties:
                            gid:
                              description: >-
                                Globally unique identifier of the object, as a string.
                              type: string
                              readOnly: true
                              example: '12345'
                            resource_type:
                              description: The base type of this resource.
                              type: string
                              readOnly: true
                              example: user
                            name:
                              description: >-
                                *Read-only except when same user as requester*. The
                                user’s name.
                              type: string
                              example: Greg Sanchez
                      example:
                        color: green
                        text: Everything is great
                        author:
                          gid: '12345'
                          name: Greg Bizarro
                    custom_fields:
                      description: Array of Custom Fields.
                      readOnly: true
                      type: array
                      items:
                        description: >-
                          Custom Fields store the metadata that is used in order to
                          add user-specified information to tasks in Asana. Be sure
                          to reference the [Custom Fields](#asana-custom-fields)
                          developer documentation for more information about how custom
                          fields
                          relate to various resources in Asana.


                          Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields),
                          which will make them read-only when accessed by other users.
                          Attempting to edit a locked custom field will return HTTP
                          error code
                          `403 Forbidden`.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: custom_field
                          name:
                            description: The name of the object.
                            type: string
                            example: Bug Task
                          resource_subtype:
                            description: >
                              The type of the custom field. Must be one of the given
                              values.
                            type: string
                            example: text
                            enum:
                              - text
                              - enum
                              - number
                          type:
                            description: >
                              *Deprecated: new integrations should prefer the resource_subtype
                              field.* The type of the custom field. Must be one of
                              the given
                              values.
                            type: string
                            readOnly: true
                            enum:
                              - text
                              - enum
                              - number
                          enum_options:
                            description: >-
                              *Conditional*. Only relevant for custom fields of type
                              `enum`.
                              This array specifies the possible values which an `enum`
                              custom
                              field can adopt. To modify the enum options, refer to
                              [working
                              with enum
                              options](#create-an-enum-option).
                            type: array
                            items:
                              description: >-
                                Enum options are the possible values which an enum
                                custom field can
                                adopt. An enum custom field must contain at least
                                1 enum option but no
                                more than 50.


                                You can add enum options to a custom field by using
                                the `POST
                                /custom_fields/custom_field_gid/enum_options` endpoint.


                                **It is not possible to remove or delete an enum option**.
                                Instead,
                                enum options can be disabled by updating the `enabled`
                                field to false
                                with the `PUT /enum_options/enum_option_gid` endpoint.
                                Other
                                attributes can be updated similarly.


                                On creation of an enum option, `enabled` is always
                                set to `true`,
                                meaning the enum option is a selectable value for
                                the custom field.
                                Setting `enabled=false` is equivalent to “trashing”
                                the enum option in
                                the Asana web app within the “Edit Fields” dialog.
                                The enum option
                                will no longer be selectable but, if the enum option
                                value was
                                previously set within a task, the task will retain
                                the value.


                                Enum options are an ordered list and by default new
                                enum options are
                                inserted at the end. Ordering in relation to existing
                                enum options can
                                be specified on creation by using `insert_before`
                                or `insert_after` to
                                reference an existing enum option. Only one of `insert_before`
                                and
                                `insert_after` can be provided when creating a new
                                enum option.


                                An enum options list can be reordered with the `POST
                                /custom_fields/custom_field_gid/enum_options/insert`
                                endpoint.
                              type: object
                              properties:
                                gid:
                                  description: >-
                                    Globally unique identifier of the object, as a
                                    string.
                                  type: string
                                  readOnly: true
                                  example: '12345'
                                resource_type:
                                  description: The base type of this resource.
                                  type: string
                                  readOnly: true
                                  example: enum_option
                                name:
                                  description: The name of the enum option.
                                  type: string
                                  example: Low
                                enabled:
                                  description: "The color of the enum option. Defaults\
                                    \ to \u2018none\u2019."
                                  type: boolean
                                  example: true
                                color:
                                  description: >-
                                    Whether or not the enum option is a selectable
                                    value for the
                                    custom field.
                                  type: string
                                  example: blue
                          enum_value: {}
                          enabled:
                            description: >-
                              *Conditional*. Determines if the custom field is enabled
                              or not.
                            type: boolean
                            example: true
                          text_value:
                            description: >-
                              *Conditional*. This string is the value of a text custom
                              field.
                            type: string
                            example: Some Value
                    custom_field_settings:
                      description: Array of Custom Field Settings (in compact form).
                      readOnly: true
                      type: array
                      items:
                        description: >-
                          Custom Fields Settings objects represent the many-to-many
                          join of the
                          Custom Field and Project as well as stores information that
                          is
                          relevant to that particular pairing.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: custom_field_setting
                    default_view:
                      description: The default view (list, board, calendar, or timeline)
                        of a project.
                      type: string
                      enum:
                        - list
                        - board
                        - calendar
                        - timeline
                      example: calendar
                    due_date:
                      description: >-
                        *Deprecated: new integrations should prefer the due_on field.*
                      type: string
                      nullable: true
                      format: date-time
                      example: '2012-03-26'
                    due_on:
                      description: >-
                        The day on which this project is due. This takes a date with
                        format YYYY-MM-DD.
                      type: string
                      nullable: true
                      format: date-time
                      example: '2012-03-26'
                    followers:
                      description: >-
                        Array of users following this project. Followers are a subset
                        of
                        members who receive all notifications for a project, the default
                        notification setting when adding members to a project in-product.
                      type: array
                      items:
                        description: >-
                          A *user* object represents an account in Asana that can
                          be given
                          access to various workspaces, projects, and tasks.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: user
                          name:
                            description: >-
                              *Read-only except when same user as requester*. The
                              user’s name.
                            type: string
                            example: Greg Sanchez
                      readOnly: true
                    html_notes:
                      description: >-
                        [Opt In](#input-output-options).
                        The notes of the project with formatting as HTML.

                        *Note: This field is under active migration—please see our
                        [blog
                        post] (https://developers.asana.com/docs/#rich-text) for more
                        information.*
                      type: string
                      example: These are things we need to purchase.
                    is_template:
                      description: >-
                        [Opt In](#input-output-options).
                        Determines if the project is a template.
                      type: boolean
                      example: false
                    layout:
                      description: The layout (board or list view) of a project
                      type: string
                      enum:
                        - list
                        - board
                      readOnly: true
                    members:
                      description: Array of users who are members of this project.
                      type: array
                      items:
                        description: >-
                          A *user* object represents an account in Asana that can
                          be given
                          access to various workspaces, projects, and tasks.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: user
                          name:
                            description: >-
                              *Read-only except when same user as requester*. The
                              user’s name.
                            type: string
                            example: Greg Sanchez
                      readOnly: true
                    modified_at:
                      description: >-
                        The time at which this project was last modified.

                        *Note: This does not currently reflect any changes in
                        associations such as tasks or comments that may have been
                        added or
                        removed from the project.*
                      type: string
                      readOnly: true
                      format: date-time
                      example: '2012-02-22T02:06:58.147Z'
                    notes:
                      description: >-
                        More detailed, free-form textual information associated with
                        the
                        project.
                      type: string
                      example: These are things we need to purchase.
                    owner: {}
                    public:
                      description: >-
                        True if the project is public to the organization. If false,
                        do
                        not share this project with other users in this organization
                        without explicitly checking to see if they have access.
                      type: boolean
                      example: false
                    section_migration_status:
                      description: >-
                        *Read-only* The section migration status of this project.
                      type: string
                      enum:
                        - not_migrated
                        - in_progress
                        - completed
                      nullable: false
                      readOnly: true
                      example: not_migrated
                    start_on:
                      description: >-
                        The day on which work for this project begins, or null if
                        the
                        project has no start date. This takes a date with `YYYY-MM-DD`
                        format. *Note: `due_on` or `due_at` must be present in the
                        request when setting or unsetting the `start_on` parameter.*
                      type: string
                      nullable: true
                      format: date
                      example: '2012-03-26'
                    team: {}
                    workspace: {}
      responses:
        201:
          description: Successfully created the specified project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /workspaces/{workspace_gid}/projects:
    parameters:
      - $ref: '#/components/parameters/workspace_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get all projects in a workspace
      description: >-
        Returns the compact project records for all projects in the workspace.
      tags:
        - Projects
      operationId: getProjectsInWorkspace
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/archived_query_param'
      responses:
        200:
          description: Successfully retrieved the requested workspace's projects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create a project in a workspace
      description: |-
        Returns the compact project records for all projects in the workspace.

        If the workspace for your project is an organization, you must also
        supply a team to share the project with.

        Returns the full record of the newly created project.
      tags:
        - Projects
      operationId: createProjectsInWorkspace
      requestBody:
        description: The new project to create.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  description: >-
                    A *project* represents a prioritized list of tasks in Asana or
                    a board
                    with columns of tasks represented as cards. It exists in a single
                    workspace or organization and is accessible to a subset of users
                    in
                    that workspace or organization, depending on its permissions.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: project
                    name:
                      description: >-
                        Name of the project. This is generally a short sentence fragment
                        that fits on a line in the UI for maximum readability. However,
                        it
                        can be longer.
                      type: string
                      example: Stuff to buy
                    created_at:
                      description: The time at which this resource was created.
                      type: string
                      format: date-time
                      readOnly: true
                      example: '2012-02-22T02:06:58.147Z'
                    archived:
                      description: >-
                        True if the project is archived, false if not. Archived projects
                        do not show in the UI by default and may be treated differently
                        for queries.
                      type: boolean
                      example: false
                    color:
                      description: Color of the project.
                      type: string
                      nullable: true
                      enum:
                        - dark-pink
                        - dark-green
                        - dark-blue
                        - dark-red
                        - dark-teal
                        - dark-brown
                        - dark-orange
                        - dark-purple
                        - dark-warm-gray
                        - light-pink
                        - light-green
                        - light-blue
                        - light-red
                        - light-teal
                        - light-brown
                        - light-orange
                        - light-purple
                        - light-warm-gray
                      example: light-green
                    current_status:
                      description: >-
                        The most recently created status update for the project, or
                        `null`
                        if no update exists. See also the documentation for [project
                        status updates](#asana-project-statuses).
                      type: object
                      nullable: true
                      readOnly: true
                      properties:
                        color:
                          type: string
                          enum:
                            - green
                            - yellow
                            - red
                          example: green
                        text:
                          type: string
                          example: All gravy!
                        author:
                          description: >-
                            A *user* object represents an account in Asana that can
                            be given
                            access to various workspaces, projects, and tasks.
                          type: object
                          properties:
                            gid:
                              description: >-
                                Globally unique identifier of the object, as a string.
                              type: string
                              readOnly: true
                              example: '12345'
                            resource_type:
                              description: The base type of this resource.
                              type: string
                              readOnly: true
                              example: user
                            name:
                              description: >-
                                *Read-only except when same user as requester*. The
                                user’s name.
                              type: string
                              example: Greg Sanchez
                      example:
                        color: green
                        text: Everything is great
                        author:
                          gid: '12345'
                          name: Greg Bizarro
                    custom_fields:
                      description: Array of Custom Fields.
                      readOnly: true
                      type: array
                      items:
                        description: >-
                          Custom Fields store the metadata that is used in order to
                          add user-specified information to tasks in Asana. Be sure
                          to reference the [Custom Fields](#asana-custom-fields)
                          developer documentation for more information about how custom
                          fields
                          relate to various resources in Asana.


                          Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields),
                          which will make them read-only when accessed by other users.
                          Attempting to edit a locked custom field will return HTTP
                          error code
                          `403 Forbidden`.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: custom_field
                          name:
                            description: The name of the object.
                            type: string
                            example: Bug Task
                          resource_subtype:
                            description: >
                              The type of the custom field. Must be one of the given
                              values.
                            type: string
                            example: text
                            enum:
                              - text
                              - enum
                              - number
                          type:
                            description: >
                              *Deprecated: new integrations should prefer the resource_subtype
                              field.* The type of the custom field. Must be one of
                              the given
                              values.
                            type: string
                            readOnly: true
                            enum:
                              - text
                              - enum
                              - number
                          enum_options:
                            description: >-
                              *Conditional*. Only relevant for custom fields of type
                              `enum`.
                              This array specifies the possible values which an `enum`
                              custom
                              field can adopt. To modify the enum options, refer to
                              [working
                              with enum
                              options](#create-an-enum-option).
                            type: array
                            items:
                              description: >-
                                Enum options are the possible values which an enum
                                custom field can
                                adopt. An enum custom field must contain at least
                                1 enum option but no
                                more than 50.


                                You can add enum options to a custom field by using
                                the `POST
                                /custom_fields/custom_field_gid/enum_options` endpoint.


                                **It is not possible to remove or delete an enum option**.
                                Instead,
                                enum options can be disabled by updating the `enabled`
                                field to false
                                with the `PUT /enum_options/enum_option_gid` endpoint.
                                Other
                                attributes can be updated similarly.


                                On creation of an enum option, `enabled` is always
                                set to `true`,
                                meaning the enum option is a selectable value for
                                the custom field.
                                Setting `enabled=false` is equivalent to “trashing”
                                the enum option in
                                the Asana web app within the “Edit Fields” dialog.
                                The enum option
                                will no longer be selectable but, if the enum option
                                value was
                                previously set within a task, the task will retain
                                the value.


                                Enum options are an ordered list and by default new
                                enum options are
                                inserted at the end. Ordering in relation to existing
                                enum options can
                                be specified on creation by using `insert_before`
                                or `insert_after` to
                                reference an existing enum option. Only one of `insert_before`
                                and
                                `insert_after` can be provided when creating a new
                                enum option.


                                An enum options list can be reordered with the `POST
                                /custom_fields/custom_field_gid/enum_options/insert`
                                endpoint.
                              type: object
                              properties:
                                gid:
                                  description: >-
                                    Globally unique identifier of the object, as a
                                    string.
                                  type: string
                                  readOnly: true
                                  example: '12345'
                                resource_type:
                                  description: The base type of this resource.
                                  type: string
                                  readOnly: true
                                  example: enum_option
                                name:
                                  description: The name of the enum option.
                                  type: string
                                  example: Low
                                enabled:
                                  description: "The color of the enum option. Defaults\
                                    \ to \u2018none\u2019."
                                  type: boolean
                                  example: true
                                color:
                                  description: >-
                                    Whether or not the enum option is a selectable
                                    value for the
                                    custom field.
                                  type: string
                                  example: blue
                          enum_value: {}
                          enabled:
                            description: >-
                              *Conditional*. Determines if the custom field is enabled
                              or not.
                            type: boolean
                            example: true
                          text_value:
                            description: >-
                              *Conditional*. This string is the value of a text custom
                              field.
                            type: string
                            example: Some Value
                    custom_field_settings:
                      description: Array of Custom Field Settings (in compact form).
                      readOnly: true
                      type: array
                      items:
                        description: >-
                          Custom Fields Settings objects represent the many-to-many
                          join of the
                          Custom Field and Project as well as stores information that
                          is
                          relevant to that particular pairing.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: custom_field_setting
                    default_view:
                      description: The default view (list, board, calendar, or timeline)
                        of a project.
                      type: string
                      enum:
                        - list
                        - board
                        - calendar
                        - timeline
                      example: calendar
                    due_date:
                      description: >-
                        *Deprecated: new integrations should prefer the due_on field.*
                      type: string
                      nullable: true
                      format: date-time
                      example: '2012-03-26'
                    due_on:
                      description: >-
                        The day on which this project is due. This takes a date with
                        format YYYY-MM-DD.
                      type: string
                      nullable: true
                      format: date-time
                      example: '2012-03-26'
                    followers:
                      description: >-
                        Array of users following this project. Followers are a subset
                        of
                        members who receive all notifications for a project, the default
                        notification setting when adding members to a project in-product.
                      type: array
                      items:
                        description: >-
                          A *user* object represents an account in Asana that can
                          be given
                          access to various workspaces, projects, and tasks.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: user
                          name:
                            description: >-
                              *Read-only except when same user as requester*. The
                              user’s name.
                            type: string
                            example: Greg Sanchez
                      readOnly: true
                    html_notes:
                      description: >-
                        [Opt In](#input-output-options).
                        The notes of the project with formatting as HTML.

                        *Note: This field is under active migration—please see our
                        [blog
                        post] (https://developers.asana.com/docs/#rich-text) for more
                        information.*
                      type: string
                      example: These are things we need to purchase.
                    is_template:
                      description: >-
                        [Opt In](#input-output-options).
                        Determines if the project is a template.
                      type: boolean
                      example: false
                    layout:
                      description: The layout (board or list view) of a project
                      type: string
                      enum:
                        - list
                        - board
                      readOnly: true
                    members:
                      description: Array of users who are members of this project.
                      type: array
                      items:
                        description: >-
                          A *user* object represents an account in Asana that can
                          be given
                          access to various workspaces, projects, and tasks.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: user
                          name:
                            description: >-
                              *Read-only except when same user as requester*. The
                              user’s name.
                            type: string
                            example: Greg Sanchez
                      readOnly: true
                    modified_at:
                      description: >-
                        The time at which this project was last modified.

                        *Note: This does not currently reflect any changes in
                        associations such as tasks or comments that may have been
                        added or
                        removed from the project.*
                      type: string
                      readOnly: true
                      format: date-time
                      example: '2012-02-22T02:06:58.147Z'
                    notes:
                      description: >-
                        More detailed, free-form textual information associated with
                        the
                        project.
                      type: string
                      example: These are things we need to purchase.
                    owner: {}
                    public:
                      description: >-
                        True if the project is public to the organization. If false,
                        do
                        not share this project with other users in this organization
                        without explicitly checking to see if they have access.
                      type: boolean
                      example: false
                    section_migration_status:
                      description: >-
                        *Read-only* The section migration status of this project.
                      type: string
                      enum:
                        - not_migrated
                        - in_progress
                        - completed
                      nullable: false
                      readOnly: true
                      example: not_migrated
                    start_on:
                      description: >-
                        The day on which work for this project begins, or null if
                        the
                        project has no start date. This takes a date with `YYYY-MM-DD`
                        format. *Note: `due_on` or `due_at` must be present in the
                        request when setting or unsetting the `start_on` parameter.*
                      type: string
                      nullable: true
                      format: date
                      example: '2012-03-26'
                    team: {}
                    workspace: {}
      responses:
        201:
          description: >-
            Successfully created a new project in the specified workspace.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /projects/{project_gid}/addCustomFieldSetting:
    parameters:
      - $ref: '#/components/parameters/project_path_gid'
      - name: custom_field
        in: query
        description: The custom field to associate with this project.
        required: true
        schema:
          type: string
        example: '14916'
      - name: is_important
        in: query
        description: >-
          Whether this field should be considered "important" to this project.
          This may cause it to be displayed more prominently, for example in the
          task grid.
        schema:
          type: boolean
        example: true
      - name: insert_before
        in: query
        description: >-
          An id of a Custom Field Setting on this project, before which the new
          Custom Field Setting will be added.  `insert_before` and `insert_after`
          parameters cannot both be specified.
        schema:
          type: string
        example: '1331'
      - name: insert_after
        in: query
        description: >-
          An id of a Custom Field Setting on this project, after which the new
          Custom Field Setting will be added.  `insert_before` and `insert_after`
          parameters cannot both be specified.
        schema:
          type: string
        example: '1331'
      - $ref: '#/components/parameters/pretty'
    post:
      summary: Add a custom field to a project
      description: >-
        Custom fields are associated with projects by way of custom field
        settings.  This method creates a setting for the project.
      tags:
        - Projects
      operationId: project.addCustomFieldSetting
      responses:
        200:
          description: Successfully added the custom field to the project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /projects/{project_gid}/removeCustomFieldSetting:
    parameters:
      - $ref: '#/components/parameters/project_path_gid'
      - name: custom_field
        in: query
        description: The custom field to remove from this project.
        required: true
        schema:
          type: string
        example: '14916'
      - $ref: '#/components/parameters/pretty'
    post:
      summary: Remove a custom field from a project
      description: >-
        Removes a custom field setting from a project.
      tags:
        - Projects
      operationId: project.removeCustomFieldSetting
      responses:
        200:
          description: Successfully removed the custom field from the project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /projects/{project_gid}/task_counts:
    parameters:
      - $ref: '#/components/parameters/project_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get task count of a project
      description: >-
        Get an object that holds task count fields. **All fields are excluded by default**.
        You must
        [opt in](#input-output-options) using `opt_fields` to get any information
        from this endpoint.


        This endpoint has an additional [rate limit](#standard-rate-limits) and each
        field counts especially high
        against our [cost limits](#cost-limits).


        Milestones are just tasks, so they are included in the `num_tasks`, `num_incomplete_tasks`,
        and
        `num_completed_tasks` counts.
      tags:
        - Projects
      operationId: getProjectTaskCounts
      responses:
        200:
          description: Successfully retrieved the requested project's task counts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCountObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /sections/{section_gid}:
    parameters:
      - $ref: '#/components/parameters/section_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get a section
      description: >-
        Returns the complete record for a single section.
      tags:
        - Sections
      operationId: getSection
      responses:
        200:
          description: Successfully retrieved section.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update a section
      description: |-
        A specific, existing section can be updated by making a PUT request on
        the URL for that project. Only the fields provided in the `data` block
        will be updated; any unspecified fields will remain unchanged. (note that
        at this time, the only field that can be updated is the `name` field.)

        When using this method, it is best to specify only those fields you wish
        to change, or else you may overwrite changes made by another user since
        you last retrieved the task.

        Returns the complete updated section record.
      tags:
        - Sections
      operationId: updateSection
      requestBody:
        description: The section to create.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  description: >-
                    A *section* is a subdivision of a project that groups tasks together.
                    It can either be a header above a list of tasks in a list view
                    or a
                    column in a board view of a project.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: section
                    name:
                      description: >-
                        The name of the section (i.e. the text displayed as the section
                        header).
                      type: string
                      example: Next Actions
                    created_at:
                      description: The time at which this resource was created.
                      type: string
                      format: date-time
                      readOnly: true
                      example: '2012-02-22T02:06:58.147Z'
                    projects:
                      type: array
                      items:
                        description: >-
                          A *project* represents a prioritized list of tasks in Asana
                          or a board
                          with columns of tasks represented as cards. It exists in
                          a single
                          workspace or organization and is accessible to a subset
                          of users in
                          that workspace or organization, depending on its permissions.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: project
                          name:
                            description: >-
                              Name of the project. This is generally a short sentence
                              fragment
                              that fits on a line in the UI for maximum readability.
                              However, it
                              can be longer.
                            type: string
                            example: Stuff to buy
      responses:
        200:
          description: Successfully updated the specified section.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete a section
      description: |-
        A specific, existing section can be deleted by making a DELETE request on
        the URL for that section.

        Note that sections must be empty to be deleted.

        The last remaining section in a board view cannot be deleted.

        Returns an empty data block.
      tags:
        - Sections
      operationId: deleteSection
      responses:
        200:
          description: Successfully deleted the specified section.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /projects/{project_gid}/sections:
    parameters:
      - $ref: '#/components/parameters/project_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get sections in a project
      description: >-
        Returns the compact records for all sections in the specified project.
      tags:
        - Sections
      operationId: getSectionsInProject
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        200:
          description: Successfully retrieved sections in project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create a section in a project
      description: >-
        Creates a new section in a project.

        Returns the full record of the newly created section.
      tags:
        - Sections
      operationId: createSectionInProject
      requestBody:
        description: The section to create.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    project:
                      description: The project to create the section in
                      type: string
                      example: '13579'
                    name:
                      description: >-
                        The text to be displayed as the section name. This cannot
                        be
                        an empty string.
                      type: string
                      example: Next Actions
                  required:
                    - project
                    - name
      responses:
        201:
          description: Successfully created the specified section.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /sections/{section_gid}/addTask:
    parameters:
      - $ref: '#/components/parameters/section_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Add task to section
      description: |-
        Add a task to a specific, existing section. This will remove the task from other sections of the project.

        The task will be inserted at the top of a section unless an insert_before or insert_after parameter is declared.

        This does not work for separators (tasks with the resource_subtype of section).
      tags:
        - Sections
      operationId: addTaskToSection
      requestBody:
        description: The task and optionally the insert location.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    task:
                      description: The task to add to this section.
                      type: string
                      example: '123456'
                    insert_before:
                      description: >-
                        An existing task within this section before which the added
                        task should be inserted. Cannot be provided together with
                        insert_after.
                      type: string
                      example: '86420'
                    insert_after:
                      description: >-
                        An existing task within this section after which the added
                        task should be inserted. Cannot be provided together with
                        insert_before.
                      type: string
                      example: '987654'
                  required:
                    - task
      responses:
        200:
          description: Successfully added the task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /projects/{project_gid}/sections/insert:
    parameters:
      - $ref: '#/components/parameters/project_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Move sections
      description: |-
        Move sections relative to each other in a board view. One of
        `before_section` or `after_section` is required.

        Sections cannot be moved between projects.

        At this point in time, moving sections is not supported in list views,
        only board views.

        Returns an empty data block.
      tags:
        - Sections
      operationId: moveSection
      requestBody:
        description: The section's move action.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    project:
                      description: The project in which to reorder the given section.
                      type: string
                      example: '123456'
                    section:
                      description: The section to reorder.
                      type: string
                      example: '321654'
                    before_section:
                      description: >-
                        Insert the given section immediately before the section
                        specified by this parameter.
                      type: string
                      example: '86420'
                    after_section:
                      description: >-
                        Insert the given section immediately after the section
                        specified by this parameter.
                      type: string
                      example: '987654'
                  required:
                    - project
                    - section
      responses:
        200:
          description: Successfully moved the specified section.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /stories/{story_gid}:
    parameters:
      - $ref: '#/components/parameters/story_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get a story
      description: Returns the full record for a single story.
      tags:
        - Stories
      operationId: getStory
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        200:
          description: Successfully retrieved the specified story.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update a story
      description: >-
        Updates the story and returns the full record for the updated story. Only
        comment stories can have their text updated, and only comment stories and
        attachment stories can be pinned. Only one of `text` and `html_text` can be
        specified.
      tags:
        - Stories
      operationId: updateStory
      requestBody:
        description: The comment story to update.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  description: >-
                    A story represents an activity associated with an object in the
                    Asana
                    system.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: story
                    resource_subtype:
                      description: >-
                        The subtype of this resource. Different subtypes retain many
                        of the
                        same fields and behavior, but may render differently in Asana
                        or
                        represent resources with different semantic meaning.
                      type: string
                      readOnly: true
                      example: comment_added
                    created_at:
                      description: The time at which this resource was created.
                      type: string
                      format: date-time
                      readOnly: true
                      example: '2012-02-22T02:06:58.147Z'
                    created_by:
                      description: >-
                        The user who created this resource.
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the object, as a string.
                          type: string
                          readOnly: true
                          example: '12345'
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: user
                        name:
                          description: >-
                            *Read-only except when same user as requester*. The user’s
                            name.
                          type: string
                          example: Greg Sanchez
                      readOnly: true
                      nullable: true
                    text:
                      description: >-
                        *Create-only*. Human-readable text for the story or comment.

                        This will not include the name of the creator.

                        *Note: This is not guaranteed to be stable for a given type
                        of
                        story. For example, text for a reassignment may not always
                        say
                        “assigned to …” as the text for a story can both be edited
                        and
                        change based on the language settings of the user making the
                        request.*

                        Use the `resource_subtype` property to discover the action
                        that
                        created the story.
                      example: marked today
                    type:
                      description: >
                        *Deprecated: new integrations should prefer the
                        `resource_subtype` field.*
                      type: string
                      readOnly: true
                      example: comment
                    html_text:
                      description: >-
                        [Opt
                        In](#input-output-options).

                        HTML formatted text for a comment. This will not include the
                        name

                        of the creator.


                        *Note: This field is under active migration—please see our
                        blog

                        post for more information.*
                      type: string
                      example: Get whatever Sashimi has.
                    is_edited:
                      description: >-
                        *Conditional*. Whether the text of the story has been edited
                        after creation.
                      type: boolean
                      readOnly: true
                      example: false
                    is_pinned:
                      description: >-
                        *Conditional*. Whether the story should be pinned on the
                        resource.
                      type: boolean
                      example: false
                    hearted:
                      description: >-
                        *Deprecated - please use likes instead*


                        *Conditional*. True if the story is hearted by the authorized
                        user, false if not.
                      type: boolean
                      readOnly: true
                      example: false
                    hearts:
                      description: |-
                        *Deprecated - please use likes instead*

                        *Conditional*. Array of users who have hearted this story.
                      type: array
                      items:
                        description: >-
                          A *user* object represents an account in Asana that can
                          be given
                          access to various workspaces, projects, and tasks.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: user
                          name:
                            description: >-
                              *Read-only except when same user as requester*. The
                              user’s name.
                            type: string
                            example: Greg Sanchez
                      readOnly: true
                    num_hearts:
                      description: |-
                        *Deprecated - please use likes instead*

                        *Conditional*. The number of users who have hearted this story.
                      type: integer
                      readOnly: true
                      example: 5
                    liked:
                      description: >-
                        *Conditional*. True if the story is liked by the authorized
                        user, false if not.
                      type: boolean
                      readOnly: true
                      example: false
                    likes:
                      description: >-
                        *Conditional*. Array of users who have liked this story.
                      type: array
                      items:
                        description: >-
                          A *user* object represents an account in Asana that can
                          be given
                          access to various workspaces, projects, and tasks.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: user
                          name:
                            description: >-
                              *Read-only except when same user as requester*. The
                              user’s name.
                            type: string
                            example: Greg Sanchez
                      readOnly: true
                    num_likes:
                      description: >-
                        *Conditional*. The number of users who have liked this story.
                      type: integer
                      readOnly: true
                      example: 5
                    previews:
                      description: >-
                        *Conditional*. A collection of previews to be displayed in
                        the
                        story.


                        *Note: This property only exists for comment stories.*
                      type: array
                      items:
                        type: object
                        description: >-
                          A collection of rich text that will be displayed as a preview
                          to another
                          app.


                          This is read-only except for a small group of whitelisted
                          apps.
                        readOnly: true
                        properties:
                          fallback:
                            description: Some fallback text to display if unable to
                              display the full preview.
                            type: string
                            example: >-
                              Greg: Great! I like this
                              idea.\n\nhttps//a_company.slack.com/archives/ABCDEFG/12345678
                          footer:
                            description: Text to display in the footer.
                            type: string
                            example: Mar 17, 2019 1:25 PM
                          header:
                            description: Text to display in the header.
                            type: string
                            example: Asana for Slack
                          header_link:
                            description: Where the header will link to.
                            type: string
                            example: https://asana.comn/apps/slack
                          html_text:
                            description: HTML formatted text for the body of the preview.
                            type: string
                            example: <body>Great! I like this idea.</body>
                          text:
                            description: Text for the body of the preview.
                            type: string
                            example: Great! I like this idea.
                          title:
                            description: Text to display as the title.
                            type: string
                            example: Greg
                          title_link:
                            description: Where to title will link to.
                            type: string
                            example: https://asana.slack.com/archives/ABCDEFG/12345678
                      readOnly: true
                    old_name:
                      description: >-
                        *Conditional*'
                      type: string
                      example: This was the Old Name
                    new_name:
                      description: >-
                        *Conditional*
                      type: string
                      readOnly: true
                      example: This is the New Name
                    old_dates:
                      description: >-
                        *Conditional*
                      type: object
                      readOnly: true
                      properties:
                        start_on:
                          type: string
                          format: date
                          example: '2019-09-15'
                        due_at:
                          type: string
                          format: date-time
                          example: '2012-02-22T02:06:58.158Z'
                        due_on:
                          type: string
                          format: date
                          example: '2019-09-15'
                    new_dates:
                      description: >-
                        *Conditional*
                      type: object
                      readOnly: true
                      properties:
                        start_on:
                          type: string
                          format: date
                          example: '2019-09-15'
                        due_at:
                          type: string
                          format: date-time
                          example: '2012-02-22T02:06:58.158Z'
                        due_on:
                          type: string
                          format: date
                          example: '2019-09-15'
                    old_resource_subtype:
                      description: >-
                        *Conditional*
                      type: string
                      readOnly: true
                      example: default_task
                    new_resource_subtype:
                      description: >-
                        *Conditional*
                      type: string
                      readOnly: true
                      example: milestone
                    story:
                      description: >-
                        A story represents an activity associated with an object in
                        the Asana
                        system.
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the object, as a string.
                          type: string
                          readOnly: true
                          example: '12345'
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: story
                        resource_subtype:
                          description: >-
                            The subtype of this resource. Different subtypes retain
                            many of the
                            same fields and behavior, but may render differently in
                            Asana or
                            represent resources with different semantic meaning.
                          type: string
                          readOnly: true
                          example: comment_added
                        created_at:
                          description: The time at which this resource was created.
                          type: string
                          format: date-time
                          readOnly: true
                          example: '2012-02-22T02:06:58.147Z'
                        created_by:
                          description: >-
                            The user who created this resource.
                          type: object
                          properties:
                            gid:
                              description: >-
                                Globally unique identifier of the object, as a string.
                              type: string
                              readOnly: true
                              example: '12345'
                            resource_type:
                              description: The base type of this resource.
                              type: string
                              readOnly: true
                              example: user
                            name:
                              description: >-
                                *Read-only except when same user as requester*. The
                                user’s name.
                              type: string
                              example: Greg Sanchez
                          readOnly: true
                          nullable: true
                        text:
                          description: >-
                            *Create-only*. Human-readable text for the story or comment.

                            This will not include the name of the creator.

                            *Note: This is not guaranteed to be stable for a given
                            type of
                            story. For example, text for a reassignment may not always
                            say
                            “assigned to …” as the text for a story can both be edited
                            and
                            change based on the language settings of the user making
                            the
                            request.*

                            Use the `resource_subtype` property to discover the action
                            that
                            created the story.
                          example: marked today
                        type:
                          description: >
                            *Deprecated: new integrations should prefer the
                            `resource_subtype` field.*
                          type: string
                          readOnly: true
                          example: comment
                    assignee:
                      description: >-
                        A *user* object represents an account in Asana that can be
                        given
                        access to various workspaces, projects, and tasks.
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the object, as a string.
                          type: string
                          readOnly: true
                          example: '12345'
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: user
                        name:
                          description: >-
                            *Read-only except when same user as requester*. The user’s
                            name.
                          type: string
                          example: Greg Sanchez
                    follower:
                      description: >-
                        A *user* object represents an account in Asana that can be
                        given
                        access to various workspaces, projects, and tasks.
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the object, as a string.
                          type: string
                          readOnly: true
                          example: '12345'
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: user
                        name:
                          description: >-
                            *Read-only except when same user as requester*. The user’s
                            name.
                          type: string
                          example: Greg Sanchez
                    old_section:
                      description: >-
                        A *section* is a subdivision of a project that groups tasks
                        together.
                        It can either be a header above a list of tasks in a list
                        view or a
                        column in a board view of a project.
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the object, as a string.
                          type: string
                          readOnly: true
                          example: '12345'
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: section
                        name:
                          description: >-
                            The name of the section (i.e. the text displayed as the
                            section
                            header).
                          type: string
                          example: Next Actions
                    new_section:
                      description: >-
                        A *section* is a subdivision of a project that groups tasks
                        together.
                        It can either be a header above a list of tasks in a list
                        view or a
                        column in a board view of a project.
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the object, as a string.
                          type: string
                          readOnly: true
                          example: '12345'
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: section
                        name:
                          description: >-
                            The name of the section (i.e. the text displayed as the
                            section
                            header).
                          type: string
                          example: Next Actions
                    task:
                      description: >-
                        The *task* is the basic object around which many operations
                        in Asana
                        are centered.
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the object, as a string.
                          type: string
                          readOnly: true
                          example: '12345'
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: task
                        name:
                          description: The name of the object.
                          type: string
                          example: Bug Task
                    project:
                      description: >-
                        A *project* represents a prioritized list of tasks in Asana
                        or a board
                        with columns of tasks represented as cards. It exists in a
                        single
                        workspace or organization and is accessible to a subset of
                        users in
                        that workspace or organization, depending on its permissions.
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the object, as a string.
                          type: string
                          readOnly: true
                          example: '12345'
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: project
                        name:
                          description: >-
                            Name of the project. This is generally a short sentence
                            fragment
                            that fits on a line in the UI for maximum readability.
                            However, it
                            can be longer.
                          type: string
                          example: Stuff to buy
                    tag:
                      description: >-
                        A *tag* is a label that can be attached to any task in Asana.
                        It
                        exists in a single workspace or organization.
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the object, as a string.
                          type: string
                          readOnly: true
                          example: '12345'
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: tag
                        name:
                          description: >-
                            Name of the tag. This is generally a short sentence fragment
                            that
                            fits on a line in the UI for maximum readability. However,
                            it can
                            be longer.
                          type: string
                          example: Stuff to buy
                    custom_field:
                      description: >-
                        Custom Fields store the metadata that is used in order to
                        add user-specified information to tasks in Asana. Be sure
                        to reference the [Custom Fields](#asana-custom-fields)
                        developer documentation for more information about how custom
                        fields
                        relate to various resources in Asana.


                        Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields),
                        which will make them read-only when accessed by other users.
                        Attempting to edit a locked custom field will return HTTP
                        error code
                        `403 Forbidden`.
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the object, as a string.
                          type: string
                          readOnly: true
                          example: '12345'
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: custom_field
                        name:
                          description: The name of the object.
                          type: string
                          example: Bug Task
                        resource_subtype:
                          description: >
                            The type of the custom field. Must be one of the given
                            values.
                          type: string
                          example: text
                          enum:
                            - text
                            - enum
                            - number
                        type:
                          description: >
                            *Deprecated: new integrations should prefer the resource_subtype
                            field.* The type of the custom field. Must be one of the
                            given
                            values.
                          type: string
                          readOnly: true
                          enum:
                            - text
                            - enum
                            - number
                        enum_options:
                          description: >-
                            *Conditional*. Only relevant for custom fields of type
                            `enum`.
                            This array specifies the possible values which an `enum`
                            custom
                            field can adopt. To modify the enum options, refer to
                            [working
                            with enum
                            options](#create-an-enum-option).
                          type: array
                          items:
                            description: >-
                              Enum options are the possible values which an enum custom
                              field can
                              adopt. An enum custom field must contain at least 1
                              enum option but no
                              more than 50.


                              You can add enum options to a custom field by using
                              the `POST
                              /custom_fields/custom_field_gid/enum_options` endpoint.


                              **It is not possible to remove or delete an enum option**.
                              Instead,
                              enum options can be disabled by updating the `enabled`
                              field to false
                              with the `PUT /enum_options/enum_option_gid` endpoint.
                              Other
                              attributes can be updated similarly.


                              On creation of an enum option, `enabled` is always set
                              to `true`,
                              meaning the enum option is a selectable value for the
                              custom field.
                              Setting `enabled=false` is equivalent to “trashing”
                              the enum option in
                              the Asana web app within the “Edit Fields” dialog. The
                              enum option
                              will no longer be selectable but, if the enum option
                              value was
                              previously set within a task, the task will retain the
                              value.


                              Enum options are an ordered list and by default new
                              enum options are
                              inserted at the end. Ordering in relation to existing
                              enum options can
                              be specified on creation by using `insert_before` or
                              `insert_after` to
                              reference an existing enum option. Only one of `insert_before`
                              and
                              `insert_after` can be provided when creating a new enum
                              option.


                              An enum options list can be reordered with the `POST
                              /custom_fields/custom_field_gid/enum_options/insert`
                              endpoint.
                            type: object
                            properties:
                              gid:
                                description: >-
                                  Globally unique identifier of the object, as a string.
                                type: string
                                readOnly: true
                                example: '12345'
                              resource_type:
                                description: The base type of this resource.
                                type: string
                                readOnly: true
                                example: enum_option
                              name:
                                description: The name of the enum option.
                                type: string
                                example: Low
                              enabled:
                                description: "The color of the enum option. Defaults\
                                  \ to \u2018none\u2019."
                                type: boolean
                                example: true
                              color:
                                description: >-
                                  Whether or not the enum option is a selectable value
                                  for the
                                  custom field.
                                type: string
                                example: blue
                        enum_value: {}
                        enabled:
                          description: >-
                            *Conditional*. Determines if the custom field is enabled
                            or not.
                          type: boolean
                          example: true
                        text_value:
                          description: >-
                            *Conditional*. This string is the value of a text custom
                            field.
                          type: string
                          example: Some Value
                    old_text_value:
                      description: >-
                        *Conditional*
                      type: string
                      readOnly: true
                      example: This was the Old Text
                    new_text_value:
                      description: >-
                        *Conditional*
                      type: string
                      readOnly: true
                      example: This is the New Text
                    old_number_value:
                      description: >-
                        *Conditional*
                      type: integer
                      readOnly: true
                      example: 1
                    new_number_value:
                      description: >-
                        *Conditional*
                      type: integer
                      readOnly: true
                      example: 2
                    old_enum_value:
                      description: >-
                        Enum options are the possible values which an enum custom
                        field can
                        adopt. An enum custom field must contain at least 1 enum option
                        but no
                        more than 50.


                        You can add enum options to a custom field by using the `POST
                        /custom_fields/custom_field_gid/enum_options` endpoint.


                        **It is not possible to remove or delete an enum option**.
                        Instead,
                        enum options can be disabled by updating the `enabled` field
                        to false
                        with the `PUT /enum_options/enum_option_gid` endpoint. Other
                        attributes can be updated similarly.


                        On creation of an enum option, `enabled` is always set to
                        `true`,
                        meaning the enum option is a selectable value for the custom
                        field.
                        Setting `enabled=false` is equivalent to “trashing” the enum
                        option in
                        the Asana web app within the “Edit Fields” dialog. The enum
                        option
                        will no longer be selectable but, if the enum option value
                        was
                        previously set within a task, the task will retain the value.


                        Enum options are an ordered list and by default new enum options
                        are
                        inserted at the end. Ordering in relation to existing enum
                        options can
                        be specified on creation by using `insert_before` or `insert_after`
                        to
                        reference an existing enum option. Only one of `insert_before`
                        and
                        `insert_after` can be provided when creating a new enum option.


                        An enum options list can be reordered with the `POST
                        /custom_fields/custom_field_gid/enum_options/insert` endpoint.
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the object, as a string.
                          type: string
                          readOnly: true
                          example: '12345'
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: enum_option
                        name:
                          description: The name of the enum option.
                          type: string
                          example: Low
                        enabled:
                          description: "The color of the enum option. Defaults to\
                            \ \u2018none\u2019."
                          type: boolean
                          example: true
                        color:
                          description: >-
                            Whether or not the enum option is a selectable value for
                            the
                            custom field.
                          type: string
                          example: blue
                    new_enum_value:
                      description: >-
                        Enum options are the possible values which an enum custom
                        field can
                        adopt. An enum custom field must contain at least 1 enum option
                        but no
                        more than 50.


                        You can add enum options to a custom field by using the `POST
                        /custom_fields/custom_field_gid/enum_options` endpoint.


                        **It is not possible to remove or delete an enum option**.
                        Instead,
                        enum options can be disabled by updating the `enabled` field
                        to false
                        with the `PUT /enum_options/enum_option_gid` endpoint. Other
                        attributes can be updated similarly.


                        On creation of an enum option, `enabled` is always set to
                        `true`,
                        meaning the enum option is a selectable value for the custom
                        field.
                        Setting `enabled=false` is equivalent to “trashing” the enum
                        option in
                        the Asana web app within the “Edit Fields” dialog. The enum
                        option
                        will no longer be selectable but, if the enum option value
                        was
                        previously set within a task, the task will retain the value.


                        Enum options are an ordered list and by default new enum options
                        are
                        inserted at the end. Ordering in relation to existing enum
                        options can
                        be specified on creation by using `insert_before` or `insert_after`
                        to
                        reference an existing enum option. Only one of `insert_before`
                        and
                        `insert_after` can be provided when creating a new enum option.


                        An enum options list can be reordered with the `POST
                        /custom_fields/custom_field_gid/enum_options/insert` endpoint.
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the object, as a string.
                          type: string
                          readOnly: true
                          example: '12345'
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: enum_option
                        name:
                          description: The name of the enum option.
                          type: string
                          example: Low
                        enabled:
                          description: "The color of the enum option. Defaults to\
                            \ \u2018none\u2019."
                          type: boolean
                          example: true
                        color:
                          description: >-
                            Whether or not the enum option is a selectable value for
                            the
                            custom field.
                          type: string
                          example: blue
                    duplicate_of:
                      description: >-
                        The *task* is the basic object around which many operations
                        in Asana
                        are centered.
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the object, as a string.
                          type: string
                          readOnly: true
                          example: '12345'
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: task
                        name:
                          description: The name of the object.
                          type: string
                          example: Bug Task
                    duplicated_from:
                      description: >-
                        The *task* is the basic object around which many operations
                        in Asana
                        are centered.
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the object, as a string.
                          type: string
                          readOnly: true
                          example: '12345'
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: task
                        name:
                          description: The name of the object.
                          type: string
                          example: Bug Task
                    dependency:
                      description: >-
                        The *task* is the basic object around which many operations
                        in Asana
                        are centered.
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the object, as a string.
                          type: string
                          readOnly: true
                          example: '12345'
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: task
                        name:
                          description: The name of the object.
                          type: string
                          example: Bug Task
                    source:
                      description: >-
                        The component of the Asana product the user used to trigger
                        the
                        story.
                      type: string
                      readOnly: true
                      example: web
                    target:
                      description: >-
                        The object this story is associated with. Currently may only
                        be a
                        task.
                      readOnly: true
                      properties:
                        gid:
                          type: string
                          example: '1234'
                        name:
                          type: string
                          example: Bug Task
      responses:
        200:
          description: Successfully retrieved the specified story.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete a story
      description: |-
        Deletes a story. A user can only delete stories they have created. Returns an empty data record.

        Returns an empty data record.
      tags:
        - Stories
      operationId: deleteStory
      responses:
        200:
          description: Successfully deleted the specified story.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tasks/{task_gid}/stories:
    parameters:
      - $ref: '#/components/parameters/task_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get stories from a task
      description: >-
        Returns the compact records for all stories on the task.
      tags:
        - Stories
      operationId: getTaskStories
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        200:
          description: Successfully retrieved the specified task's stories.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create a comment on a task
      description: |-
        Adds a comment to a task. The comment will be authored by the currently
        authenticated user, and timestamped when the server receives the
        request.

        Returns the full record for the new story added to the task.
      tags:
        - Stories
      operationId: createCommentStory
      requestBody:
        description: The comment story to create.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    task:
                      description: Globally unique identifier for the task.
                      type: string
                      example: '123456'
                    text:
                      description: The plain text of the comment to add.
                      type: string
                      example: This is a comment.
                  required:
                    - task
                    - text
      responses:
        201:
          description: Successfully created a new story.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tags:
    parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get multiple tags
      description: >-
        Returns the compact tag records for some filtered set of tags.
        Use one or more of the parameters provided to filter the tags returned.
      tags:
        - Tags
      operationId: queryTags
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - name: workspace
          in: query
          description: >-
            The workspace to filter tags on.
          schema:
            type: string
          example: '1331'
        - name: archived
          in: query
          description: >-
            Only return tags whose `archived` field takes on the value of
            this parameter.
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: Successfully retrieved the specified set of tags.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create a tag
      description: |-
        Creates a new tag in a workspace or organization.

        Every tag is required to be created in a specific workspace or
        organization, and this cannot be changed once set. Note that you can use
        the workspace parameter regardless of whether or not it is an
        organization.

        Returns the full record of the newly created tag.
      tags:
        - Tags
      operationId: createTag
      requestBody:
        description: The tag to create.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  description: >-
                    A *tag* is a label that can be attached to any task in Asana.
                    It
                    exists in a single workspace or organization.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: tag
                    name:
                      description: >-
                        Name of the tag. This is generally a short sentence fragment
                        that
                        fits on a line in the UI for maximum readability. However,
                        it can
                        be longer.
                      type: string
                      example: Stuff to buy
                    followers:
                      description: Array of users following this tag.
                      type: array
                      readOnly: true
                      items:
                        description: >-
                          A *user* object represents an account in Asana that can
                          be given
                          access to various workspaces, projects, and tasks.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: user
                          name:
                            description: >-
                              *Read-only except when same user as requester*. The
                              user’s name.
                            type: string
                            example: Greg Sanchez
                    color:
                      type: string
                      description: Color of the tag.
                      enum:
                        - dark-pink
                        - dark-green
                        - dark-blue
                        - dark-red
                        - dark-teal
                        - dark-brown
                        - dark-orange
                        - dark-purple
                        - dark-warm-gray
                        - light-pink
                        - light-green
                        - light-blue
                        - light-red
                        - light-teal
                        - light-brown
                        - light-orange
                        - light-purple
                        - light-warm-gray
                      example: light-green
                    workspace:
                      description: >-
                        A *workspace* is the highest-level organizational unit in
                        Asana. All
                        projects and tasks have an associated workspace.
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the object, as a string.
                          type: string
                          readOnly: true
                          example: '12345'
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: workspace
                        name:
                          description: The name of the object.
                          type: string
                          example: My Company Workspace
      responses:
        201:
          description: Successfully created the newly specified tag.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tags/{tag_gid}:
    parameters:
      - $ref: '#/components/parameters/tag_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get a tag
      description: Returns the complete tag record for a single tag.
      tags:
        - Tags
      operationId: getTag
      responses:
        200:
          description: Successfully retrieved the specified tag.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update a tag
      description: |-
        Updates the properties of a tag. Only the fields provided in the `data`
        block will be updated; any unspecified fields will remain unchanged.

        When using this method, it is best to specify only those fields you wish
        to change, or else you may overwrite changes made by another user since
        you last retrieved the task.

        Returns the complete updated tag record.
      tags:
        - Tags
      operationId: updateTag
      responses:
        200:
          description: Successfully updated the specified tag.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tasks/{task_gid}/tags:
    parameters:
      - $ref: '#/components/parameters/task_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get a task's tags
      description: >-
        Get a compact representation of all of the tags the task has.
      tags:
        - Tags
      operationId: getTaskTags
      responses:
        200:
          description: >-
            Successfully retrieved the tags for the given task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /workspaces/{workspace_gid}/tags:
    parameters:
      - $ref: '#/components/parameters/workspace_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get tags in a workspace
      description: >-
        Returns the compact tag records for some filtered set of tags.
        Use one or more of the parameters provided to filter the tags returned.
      tags:
        - Tags
      operationId: queryAllTagsInWorkspace
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        200:
          description: Successfully retrieved the specified set of tags.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create a tag in a workspace
      description: |-
        Creates a new tag in a workspace or organization.

        Every tag is required to be created in a specific workspace or
        organization, and this cannot be changed once set. Note that you can use
        the workspace parameter regardless of whether or not it is an
        organization.

        Returns the full record of the newly created tag.
      tags:
        - Tags
      operationId: createTagInWorkspace
      requestBody:
        description: The tag to create.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  description: >-
                    A *tag* is a label that can be attached to any task in Asana.
                    It
                    exists in a single workspace or organization.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: tag
                    name:
                      description: >-
                        Name of the tag. This is generally a short sentence fragment
                        that
                        fits on a line in the UI for maximum readability. However,
                        it can
                        be longer.
                      type: string
                      example: Stuff to buy
                    followers:
                      description: Array of users following this tag.
                      type: array
                      readOnly: true
                      items:
                        description: >-
                          A *user* object represents an account in Asana that can
                          be given
                          access to various workspaces, projects, and tasks.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: user
                          name:
                            description: >-
                              *Read-only except when same user as requester*. The
                              user’s name.
                            type: string
                            example: Greg Sanchez
                    color:
                      type: string
                      description: Color of the tag.
                      enum:
                        - dark-pink
                        - dark-green
                        - dark-blue
                        - dark-red
                        - dark-teal
                        - dark-brown
                        - dark-orange
                        - dark-purple
                        - dark-warm-gray
                        - light-pink
                        - light-green
                        - light-blue
                        - light-red
                        - light-teal
                        - light-brown
                        - light-orange
                        - light-purple
                        - light-warm-gray
                      example: light-green
                    workspace:
                      description: >-
                        A *workspace* is the highest-level organizational unit in
                        Asana. All
                        projects and tasks have an associated workspace.
                      type: object
                      properties:
                        gid:
                          description: >-
                            Globally unique identifier of the object, as a string.
                          type: string
                          readOnly: true
                          example: '12345'
                        resource_type:
                          description: The base type of this resource.
                          type: string
                          readOnly: true
                          example: workspace
                        name:
                          description: The name of the object.
                          type: string
                          example: My Company Workspace
      responses:
        200:
          description: Successfully retrieved the specified set of tags.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tasks:
    parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get multiple tasks
      description: >-
        Returns the compact task records for some filtered set of tasks. Use one
        or more of the parameters provided to filter the tasks returned. You must
        specify a `project` or `tag` if you do not specify `assignee` and
        `workspace`.


        For more complex task retrieval, use
        [workspaces/{workspace_gid}/tasks/search](#search-tasks-in-a-workspace).
      tags:
        - Tasks
      operationId: queryTasks
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - name: assignee
          in: query
          description: >-
            The assignee to filter tasks on.

            *Note: If you specify `assignee`, you must also specify the
            `workspace` to filter on.*
          schema:
            type: string
          x-env-variable: assignee
          example: '14641'
        - name: project
          in: query
          description: >-
            The project to filter tasks on.
          schema:
            type: string
          example: '321654'
          x-env-variable: project
        - name: section
          in: query
          description: >-
            The section to filter tasks on.

            *Note: Currently, this is only supported in board views.*
          schema:
            type: string
          example: '321654'
          x-env-variable: section
        - name: workspace
          in: query
          description: >-
            The workspace to filter tasks on.

            *Note: If you specify `workspace`, you must also specify the
            `assignee` to filter on.*
          schema:
            type: string
          example: '321654'
          x-env-variable: workspace
        - name: completed_since
          in: query
          description: >-
            Only return tasks that are either incomplete or that have been
            completed since this time.
          schema:
            type: string
            format: date-time
            example: '2012-02-22T02:06:58.158Z'
        - name: modified_since
          in: query
          description: |-
            Only return tasks that have been modified since the given time.

            *Note: A task is considered “modified” if any of its properties
            change, or associations between it and other objects are modified
            (e.g.  a task being added to a project). A task is not considered
            modified just because another object it is associated with (e.g. a
            subtask) is modified. Actions that count as modifying the task
            include assigning, renaming, completing, and adding stories.*
          schema:
            type: string
            format: date-time
          example: '2012-02-22T02:06:58.158Z'
      responses:
        200:
          description: Successfully retrieved requested tasks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create a task
      description: |-
        Creating a new task is as easy as POSTing to the `/tasks` endpoint with a
        data block containing the fields you’d like to set on the task. Any
        unspecified fields will take on default values.

        Every task is required to be created in a specific workspace, and this
        workspace cannot be changed once set. The workspace need not be set
        explicitly if you specify `projects` or a `parent` task instead.
      tags:
        - Tasks
      operationId: createTask
      requestBody:
        description: The task to create.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  description: >-
                    The *task* is the basic object around which many operations in
                    Asana
                    are centered.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: task
                    name:
                      description: >-
                        Name of the task. This is generally a short sentence fragment
                        that
                        fits on a line in the UI for maximum readability. However,
                        it can
                        be longer.
                      type: string
                      example: Buy catnip
                    created_at:
                      description: The time at which this resource was created.
                      type: string
                      format: date-time
                      readOnly: true
                      example: '2012-02-22T02:06:58.147Z'
                    resource_subtype:
                      description: >-
                        The subtype of this resource. Different subtypes retain many
                        of
                        the same fields and behavior, but may render differently in
                        Asana
                        or represent resources with different semantic meaning.

                        The resource_subtype `milestone` represent a single moment
                        in
                        time. This means tasks with this subtype cannot have a start_date.

                        *Note: The resource_subtype of `section` is under active
                        migration—please see our [forum
                        post](https://forum.asana.com/t/sections-are-dead-long-live-sections)
                        for more information.*
                      type: string
                      readOnly: true
                      enum:
                        - default_task
                        - milestone
                        - section
                      example: default_task
                    assignee:
                      type: string
                      readOnly: false
                      x-env-variable: true
                      description: >-
                        Gid of an object.
                      example: '12345'
                    assignee_status:
                      description: >-
                        Scheduling status of this task for the user it is assigned
                        to.
                        This field can only be set if the assignee is non-null.
                      type: string
                      enum:
                        - today
                        - upcoming
                        - later
                        - new
                        - inbox
                      example: upcoming
                    completed:
                      description: >-
                        True if the task is currently marked complete, false if not.
                      type: boolean
                      example: false
                    completed_at:
                      description: >-
                        The time at which this task was completed, or null if the
                        task is
                        incomplete.
                      type: string
                      format: date-time
                      readOnly: true
                      nullable: true
                      example: '2012-02-22T02:06:58.147Z'
                    custom_fields:
                      description: >-
                        Array of custom field values applied to the project. These
                        represent the custom field values recorded on this project
                        for a
                        particular custom field. For example, these custom field values
                        will contain an `enum_value` property for custom fields of
                        type
                        `enum`, a `text_value` property for custom fields of type
                        `text`, and so on. Please note that the `gid` returned on
                        each
                        custom field value *is identical* to the `gid` of the custom
                        field,
                        which allows referencing the custom field metadata through
                        the
                        `/custom_fields/custom_field-gid` endpoint.
                      type: array
                      items:
                        description: >-
                          Custom Fields store the metadata that is used in order to
                          add user-specified information to tasks in Asana. Be sure
                          to reference the [Custom Fields](#asana-custom-fields)
                          developer documentation for more information about how custom
                          fields
                          relate to various resources in Asana.


                          Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields),
                          which will make them read-only when accessed by other users.
                          Attempting to edit a locked custom field will return HTTP
                          error code
                          `403 Forbidden`.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: custom_field
                          name:
                            description: The name of the object.
                            type: string
                            example: Bug Task
                          resource_subtype:
                            description: >
                              The type of the custom field. Must be one of the given
                              values.
                            type: string
                            example: text
                            enum:
                              - text
                              - enum
                              - number
                          type:
                            description: >
                              *Deprecated: new integrations should prefer the resource_subtype
                              field.* The type of the custom field. Must be one of
                              the given
                              values.
                            type: string
                            readOnly: true
                            enum:
                              - text
                              - enum
                              - number
                          enum_options:
                            description: >-
                              *Conditional*. Only relevant for custom fields of type
                              `enum`.
                              This array specifies the possible values which an `enum`
                              custom
                              field can adopt. To modify the enum options, refer to
                              [working
                              with enum
                              options](#create-an-enum-option).
                            type: array
                            items:
                              description: >-
                                Enum options are the possible values which an enum
                                custom field can
                                adopt. An enum custom field must contain at least
                                1 enum option but no
                                more than 50.


                                You can add enum options to a custom field by using
                                the `POST
                                /custom_fields/custom_field_gid/enum_options` endpoint.


                                **It is not possible to remove or delete an enum option**.
                                Instead,
                                enum options can be disabled by updating the `enabled`
                                field to false
                                with the `PUT /enum_options/enum_option_gid` endpoint.
                                Other
                                attributes can be updated similarly.


                                On creation of an enum option, `enabled` is always
                                set to `true`,
                                meaning the enum option is a selectable value for
                                the custom field.
                                Setting `enabled=false` is equivalent to “trashing”
                                the enum option in
                                the Asana web app within the “Edit Fields” dialog.
                                The enum option
                                will no longer be selectable but, if the enum option
                                value was
                                previously set within a task, the task will retain
                                the value.


                                Enum options are an ordered list and by default new
                                enum options are
                                inserted at the end. Ordering in relation to existing
                                enum options can
                                be specified on creation by using `insert_before`
                                or `insert_after` to
                                reference an existing enum option. Only one of `insert_before`
                                and
                                `insert_after` can be provided when creating a new
                                enum option.


                                An enum options list can be reordered with the `POST
                                /custom_fields/custom_field_gid/enum_options/insert`
                                endpoint.
                              type: object
                              properties:
                                gid:
                                  description: >-
                                    Globally unique identifier of the object, as a
                                    string.
                                  type: string
                                  readOnly: true
                                  example: '12345'
                                resource_type:
                                  description: The base type of this resource.
                                  type: string
                                  readOnly: true
                                  example: enum_option
                                name:
                                  description: The name of the enum option.
                                  type: string
                                  example: Low
                                enabled:
                                  description: "The color of the enum option. Defaults\
                                    \ to \u2018none\u2019."
                                  type: boolean
                                  example: true
                                color:
                                  description: >-
                                    Whether or not the enum option is a selectable
                                    value for the
                                    custom field.
                                  type: string
                                  example: blue
                          enum_value: {}
                          enabled:
                            description: >-
                              *Conditional*. Determines if the custom field is enabled
                              or not.
                            type: boolean
                            example: true
                          text_value:
                            description: >-
                              *Conditional*. This string is the value of a text custom
                              field.
                            type: string
                            example: Some Value
                          description:
                            description: >-
                              [Opt
                              In](#input-output-options).
                              The description of the custom field.
                            type: string
                            example: Development team priority
                          precision:
                            description: >-
                              Only relevant for custom fields of type ‘Number’. This
                              field
                              dictates the number of places after the decimal to round
                              to, i.e.
                              0 is integer values, 1 rounds to the nearest tenth,
                              and so on.
                              Must be between 0 and 6, inclusive.
                            type: integer
                            example: 2
                          is_global_to_workspace:
                            description: >-
                              This flag describes whether this custom field is available
                              to
                              every container in the workspace. Before project-specific
                              custom
                              fields, this field was always true.
                            type: boolean
                            example: true
                            readOnly: true
                          has_notifications_enabled:
                            description: >-
                              This flag describes whether a follower of a task with
                              this field
                              should receive inbox notifications from changes to this
                              field.
                            type: boolean
                            example: true
                      readOnly: true
                    dependencies:
                      description: >-
                        [Opt
                        In](#input-output-options).
                        Array of resources referencing tasks that this task depends
                        on.
                        The objects contain only the gid of the dependency.
                      type: array
                      items:
                        type: object
                        properties:
                          gid:
                            type: string
                            example: '1234'
                      readOnly: true
                      example:
                        - gid: '1234'
                        - gid: '4321'
                    dependents:
                      description: >-
                        [Opt
                        In](#input-output-options).
                        Array of resources referencing tasks that depend on this task.
                        The
                        objects contain only the ID of the dependent.
                      type: array
                      items:
                        type: object
                        properties:
                          gid:
                            type: string
                            example: '1234'
                      readOnly: true
                      example:
                        - gid: '1234'
                        - gid: '4321'
                    due_at:
                      description: >-
                        Date and time on which this task is due, or null if the task
                        has
                        no due time. This takes a UTC timestamp and should not be
                        used
                        together with `due_on`.
                      type: string
                      format: date
                      example: '2012-02-22T02:06:58.147Z'
                      nullable: true
                    due_on:
                      description: >-
                        Date on which this task is due, or null if the task has no
                        due
                        date.  This takes a date with `YYYY-MM-DD` format and should
                        not
                        be used together with due_at.
                      type: string
                      format: date
                      example: '2012-03-26'
                      nullable: true
                    external:
                      description: >-
                        *OAuth Required*. *Conditional*. This field is returned only
                        if external values are set or included by using [Opt In]
                        (#input-output-options).

                        The external field allows you to store app-specific metadata
                        on
                        tasks, including a gid that can be used to retrieve tasks
                        and a
                        data blob that can store app-specific character strings. Note
                        that
                        you will need to authenticate with Oauth to access or modify
                        this
                        data. Once an external gid is set, you can use the notation
                        `external:custom_gid` to reference your object anywhere in
                        the API
                        where you may use the original object gid. See the page on
                        Custom
                        External Data for more details.
                      type: object
                      properties:
                        gid:
                          type: string
                          example: '1234'
                        data:
                          type: string
                          example: A blob of information.
                      example:
                        gid: my_gid
                        data: A blob of information
                    followers:
                      description: >-
                        Array of object Gids.
                      type: array
                      readOnly: false
                      items:
                        description: >-
                          Gid of an object.
                        type: string
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: user
                          name:
                            description: >-
                              *Read-only except when same user as requester*. The
                              user’s name.
                            type: string
                            example: Greg Sanchez
                      example:
                        - '12345'
                    html_notes:
                      description: >-
                        [Opt
                        In](#input-output-options).
                        The notes of the text with formatting as HTML.

                        *Note: This field is under active migration—please see our
                        blog
                        post for more information.*
                      type: string
                      example: >-
                        <body>Mittens <em>really</em> likes the stuff from
                        Humboldt.</body>
                    hearted:
                      description: >-
                        *Deprecated - please use liked instead* True if the task is
                        hearted by the authorized user, false if not.
                      type: boolean
                      example: true
                      readOnly: true
                    hearts:
                      description: >-
                        *Deprecated - please use likes instead* Array of users who
                        have
                        hearted this task.
                      type: array
                      items:
                        description: >-
                          A *user* object represents an account in Asana that can
                          be given
                          access to various workspaces, projects, and tasks.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: user
                          name:
                            description: >-
                              *Read-only except when same user as requester*. The
                              user’s name.
                            type: string
                            example: Greg Sanchez
                      readOnly: true
                    is_rendered_as_separator:
                      description: >-
                        [Opt In](#input-output-options).
                        In some contexts tasks can be rendered as a visual separator;
                        for instance, subtasks can appear similar to
                        [sections](#asana-sections) without being true
                        `section` objects. If a `task` object is rendered this way
                        in any
                        context it will have the property `is_rendered_as_separator`
                        set
                        to `true`.<br /><br />*Note: Until the default behavior for
                        our
                        API changes integrations must [opt in to the `new_sections`
                        change]
                        (https://forum.asana.com/t/sections-are-dead-long-live-sections/33951)
                        to modify the `is_rendered_as_separator` property.*
                      type: boolean
                      example: false
                      readOnly: true
                    liked:
                      description: >-
                        True if the task is liked by the authorized user, false if
                        not.
                      type: boolean
                      example: true
                      readOnly: true
                    likes:
                      description: Array of users who have liked this task.
                      type: array
                      items:
                        description: >-
                          A *user* object represents an account in Asana that can
                          be given
                          access to various workspaces, projects, and tasks.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: user
                          name:
                            description: >-
                              *Read-only except when same user as requester*. The
                              user’s name.
                            type: string
                            example: Greg Sanchez
                      readOnly: true
                    memberships:
                      description: >-
                        *Create-only*. Array of projects this task is associated with
                        and the section it is in. At task creation time, this array
                        can be
                        used to add the task to specific sections. After task creation,
                        these associations can be modified using the `addProject`
                        and
                        `removeProject` endpoints. Note that over time, more types
                        of
                        memberships may be added to this property.
                      type: array
                      readOnly: true
                      items:
                        type: object
                        properties:
                          project:
                            description: >-
                              A *project* represents a prioritized list of tasks in
                              Asana or a board
                              with columns of tasks represented as cards. It exists
                              in a single
                              workspace or organization and is accessible to a subset
                              of users in
                              that workspace or organization, depending on its permissions.
                            type: object
                            properties:
                              gid:
                                description: >-
                                  Globally unique identifier of the object, as a string.
                                type: string
                                readOnly: true
                                example: '12345'
                              resource_type:
                                description: The base type of this resource.
                                type: string
                                readOnly: true
                                example: project
                              name:
                                description: >-
                                  Name of the project. This is generally a short sentence
                                  fragment
                                  that fits on a line in the UI for maximum readability.
                                  However, it
                                  can be longer.
                                type: string
                                example: Stuff to buy
                          section:
                            description: >-
                              A *section* is a subdivision of a project that groups
                              tasks together.
                              It can either be a header above a list of tasks in a
                              list view or a
                              column in a board view of a project.
                            type: object
                            properties:
                              gid:
                                description: >-
                                  Globally unique identifier of the object, as a string.
                                type: string
                                readOnly: true
                                example: '12345'
                              resource_type:
                                description: The base type of this resource.
                                type: string
                                readOnly: true
                                example: section
                              name:
                                description: >-
                                  The name of the section (i.e. the text displayed
                                  as the section
                                  header).
                                type: string
                                example: Next Actions
                    modified_at:
                      description: |-
                        The time at which this task was last modified.

                        *Note: This does not currently reflect any changes in
                        associations such as projects or comments that may have been
                        added or removed from the task.*
                      type: string
                      format: date-time
                      readOnly: true
                      example: '2012-02-22T02:06:58.147Z'
                    notes:
                      description: >-
                        More detailed, free-form textual information associated with
                        the
                        task.
                      type: string
                      example: Mittens really likes the stuff from Humboldt.
                    num_hearts:
                      description: >-
                        *Deprecated - please use likes instead* The number of users
                        who
                        have hearted this task.
                      type: integer
                      example: 5
                      readOnly: true
                    num_likes:
                      description: The number of users who have liked this task.
                      type: integer
                      example: 5
                      readOnly: true
                    num_subtasks:
                      description: >
                        [Opt
                        In](#input-output-options).
                        The number of subtasks on this task.
                      type: integer
                      example: 3
                      readOnly: true
                    parent:
                      type: string
                      readOnly: false
                      x-env-variable: true
                      description: >-
                        Gid of an object.
                      example: '12345'
                    projects:
                      description: >-
                        Array of object Gids.
                      type: array
                      readOnly: false
                      items:
                        description: >-
                          Gid of an object.
                        type: string
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: project
                          name:
                            description: >-
                              Name of the project. This is generally a short sentence
                              fragment
                              that fits on a line in the UI for maximum readability.
                              However, it
                              can be longer.
                            type: string
                            example: Stuff to buy
                      example:
                        - '12345'
                    start_on:
                      description: >-
                        The day on which work begins for the task , or null if the
                        task
                        has no start date. This takes a date with `YYYY-MM-DD` format.

                        *Note: `due_on` or `due_at` must be present in the request
                        when
                        setting or unsetting the `start_on` parameter.*
                      type: string
                      nullable: true
                      format: date
                      example: '2012-03-26'
                    tags:
                      description: >-
                        Array of object Gids.
                      type: array
                      readOnly: false
                      items:
                        description: >-
                          Gid of an object.
                        type: string
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: tag
                          name:
                            description: >-
                              Name of the tag. This is generally a short sentence
                              fragment that
                              fits on a line in the UI for maximum readability. However,
                              it can
                              be longer.
                            type: string
                            example: Stuff to buy
                      example:
                        - '12345'
                    workspace:
                      type: string
                      readOnly: false
                      x-env-variable: true
                      description: >-
                        Gid of an object.
                      example: '12345'
      responses:
        201:
          description: Successfully created a new task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tasks/{task_gid}:
    parameters:
      - $ref: '#/components/parameters/task_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get a task
      description: Returns the complete task record for a single task.
      tags:
        - Tasks
      operationId: getTask
      responses:
        200:
          description: Successfully retrieved the specified task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update a task
      description: |-
        A specific, existing task can be updated by making a PUT request on the
        URL for that task. Only the fields provided in the `data` block will be
        updated; any unspecified fields will remain unchanged.

        When using this method, it is best to specify only those fields you wish
        to change, or else you may overwrite changes made by another user since
        you last retrieved the task.

        Returns the complete updated task record.
      tags:
        - Tasks
      operationId: updateTask
      requestBody:
        description: The task to update.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  description: >-
                    The *task* is the basic object around which many operations in
                    Asana
                    are centered.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: task
                    name:
                      description: >-
                        Name of the task. This is generally a short sentence fragment
                        that
                        fits on a line in the UI for maximum readability. However,
                        it can
                        be longer.
                      type: string
                      example: Buy catnip
                    created_at:
                      description: The time at which this resource was created.
                      type: string
                      format: date-time
                      readOnly: true
                      example: '2012-02-22T02:06:58.147Z'
                    resource_subtype:
                      description: >-
                        The subtype of this resource. Different subtypes retain many
                        of
                        the same fields and behavior, but may render differently in
                        Asana
                        or represent resources with different semantic meaning.

                        The resource_subtype `milestone` represent a single moment
                        in
                        time. This means tasks with this subtype cannot have a start_date.

                        *Note: The resource_subtype of `section` is under active
                        migration—please see our [forum
                        post](https://forum.asana.com/t/sections-are-dead-long-live-sections)
                        for more information.*
                      type: string
                      readOnly: true
                      enum:
                        - default_task
                        - milestone
                        - section
                      example: default_task
                    assignee:
                      type: string
                      readOnly: false
                      x-env-variable: true
                      description: >-
                        Gid of an object.
                      example: '12345'
                    assignee_status:
                      description: >-
                        Scheduling status of this task for the user it is assigned
                        to.
                        This field can only be set if the assignee is non-null.
                      type: string
                      enum:
                        - today
                        - upcoming
                        - later
                        - new
                        - inbox
                      example: upcoming
                    completed:
                      description: >-
                        True if the task is currently marked complete, false if not.
                      type: boolean
                      example: false
                    completed_at:
                      description: >-
                        The time at which this task was completed, or null if the
                        task is
                        incomplete.
                      type: string
                      format: date-time
                      readOnly: true
                      nullable: true
                      example: '2012-02-22T02:06:58.147Z'
                    custom_fields:
                      description: >-
                        Array of custom field values applied to the project. These
                        represent the custom field values recorded on this project
                        for a
                        particular custom field. For example, these custom field values
                        will contain an `enum_value` property for custom fields of
                        type
                        `enum`, a `text_value` property for custom fields of type
                        `text`, and so on. Please note that the `gid` returned on
                        each
                        custom field value *is identical* to the `gid` of the custom
                        field,
                        which allows referencing the custom field metadata through
                        the
                        `/custom_fields/custom_field-gid` endpoint.
                      type: array
                      items:
                        description: >-
                          Custom Fields store the metadata that is used in order to
                          add user-specified information to tasks in Asana. Be sure
                          to reference the [Custom Fields](#asana-custom-fields)
                          developer documentation for more information about how custom
                          fields
                          relate to various resources in Asana.


                          Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields),
                          which will make them read-only when accessed by other users.
                          Attempting to edit a locked custom field will return HTTP
                          error code
                          `403 Forbidden`.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: custom_field
                          name:
                            description: The name of the object.
                            type: string
                            example: Bug Task
                          resource_subtype:
                            description: >
                              The type of the custom field. Must be one of the given
                              values.
                            type: string
                            example: text
                            enum:
                              - text
                              - enum
                              - number
                          type:
                            description: >
                              *Deprecated: new integrations should prefer the resource_subtype
                              field.* The type of the custom field. Must be one of
                              the given
                              values.
                            type: string
                            readOnly: true
                            enum:
                              - text
                              - enum
                              - number
                          enum_options:
                            description: >-
                              *Conditional*. Only relevant for custom fields of type
                              `enum`.
                              This array specifies the possible values which an `enum`
                              custom
                              field can adopt. To modify the enum options, refer to
                              [working
                              with enum
                              options](#create-an-enum-option).
                            type: array
                            items:
                              description: >-
                                Enum options are the possible values which an enum
                                custom field can
                                adopt. An enum custom field must contain at least
                                1 enum option but no
                                more than 50.


                                You can add enum options to a custom field by using
                                the `POST
                                /custom_fields/custom_field_gid/enum_options` endpoint.


                                **It is not possible to remove or delete an enum option**.
                                Instead,
                                enum options can be disabled by updating the `enabled`
                                field to false
                                with the `PUT /enum_options/enum_option_gid` endpoint.
                                Other
                                attributes can be updated similarly.


                                On creation of an enum option, `enabled` is always
                                set to `true`,
                                meaning the enum option is a selectable value for
                                the custom field.
                                Setting `enabled=false` is equivalent to “trashing”
                                the enum option in
                                the Asana web app within the “Edit Fields” dialog.
                                The enum option
                                will no longer be selectable but, if the enum option
                                value was
                                previously set within a task, the task will retain
                                the value.


                                Enum options are an ordered list and by default new
                                enum options are
                                inserted at the end. Ordering in relation to existing
                                enum options can
                                be specified on creation by using `insert_before`
                                or `insert_after` to
                                reference an existing enum option. Only one of `insert_before`
                                and
                                `insert_after` can be provided when creating a new
                                enum option.


                                An enum options list can be reordered with the `POST
                                /custom_fields/custom_field_gid/enum_options/insert`
                                endpoint.
                              type: object
                              properties:
                                gid:
                                  description: >-
                                    Globally unique identifier of the object, as a
                                    string.
                                  type: string
                                  readOnly: true
                                  example: '12345'
                                resource_type:
                                  description: The base type of this resource.
                                  type: string
                                  readOnly: true
                                  example: enum_option
                                name:
                                  description: The name of the enum option.
                                  type: string
                                  example: Low
                                enabled:
                                  description: "The color of the enum option. Defaults\
                                    \ to \u2018none\u2019."
                                  type: boolean
                                  example: true
                                color:
                                  description: >-
                                    Whether or not the enum option is a selectable
                                    value for the
                                    custom field.
                                  type: string
                                  example: blue
                          enum_value: {}
                          enabled:
                            description: >-
                              *Conditional*. Determines if the custom field is enabled
                              or not.
                            type: boolean
                            example: true
                          text_value:
                            description: >-
                              *Conditional*. This string is the value of a text custom
                              field.
                            type: string
                            example: Some Value
                          description:
                            description: >-
                              [Opt
                              In](#input-output-options).
                              The description of the custom field.
                            type: string
                            example: Development team priority
                          precision:
                            description: >-
                              Only relevant for custom fields of type ‘Number’. This
                              field
                              dictates the number of places after the decimal to round
                              to, i.e.
                              0 is integer values, 1 rounds to the nearest tenth,
                              and so on.
                              Must be between 0 and 6, inclusive.
                            type: integer
                            example: 2
                          is_global_to_workspace:
                            description: >-
                              This flag describes whether this custom field is available
                              to
                              every container in the workspace. Before project-specific
                              custom
                              fields, this field was always true.
                            type: boolean
                            example: true
                            readOnly: true
                          has_notifications_enabled:
                            description: >-
                              This flag describes whether a follower of a task with
                              this field
                              should receive inbox notifications from changes to this
                              field.
                            type: boolean
                            example: true
                      readOnly: true
                    dependencies:
                      description: >-
                        [Opt
                        In](#input-output-options).
                        Array of resources referencing tasks that this task depends
                        on.
                        The objects contain only the gid of the dependency.
                      type: array
                      items:
                        type: object
                        properties:
                          gid:
                            type: string
                            example: '1234'
                      readOnly: true
                      example:
                        - gid: '1234'
                        - gid: '4321'
                    dependents:
                      description: >-
                        [Opt
                        In](#input-output-options).
                        Array of resources referencing tasks that depend on this task.
                        The
                        objects contain only the ID of the dependent.
                      type: array
                      items:
                        type: object
                        properties:
                          gid:
                            type: string
                            example: '1234'
                      readOnly: true
                      example:
                        - gid: '1234'
                        - gid: '4321'
                    due_at:
                      description: >-
                        Date and time on which this task is due, or null if the task
                        has
                        no due time. This takes a UTC timestamp and should not be
                        used
                        together with `due_on`.
                      type: string
                      format: date
                      example: '2012-02-22T02:06:58.147Z'
                      nullable: true
                    due_on:
                      description: >-
                        Date on which this task is due, or null if the task has no
                        due
                        date.  This takes a date with `YYYY-MM-DD` format and should
                        not
                        be used together with due_at.
                      type: string
                      format: date
                      example: '2012-03-26'
                      nullable: true
                    external:
                      description: >-
                        *OAuth Required*. *Conditional*. This field is returned only
                        if external values are set or included by using [Opt In]
                        (#input-output-options).

                        The external field allows you to store app-specific metadata
                        on
                        tasks, including a gid that can be used to retrieve tasks
                        and a
                        data blob that can store app-specific character strings. Note
                        that
                        you will need to authenticate with Oauth to access or modify
                        this
                        data. Once an external gid is set, you can use the notation
                        `external:custom_gid` to reference your object anywhere in
                        the API
                        where you may use the original object gid. See the page on
                        Custom
                        External Data for more details.
                      type: object
                      properties:
                        gid:
                          type: string
                          example: '1234'
                        data:
                          type: string
                          example: A blob of information.
                      example:
                        gid: my_gid
                        data: A blob of information
                    followers:
                      description: Array of users following this task.
                      type: array
                      readOnly: true
                      items:
                        description: >-
                          A *user* object represents an account in Asana that can
                          be given
                          access to various workspaces, projects, and tasks.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: user
                          name:
                            description: >-
                              *Read-only except when same user as requester*. The
                              user’s name.
                            type: string
                            example: Greg Sanchez
                    html_notes:
                      description: >-
                        [Opt
                        In](#input-output-options).
                        The notes of the text with formatting as HTML.

                        *Note: This field is under active migration—please see our
                        blog
                        post for more information.*
                      type: string
                      example: >-
                        <body>Mittens <em>really</em> likes the stuff from
                        Humboldt.</body>
                    hearted:
                      description: >-
                        *Deprecated - please use liked instead* True if the task is
                        hearted by the authorized user, false if not.
                      type: boolean
                      example: true
                      readOnly: true
                    hearts:
                      description: >-
                        *Deprecated - please use likes instead* Array of users who
                        have
                        hearted this task.
                      type: array
                      items:
                        description: >-
                          A *user* object represents an account in Asana that can
                          be given
                          access to various workspaces, projects, and tasks.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: user
                          name:
                            description: >-
                              *Read-only except when same user as requester*. The
                              user’s name.
                            type: string
                            example: Greg Sanchez
                      readOnly: true
                    is_rendered_as_separator:
                      description: >-
                        [Opt In](#input-output-options).
                        In some contexts tasks can be rendered as a visual separator;
                        for instance, subtasks can appear similar to
                        [sections](#asana-sections) without being true
                        `section` objects. If a `task` object is rendered this way
                        in any
                        context it will have the property `is_rendered_as_separator`
                        set
                        to `true`.<br /><br />*Note: Until the default behavior for
                        our
                        API changes integrations must [opt in to the `new_sections`
                        change]
                        (https://forum.asana.com/t/sections-are-dead-long-live-sections/33951)
                        to modify the `is_rendered_as_separator` property.*
                      type: boolean
                      example: false
                      readOnly: true
                    liked:
                      description: >-
                        True if the task is liked by the authorized user, false if
                        not.
                      type: boolean
                      example: true
                      readOnly: true
                    likes:
                      description: Array of users who have liked this task.
                      type: array
                      items:
                        description: >-
                          A *user* object represents an account in Asana that can
                          be given
                          access to various workspaces, projects, and tasks.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: user
                          name:
                            description: >-
                              *Read-only except when same user as requester*. The
                              user’s name.
                            type: string
                            example: Greg Sanchez
                      readOnly: true
                    memberships:
                      description: >-
                        *Create-only*. Array of projects this task is associated with
                        and the section it is in. At task creation time, this array
                        can be
                        used to add the task to specific sections. After task creation,
                        these associations can be modified using the `addProject`
                        and
                        `removeProject` endpoints. Note that over time, more types
                        of
                        memberships may be added to this property.
                      type: array
                      readOnly: true
                      items:
                        type: object
                        properties:
                          project:
                            description: >-
                              A *project* represents a prioritized list of tasks in
                              Asana or a board
                              with columns of tasks represented as cards. It exists
                              in a single
                              workspace or organization and is accessible to a subset
                              of users in
                              that workspace or organization, depending on its permissions.
                            type: object
                            properties:
                              gid:
                                description: >-
                                  Globally unique identifier of the object, as a string.
                                type: string
                                readOnly: true
                                example: '12345'
                              resource_type:
                                description: The base type of this resource.
                                type: string
                                readOnly: true
                                example: project
                              name:
                                description: >-
                                  Name of the project. This is generally a short sentence
                                  fragment
                                  that fits on a line in the UI for maximum readability.
                                  However, it
                                  can be longer.
                                type: string
                                example: Stuff to buy
                          section:
                            description: >-
                              A *section* is a subdivision of a project that groups
                              tasks together.
                              It can either be a header above a list of tasks in a
                              list view or a
                              column in a board view of a project.
                            type: object
                            properties:
                              gid:
                                description: >-
                                  Globally unique identifier of the object, as a string.
                                type: string
                                readOnly: true
                                example: '12345'
                              resource_type:
                                description: The base type of this resource.
                                type: string
                                readOnly: true
                                example: section
                              name:
                                description: >-
                                  The name of the section (i.e. the text displayed
                                  as the section
                                  header).
                                type: string
                                example: Next Actions
                    modified_at:
                      description: |-
                        The time at which this task was last modified.

                        *Note: This does not currently reflect any changes in
                        associations such as projects or comments that may have been
                        added or removed from the task.*
                      type: string
                      format: date-time
                      readOnly: true
                      example: '2012-02-22T02:06:58.147Z'
                    notes:
                      description: >-
                        More detailed, free-form textual information associated with
                        the
                        task.
                      type: string
                      example: Mittens really likes the stuff from Humboldt.
                    num_hearts:
                      description: >-
                        *Deprecated - please use likes instead* The number of users
                        who
                        have hearted this task.
                      type: integer
                      example: 5
                      readOnly: true
                    num_likes:
                      description: The number of users who have liked this task.
                      type: integer
                      example: 5
                      readOnly: true
                    num_subtasks:
                      description: >
                        [Opt
                        In](#input-output-options).
                        The number of subtasks on this task.
                      type: integer
                      example: 3
                      readOnly: true
                    parent:
                      type: string
                      readOnly: false
                      x-env-variable: true
                      description: >-
                        Gid of an object.
                      example: '12345'
                    projects:
                      description: >-
                        *Create-only.* Array of projects this task is associated with.
                        At task creation time, this array can be used to add the task
                        to
                        many projects at once. After task creation, these associations
                        can
                        be modified using the addProject and removeProject endpoints.
                      type: array
                      readOnly: true
                      items:
                        description: >-
                          A *project* represents a prioritized list of tasks in Asana
                          or a board
                          with columns of tasks represented as cards. It exists in
                          a single
                          workspace or organization and is accessible to a subset
                          of users in
                          that workspace or organization, depending on its permissions.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: project
                          name:
                            description: >-
                              Name of the project. This is generally a short sentence
                              fragment
                              that fits on a line in the UI for maximum readability.
                              However, it
                              can be longer.
                            type: string
                            example: Stuff to buy
                    start_on:
                      description: >-
                        The day on which work begins for the task , or null if the
                        task
                        has no start date. This takes a date with `YYYY-MM-DD` format.

                        *Note: `due_on` or `due_at` must be present in the request
                        when
                        setting or unsetting the `start_on` parameter.*
                      type: string
                      nullable: true
                      format: date
                      example: '2012-03-26'
                    tags:
                      description: >-
                        *Create-only*. Array of tags associated with this task. This
                        property may be specified on creation using just an array
                        of tag
                        gids.  In order to change tags on an existing task use `addTag`
                        and
                        `removeTag`.
                      type: array
                      readOnly: true
                      items:
                        description: >-
                          A *tag* is a label that can be attached to any task in Asana.
                          It
                          exists in a single workspace or organization.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: tag
                          name:
                            description: >-
                              Name of the tag. This is generally a short sentence
                              fragment that
                              fits on a line in the UI for maximum readability. However,
                              it can
                              be longer.
                            type: string
                            example: Stuff to buy
                      example:
                        - gid: '59746'
                          name: Grade A
                    workspace: {}
      responses:
        200:
          description: Successfully updated the specified task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete a task
      description: |-
        A specific, existing task can be deleted by making a DELETE request on
        the URL for that task. Deleted tasks go into the “trash” of the user
        making the delete request. Tasks can be recovered from the trash within a
        period of 30 days; afterward they are completely removed from the system.

        Returns an empty data record.
      tags:
        - Tasks
      operationId: deleteTask
      responses:
        200:
          description: Successfully deleted the specified task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tasks/{task_gid}/duplicate:
    parameters:
      - $ref: '#/components/parameters/task_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Duplicate a task
      description: >-
        Creates and returns a job that will asynchronously handle the duplication.
      tags:
        - Tasks
      operationId: duplicateTask
      requestBody:
        description: >-
          Describes the duplicate's name and the fields that will be duplicated.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    name:
                      description: The name of the new task.
                      type: string
                      example: New Task Name
                    include:
                      description: The fields that will be duplicated to the new task.
                      type: string
                      enum:
                        - notes
                        - assignee
                        - subtasks
                        - attachments
                        - tags
                        - followers
                        - projects
                        - dates
                        - dependencies
                        - parent
                      example:
                        - notes
                        - assignee
      responses:
        201:
          description: Successfully created the job to handle duplication.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /projects/{project_gid}/tasks:
    parameters:
      - $ref: '#/components/parameters/project_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get tasks from a project
      description: >-
        Returns the compact task records for all tasks within the given project,
        ordered by their priority within the project. Tasks can exist in more
        than one project at a time.
      tags:
        - Tasks
      operationId: getProjectTasks
      responses:
        200:
          description: Successfully retrieved the requested project's tasks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /sections/{section_gid}/tasks:
    parameters:
      - $ref: '#/components/parameters/section_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get tasks from a section
      description: >-
        *Board view only*: Returns the compact section records for all tasks
        within the given section.
      tags:
        - Tasks
      operationId: getSectionTasks
      responses:
        200:
          description: >-
            Successfully retrieved the section's tasks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tags/{tag_gid}/tasks:
    parameters:
      - $ref: '#/components/parameters/tag_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get tasks from a tag
      description: >-
        Returns the compact task records for all tasks with the given tag. Tasks
        can have more than one tag at a time.
      tags:
        - Tasks
      operationId: getTagTasks
      responses:
        200:
          description: >-
            Successfully retrieved the tasks associated with the specified tag.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /user_task_lists/{user_task_list_gid}/tasks:
    parameters:
      - name: completed_since
        in: query
        required: false
        description: >
          Only return tasks that are either incomplete or that have
          been completed since this time. Accepts a date-time string or
          the keyword *now*.
        schema:
          type: string
        example: '2012-02-22T02:06:58.158Z'
      - $ref: '#/components/parameters/user_task_list_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get tasks from a user task list
      description: >-
        Returns the compact list of tasks in a user’s My Tasks list.
        The returned tasks will be in order within each assignee status
        group of `Inbox`, `Today`, and `Upcoming`.

        *Note: tasks in `Later` have a different ordering in the Asana
        web app than the other assignee status groups; this endpoint
        will still return them in list order in `Later` (differently
        than they show up in Asana, but the same order as in Asana’s
        mobile apps).*

        *Note: Access control is enforced for this endpoint as with
        all Asana API endpoints, meaning a user’s private tasks will be
        filtered out if the API-authenticated user does not have access
        to them.*

        *Note: Both complete and incomplete tasks are returned by
        default unless they are filtered out (for example, setting
        `completed_since=now` will return only incomplete tasks, which
        is the default view for “My Tasks” in Asana.)*
      tags:
        - User Task Lists
      operationId: getUserTaskListTasks
      responses:
        200:
          description: >-
            Successfully retrieved the user task list's tasks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tasks/{task_gid}/subtasks:
    parameters:
      - $ref: '#/components/parameters/task_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get subtasks from a task
      description: >-
        Returns a compact representation of all of the subtasks of a task.
      tags:
        - Tasks
      operationId: getSubTasks
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        200:
          description: Successfully retrieved the specified task's subtasks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create a subtask
      description: >-
        Creates a new subtask and adds it to the parent task. Returns the full
        record for the newly created subtask.
      tags:
        - Tasks
      operationId: createSubtask
      requestBody:
        description: The new subtask to create.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  description: >-
                    The *task* is the basic object around which many operations in
                    Asana
                    are centered.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: task
                    name:
                      description: >-
                        Name of the task. This is generally a short sentence fragment
                        that
                        fits on a line in the UI for maximum readability. However,
                        it can
                        be longer.
                      type: string
                      example: Buy catnip
                    created_at:
                      description: The time at which this resource was created.
                      type: string
                      format: date-time
                      readOnly: true
                      example: '2012-02-22T02:06:58.147Z'
                    resource_subtype:
                      description: >-
                        The subtype of this resource. Different subtypes retain many
                        of
                        the same fields and behavior, but may render differently in
                        Asana
                        or represent resources with different semantic meaning.

                        The resource_subtype `milestone` represent a single moment
                        in
                        time. This means tasks with this subtype cannot have a start_date.

                        *Note: The resource_subtype of `section` is under active
                        migration—please see our [forum
                        post](https://forum.asana.com/t/sections-are-dead-long-live-sections)
                        for more information.*
                      type: string
                      readOnly: true
                      enum:
                        - default_task
                        - milestone
                        - section
                      example: default_task
                    assignee:
                      type: string
                      readOnly: false
                      x-env-variable: true
                      description: >-
                        Gid of an object.
                      example: '12345'
                    assignee_status:
                      description: >-
                        Scheduling status of this task for the user it is assigned
                        to.
                        This field can only be set if the assignee is non-null.
                      type: string
                      enum:
                        - today
                        - upcoming
                        - later
                        - new
                        - inbox
                      example: upcoming
                    completed:
                      description: >-
                        True if the task is currently marked complete, false if not.
                      type: boolean
                      example: false
                    completed_at:
                      description: >-
                        The time at which this task was completed, or null if the
                        task is
                        incomplete.
                      type: string
                      format: date-time
                      readOnly: true
                      nullable: true
                      example: '2012-02-22T02:06:58.147Z'
                    custom_fields:
                      description: >-
                        Array of custom field values applied to the project. These
                        represent the custom field values recorded on this project
                        for a
                        particular custom field. For example, these custom field values
                        will contain an `enum_value` property for custom fields of
                        type
                        `enum`, a `text_value` property for custom fields of type
                        `text`, and so on. Please note that the `gid` returned on
                        each
                        custom field value *is identical* to the `gid` of the custom
                        field,
                        which allows referencing the custom field metadata through
                        the
                        `/custom_fields/custom_field-gid` endpoint.
                      type: array
                      items:
                        description: >-
                          Custom Fields store the metadata that is used in order to
                          add user-specified information to tasks in Asana. Be sure
                          to reference the [Custom Fields](#asana-custom-fields)
                          developer documentation for more information about how custom
                          fields
                          relate to various resources in Asana.


                          Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields),
                          which will make them read-only when accessed by other users.
                          Attempting to edit a locked custom field will return HTTP
                          error code
                          `403 Forbidden`.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: custom_field
                          name:
                            description: The name of the object.
                            type: string
                            example: Bug Task
                          resource_subtype:
                            description: >
                              The type of the custom field. Must be one of the given
                              values.
                            type: string
                            example: text
                            enum:
                              - text
                              - enum
                              - number
                          type:
                            description: >
                              *Deprecated: new integrations should prefer the resource_subtype
                              field.* The type of the custom field. Must be one of
                              the given
                              values.
                            type: string
                            readOnly: true
                            enum:
                              - text
                              - enum
                              - number
                          enum_options:
                            description: >-
                              *Conditional*. Only relevant for custom fields of type
                              `enum`.
                              This array specifies the possible values which an `enum`
                              custom
                              field can adopt. To modify the enum options, refer to
                              [working
                              with enum
                              options](#create-an-enum-option).
                            type: array
                            items:
                              description: >-
                                Enum options are the possible values which an enum
                                custom field can
                                adopt. An enum custom field must contain at least
                                1 enum option but no
                                more than 50.


                                You can add enum options to a custom field by using
                                the `POST
                                /custom_fields/custom_field_gid/enum_options` endpoint.


                                **It is not possible to remove or delete an enum option**.
                                Instead,
                                enum options can be disabled by updating the `enabled`
                                field to false
                                with the `PUT /enum_options/enum_option_gid` endpoint.
                                Other
                                attributes can be updated similarly.


                                On creation of an enum option, `enabled` is always
                                set to `true`,
                                meaning the enum option is a selectable value for
                                the custom field.
                                Setting `enabled=false` is equivalent to “trashing”
                                the enum option in
                                the Asana web app within the “Edit Fields” dialog.
                                The enum option
                                will no longer be selectable but, if the enum option
                                value was
                                previously set within a task, the task will retain
                                the value.


                                Enum options are an ordered list and by default new
                                enum options are
                                inserted at the end. Ordering in relation to existing
                                enum options can
                                be specified on creation by using `insert_before`
                                or `insert_after` to
                                reference an existing enum option. Only one of `insert_before`
                                and
                                `insert_after` can be provided when creating a new
                                enum option.


                                An enum options list can be reordered with the `POST
                                /custom_fields/custom_field_gid/enum_options/insert`
                                endpoint.
                              type: object
                              properties:
                                gid:
                                  description: >-
                                    Globally unique identifier of the object, as a
                                    string.
                                  type: string
                                  readOnly: true
                                  example: '12345'
                                resource_type:
                                  description: The base type of this resource.
                                  type: string
                                  readOnly: true
                                  example: enum_option
                                name:
                                  description: The name of the enum option.
                                  type: string
                                  example: Low
                                enabled:
                                  description: "The color of the enum option. Defaults\
                                    \ to \u2018none\u2019."
                                  type: boolean
                                  example: true
                                color:
                                  description: >-
                                    Whether or not the enum option is a selectable
                                    value for the
                                    custom field.
                                  type: string
                                  example: blue
                          enum_value: {}
                          enabled:
                            description: >-
                              *Conditional*. Determines if the custom field is enabled
                              or not.
                            type: boolean
                            example: true
                          text_value:
                            description: >-
                              *Conditional*. This string is the value of a text custom
                              field.
                            type: string
                            example: Some Value
                          description:
                            description: >-
                              [Opt
                              In](#input-output-options).
                              The description of the custom field.
                            type: string
                            example: Development team priority
                          precision:
                            description: >-
                              Only relevant for custom fields of type ‘Number’. This
                              field
                              dictates the number of places after the decimal to round
                              to, i.e.
                              0 is integer values, 1 rounds to the nearest tenth,
                              and so on.
                              Must be between 0 and 6, inclusive.
                            type: integer
                            example: 2
                          is_global_to_workspace:
                            description: >-
                              This flag describes whether this custom field is available
                              to
                              every container in the workspace. Before project-specific
                              custom
                              fields, this field was always true.
                            type: boolean
                            example: true
                            readOnly: true
                          has_notifications_enabled:
                            description: >-
                              This flag describes whether a follower of a task with
                              this field
                              should receive inbox notifications from changes to this
                              field.
                            type: boolean
                            example: true
                      readOnly: true
                    dependencies:
                      description: >-
                        [Opt
                        In](#input-output-options).
                        Array of resources referencing tasks that this task depends
                        on.
                        The objects contain only the gid of the dependency.
                      type: array
                      items:
                        type: object
                        properties:
                          gid:
                            type: string
                            example: '1234'
                      readOnly: true
                      example:
                        - gid: '1234'
                        - gid: '4321'
                    dependents:
                      description: >-
                        [Opt
                        In](#input-output-options).
                        Array of resources referencing tasks that depend on this task.
                        The
                        objects contain only the ID of the dependent.
                      type: array
                      items:
                        type: object
                        properties:
                          gid:
                            type: string
                            example: '1234'
                      readOnly: true
                      example:
                        - gid: '1234'
                        - gid: '4321'
                    due_at:
                      description: >-
                        Date and time on which this task is due, or null if the task
                        has
                        no due time. This takes a UTC timestamp and should not be
                        used
                        together with `due_on`.
                      type: string
                      format: date
                      example: '2012-02-22T02:06:58.147Z'
                      nullable: true
                    due_on:
                      description: >-
                        Date on which this task is due, or null if the task has no
                        due
                        date.  This takes a date with `YYYY-MM-DD` format and should
                        not
                        be used together with due_at.
                      type: string
                      format: date
                      example: '2012-03-26'
                      nullable: true
                    external:
                      description: >-
                        *OAuth Required*. *Conditional*. This field is returned only
                        if external values are set or included by using [Opt In]
                        (#input-output-options).

                        The external field allows you to store app-specific metadata
                        on
                        tasks, including a gid that can be used to retrieve tasks
                        and a
                        data blob that can store app-specific character strings. Note
                        that
                        you will need to authenticate with Oauth to access or modify
                        this
                        data. Once an external gid is set, you can use the notation
                        `external:custom_gid` to reference your object anywhere in
                        the API
                        where you may use the original object gid. See the page on
                        Custom
                        External Data for more details.
                      type: object
                      properties:
                        gid:
                          type: string
                          example: '1234'
                        data:
                          type: string
                          example: A blob of information.
                      example:
                        gid: my_gid
                        data: A blob of information
                    followers:
                      description: >-
                        Array of object Gids.
                      type: array
                      readOnly: false
                      items:
                        description: >-
                          Gid of an object.
                        type: string
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: user
                          name:
                            description: >-
                              *Read-only except when same user as requester*. The
                              user’s name.
                            type: string
                            example: Greg Sanchez
                      example:
                        - '12345'
                    html_notes:
                      description: >-
                        [Opt
                        In](#input-output-options).
                        The notes of the text with formatting as HTML.

                        *Note: This field is under active migration—please see our
                        blog
                        post for more information.*
                      type: string
                      example: >-
                        <body>Mittens <em>really</em> likes the stuff from
                        Humboldt.</body>
                    hearted:
                      description: >-
                        *Deprecated - please use liked instead* True if the task is
                        hearted by the authorized user, false if not.
                      type: boolean
                      example: true
                      readOnly: true
                    hearts:
                      description: >-
                        *Deprecated - please use likes instead* Array of users who
                        have
                        hearted this task.
                      type: array
                      items:
                        description: >-
                          A *user* object represents an account in Asana that can
                          be given
                          access to various workspaces, projects, and tasks.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: user
                          name:
                            description: >-
                              *Read-only except when same user as requester*. The
                              user’s name.
                            type: string
                            example: Greg Sanchez
                      readOnly: true
                    is_rendered_as_separator:
                      description: >-
                        [Opt In](#input-output-options).
                        In some contexts tasks can be rendered as a visual separator;
                        for instance, subtasks can appear similar to
                        [sections](#asana-sections) without being true
                        `section` objects. If a `task` object is rendered this way
                        in any
                        context it will have the property `is_rendered_as_separator`
                        set
                        to `true`.<br /><br />*Note: Until the default behavior for
                        our
                        API changes integrations must [opt in to the `new_sections`
                        change]
                        (https://forum.asana.com/t/sections-are-dead-long-live-sections/33951)
                        to modify the `is_rendered_as_separator` property.*
                      type: boolean
                      example: false
                      readOnly: true
                    liked:
                      description: >-
                        True if the task is liked by the authorized user, false if
                        not.
                      type: boolean
                      example: true
                      readOnly: true
                    likes:
                      description: Array of users who have liked this task.
                      type: array
                      items:
                        description: >-
                          A *user* object represents an account in Asana that can
                          be given
                          access to various workspaces, projects, and tasks.
                        type: object
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: user
                          name:
                            description: >-
                              *Read-only except when same user as requester*. The
                              user’s name.
                            type: string
                            example: Greg Sanchez
                      readOnly: true
                    memberships:
                      description: >-
                        *Create-only*. Array of projects this task is associated with
                        and the section it is in. At task creation time, this array
                        can be
                        used to add the task to specific sections. After task creation,
                        these associations can be modified using the `addProject`
                        and
                        `removeProject` endpoints. Note that over time, more types
                        of
                        memberships may be added to this property.
                      type: array
                      readOnly: true
                      items:
                        type: object
                        properties:
                          project:
                            description: >-
                              A *project* represents a prioritized list of tasks in
                              Asana or a board
                              with columns of tasks represented as cards. It exists
                              in a single
                              workspace or organization and is accessible to a subset
                              of users in
                              that workspace or organization, depending on its permissions.
                            type: object
                            properties:
                              gid:
                                description: >-
                                  Globally unique identifier of the object, as a string.
                                type: string
                                readOnly: true
                                example: '12345'
                              resource_type:
                                description: The base type of this resource.
                                type: string
                                readOnly: true
                                example: project
                              name:
                                description: >-
                                  Name of the project. This is generally a short sentence
                                  fragment
                                  that fits on a line in the UI for maximum readability.
                                  However, it
                                  can be longer.
                                type: string
                                example: Stuff to buy
                          section:
                            description: >-
                              A *section* is a subdivision of a project that groups
                              tasks together.
                              It can either be a header above a list of tasks in a
                              list view or a
                              column in a board view of a project.
                            type: object
                            properties:
                              gid:
                                description: >-
                                  Globally unique identifier of the object, as a string.
                                type: string
                                readOnly: true
                                example: '12345'
                              resource_type:
                                description: The base type of this resource.
                                type: string
                                readOnly: true
                                example: section
                              name:
                                description: >-
                                  The name of the section (i.e. the text displayed
                                  as the section
                                  header).
                                type: string
                                example: Next Actions
                    modified_at:
                      description: |-
                        The time at which this task was last modified.

                        *Note: This does not currently reflect any changes in
                        associations such as projects or comments that may have been
                        added or removed from the task.*
                      type: string
                      format: date-time
                      readOnly: true
                      example: '2012-02-22T02:06:58.147Z'
                    notes:
                      description: >-
                        More detailed, free-form textual information associated with
                        the
                        task.
                      type: string
                      example: Mittens really likes the stuff from Humboldt.
                    num_hearts:
                      description: >-
                        *Deprecated - please use likes instead* The number of users
                        who
                        have hearted this task.
                      type: integer
                      example: 5
                      readOnly: true
                    num_likes:
                      description: The number of users who have liked this task.
                      type: integer
                      example: 5
                      readOnly: true
                    num_subtasks:
                      description: >
                        [Opt
                        In](#input-output-options).
                        The number of subtasks on this task.
                      type: integer
                      example: 3
                      readOnly: true
                    parent:
                      readOnly: true
                    projects:
                      description: >-
                        Array of object Gids.
                      type: array
                      readOnly: false
                      items:
                        description: >-
                          Gid of an object.
                        type: string
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: project
                          name:
                            description: >-
                              Name of the project. This is generally a short sentence
                              fragment
                              that fits on a line in the UI for maximum readability.
                              However, it
                              can be longer.
                            type: string
                            example: Stuff to buy
                      example:
                        - '12345'
                    start_on:
                      description: >-
                        The day on which work begins for the task , or null if the
                        task
                        has no start date. This takes a date with `YYYY-MM-DD` format.

                        *Note: `due_on` or `due_at` must be present in the request
                        when
                        setting or unsetting the `start_on` parameter.*
                      type: string
                      nullable: true
                      format: date
                      example: '2012-03-26'
                    tags:
                      description: >-
                        Array of object Gids.
                      type: array
                      readOnly: false
                      items:
                        description: >-
                          Gid of an object.
                        type: string
                        properties:
                          gid:
                            description: >-
                              Globally unique identifier of the object, as a string.
                            type: string
                            readOnly: true
                            example: '12345'
                          resource_type:
                            description: The base type of this resource.
                            type: string
                            readOnly: true
                            example: tag
                          name:
                            description: >-
                              Name of the tag. This is generally a short sentence
                              fragment that
                              fits on a line in the UI for maximum readability. However,
                              it can
                              be longer.
                            type: string
                            example: Stuff to buy
                      example:
                        - '12345'
                    workspace:
                      type: string
                      readOnly: false
                      x-env-variable: true
                      description: >-
                        Gid of an object.
                      example: '12345'
      responses:
        201:
          description: Successfully created the specified subtask.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tasks/{task_gid}/setParent:
    parameters:
      - $ref: '#/components/parameters/task_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Change the parent of a task
      description: >-
        parent, or no parent task at all. Returns an empty data block. When using
        `insert_before` and `insert_after`, at most one of those two options can
        be specified, and they must already be subtasks of the parent.
      tags:
        - Tasks
      operationId: changeSubtaskParent
      requestBody:
        description: The new parent of the subtask.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    parent:
                      description: >-
                        The new parent of the task, or `null` for no parent.
                      type: string
                      example: '987654'
                    insert_after:
                      description: >-
                        A subtask of the parent to insert the task after, or `null`
                        to
                        insert at the beginning of the list.
                      type: string
                      example: 'null'
                    insert_before:
                      description: >-
                        A subtask of the parent to insert the task before, or `null`
                        to
                        insert at the end of the list.
                      type: string
                      example: '124816'
                  required:
                    - parent
      responses:
        200:
          description: Successfully changed the parent of the specified subtask.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tasks/{task_gid}/dependencies:
    parameters:
      - $ref: '#/components/parameters/task_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get dependencies from a task
      description: >-
        Returns the compact representations of all of the dependencies of a task.
      tags:
        - Tasks
      operationId: getTaskDependencies
      responses:
        200:
          description: Successfully retrieved the specified task's dependencies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tasks/{task_gid}/addDependencies:
    parameters:
      - $ref: '#/components/parameters/task_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Set dependencies for a task
      description: >-
        Marks a set of tasks as dependencies of this task, if they are not
        already dependencies. *A task can have at most 15 dependencies*.
      tags:
        - Tasks
      operationId: addTaskDependencies
      requestBody:
        description: The list of tasks to set as dependencies.
        required: true
        content:
          application/json:
            schema:
              description: A set of task dependencies.
              type: object
              properties:
                data:
                  type: object
                  properties:
                    dependencies:
                      description: An array of task gids that a task should depend
                        on.
                      type: array
                      items:
                        type: string
              example:
                data:
                  dependencies:
                    - '133713'
                    - '184253'
      responses:
        200:
          description: Successfully set the specified dependencies on the task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tasks/{task_gid}/removeDependencies:
    parameters:
      - $ref: '#/components/parameters/task_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Unlink dependencies from a task
      description: Unlinks a set of dependencies from this task.
      tags:
        - Tasks
      operationId: removeTaskDependencies
      requestBody:
        description: The list of tasks to unlink as dependencies.
        required: true
        content:
          application/json:
            schema:
              description: A set of task dependencies.
              type: object
              properties:
                data:
                  type: object
                  properties:
                    dependencies:
                      description: An array of task gids that a task should depend
                        on.
                      type: array
                      items:
                        type: string
              example:
                data:
                  dependencies:
                    - '133713'
                    - '184253'
      responses:
        200:
          description: >-
            Successfully unlinked the dependencies from the specified task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tasks/{task_gid}/dependents:
    parameters:
      - $ref: '#/components/parameters/task_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get dependents from a task
      description: >-
        Returns the compact representations of all of the dependents of a task.
      tags:
        - Tasks
      operationId: getTaskDependents
      responses:
        200:
          description: >-
            Successfully retrieved the specified dependents of the task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tasks/{task_gid}/addDependents:
    parameters:
      - $ref: '#/components/parameters/task_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Set dependents for a task
      description: >-
        Marks a set of tasks as dependents of this task, if they are not already
        dependents. *A task can have at most 30 dependents*.
      tags:
        - Tasks
      operationId: addTaskDependents
      requestBody:
        description: The list of tasks to add as dependents.
        required: true
        content:
          application/json:
            schema:
              description: A set of dependent tasks.
              type: object
              properties:
                data:
                  type: object
                  properties:
                    dependents:
                      description: An array of task gids that are dependents of the
                        given task.
                      type: array
                      items:
                        type: string
              example:
                data:
                  dependents:
                    - '133713'
                    - '184253'
      responses:
        200:
          description: >-
            Successfully set the specified dependents on the given task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tasks/{task_gid}/removeDependents:
    parameters:
      - $ref: '#/components/parameters/task_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Unlink dependents from a task
      description: >-
        Unlinks a set of dependents from this task.
      tags:
        - Tasks
      operationId: removeTaskDependents
      requestBody:
        description: The list of tasks to remove as dependents.
        required: true
        content:
          application/json:
            schema:
              description: A set of dependent tasks.
              type: object
              properties:
                data:
                  type: object
                  properties:
                    dependents:
                      description: An array of task gids that are dependents of the
                        given task.
                      type: array
                      items:
                        type: string
              example:
                data:
                  dependents:
                    - '133713'
                    - '184253'
      responses:
        200:
          description: >-
            Successfully unlinked the specified tasks as dependents.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tasks/{task_gid}/addProject:
    parameters:
      - $ref: '#/components/parameters/task_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Add a project to a task
      description: |-
        Adds the task to the specified project, in the optional location
        specified. If no location arguments are given, the task will be added to
        the end of the project.

        `addProject` can also be used to reorder a task within a project or
        section that already contains it.

        At most one of `insert_before`, `insert_after`, or `section` should be
        specified. Inserting into a section in an non-order-dependent way can be
        done by specifying section, otherwise, to insert within a section in a
        particular place, specify `insert_before` or `insert_after` and a task
        within the section to anchor the position of this task.

        Returns an empty data block.
      tags:
        - Tasks
      operationId: addProjectToTask
      requestBody:
        description: The project to add the task to.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    project:
                      description: The project to add the task to.
                      type: string
                      example: '13579'
                    insert_after:
                      description: >-
                        A task in the project to insert the task after, or `null`
                        to insert at the beginning of the list.
                      type: string
                      nullable: true
                      example: '124816'
                    insert_before:
                      description: >-
                        A task in the project to insert the task before, or
                        `null` to insert at the end of the list.
                      type: string
                      nullable: true
                      example: '432134'
                    section:
                      description: >-
                        A section in the project to insert the task into. The
                        task will be inserted at the bottom of the section.
                      type: string
                      nullable: true
                      example: '987654'
                  required:
                    - project
      responses:
        200:
          description: >-
            Successfully added the specified project to the task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tasks/{task_gid}/removeProject:
    parameters:
      - $ref: '#/components/parameters/task_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Remove a project from a task
      description: |-
        Removes the task from the specified project. The task will still exist in
        the system, but it will not be in the project anymore.

        Returns an empty data block.
      tags:
        - Tasks
      operationId: removeProjectFromTask
      requestBody:
        description: The project to remove the task from.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    project:
                      description: The project to remove the task from.
                      type: string
                      example: '13579'
                  required:
                    - project
      responses:
        200:
          description: >-
            Successfully removed the specified project from the task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tasks/{task_gid}/addTag:
    parameters:
      - $ref: '#/components/parameters/task_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Add a tag to a task
      description: >-
        Adds a tag to a task. Returns an empty data block.
      tags:
        - Tasks
      operationId: addTagToTask
      requestBody:
        description: The tag to add to the task.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    tag:
                      description: The tag to add to the task.
                      type: string
                      example: '13579'
                  required:
                    - tag
      responses:
        200:
          description: >-
            Successfully added the specified tag to the task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tasks/{task_gid}/removeTag:
    parameters:
      - $ref: '#/components/parameters/task_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Remove a tag from a task
      description: >-
        Removes a tag from a task. Returns an empty data block.
      tags:
        - Tasks
      operationId: removeTagFromTask
      requestBody:
        description: The tag to remove from the task.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    tag:
                      description: The tag to remove from the task.
                      type: string
                      example: '13579'
                  required:
                    - tag
      responses:
        200:
          description: >-
            Successfully removed the specified tag from the task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tasks/{task_gid}/addFollowers:
    parameters:
      - $ref: '#/components/parameters/task_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Add followers to a task
      description: >-
        Adds a tag to a task. Returns an empty data block.

        Each task can be associated with zero or more followers in the system.

        Requests to add/remove followers, if successful, will return the complete
        updated task record, described above.
      tags:
        - Tasks
      operationId: addFollowerToTask
      requestBody:
        description: The tag to add to the task.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    followers:
                      description: The tag to add to the task.
                      type: array
                      items:
                        type: string
                      example:
                        - '13579'
                        - '321654'
                  required:
                    - followers
      responses:
        200:
          description: >-
            Successfully added the specified tag to the task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /tasks/{task_gid}/removeFollowers:
    parameters:
      - $ref: '#/components/parameters/task_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Remove followers from a task
      description: >-
        Removes each of the specified followers from the task if they are
        following. Returns the complete, updated record for the affected task.
      tags:
        - Tasks
      operationId: removeFollowerToTask
      requestBody:
        description: The tag to remove to the task.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    followers:
                      description: The tag to add to the task.
                      type: array
                      items:
                        type: string
                      example:
                        - '13579'
                        - '321654'
                  required:
                    - followers
      responses:
        200:
          description: >-
            Successfully removed the specified tag to the task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /workspaces/{workspace_gid}/tasks/search:
    parameters:
      - $ref: '#/components/parameters/workspace_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - name: text
        in: query
        description: >-
          Performs full-text search on both task name and description
        schema:
          type: string
        example: Bug
      - name: resource_subtype
        in: query
        description: >-
          Filters results by the task's resource_subtype
        schema:
          type: string
          enum:
            - default_task
            - milestone
          default: milestone
      - name: assignee.any
        in: query
        description: >-
          Comma-separated list of user identifiers
        schema:
          type: string
        example: 12345,23456,34567
      - name: assignee.not
        in: query
        description: >-
          Comma-separated list of user identifiers
        schema:
          type: string
        example: 12345,23456,34567
      - name: assignee_status
        in: query
        description: >-
          One of `inbox`, `today`, `upcoming`, or `later`
        schema:
          type: string
          enum:
            - inbox
            - today
            - upcoming
            - later
        example: later
      - name: projects.any
        in: query
        description: >-
          Comma-separated list of project IDs
        schema:
          type: string
        example: 12345,23456,34567
      - name: projects.not
        in: query
        description: >-
          Comma-separated list of project IDs
        schema:
          type: string
        example: 12345,23456,34567
      - name: projects.all
        in: query
        description: >-
          Comma-separated list of project IDs
        schema:
          type: string
        example: 12345,23456,34567
      - name: sections.any
        in: query
        description: >-
          Comma-separated list of section or column IDs
        schema:
          type: string
        example: 12345,23456,34567
      - name: sections.not
        in: query
        description: >-
          Comma-separated list of section or column IDs
        schema:
          type: string
        example: 12345,23456,34567
      - name: sections.all
        in: query
        description: >-
          Comma-separated list of section or column IDs
        schema:
          type: string
        example: 12345,23456,34567
      - name: tags.any
        in: query
        description: >-
          Comma-separated list of tag IDs
        schema:
          type: string
        example: 12345,23456,34567
      - name: tags.not
        in: query
        description: >-
          Comma-separated list of tag IDs
        schema:
          type: string
        example: 12345,23456,34567
      - name: tags.all
        in: query
        description: >-
          Comma-separated list of tag IDs
        schema:
          type: string
        example: 12345,23456,34567
      - name: teams.any
        in: query
        description: >-
          Comma-separated list of team IDs
        schema:
          type: string
        example: 12345,23456,34567
      - name: followers.any
        in: query
        description: >-
          Comma-separated list of user identifiers
        schema:
          type: string
        example: 12345,23456,34567
      - name: followers.not
        in: query
        description: >-
          Comma-separated list of user identifiers
        schema:
          type: string
        example: 12345,23456,34567
      - name: created_by.any
        in: query
        description: >-
          Comma-separated list of user identifiers
        schema:
          type: string
        example: 12345,23456,34567
      - name: created_by.not
        in: query
        description: >-
          Comma-separated list of user identifiers
        schema:
          type: string
        example: 12345,23456,34567
      - name: assigned_by.any
        in: query
        description: >-
          Comma-separated list of user identifiers
        schema:
          type: string
        example: 12345,23456,34567
      - name: assigned_by.not
        in: query
        description: >-
          Comma-separated list of user identifiers
        schema:
          type: string
        example: 12345,23456,34567
      - name: liked_by.any
        in: query
        description: >-
          Comma-separated list of user identifiers
        schema:
          type: string
        example: 12345,23456,34567
      - name: liked_by.not
        in: query
        description: >-
          Comma-separated list of user identifiers
        schema:
          type: string
        example: 12345,23456,34567
      - name: commented_on_by.any
        in: query
        description: >-
          Comma-separated list of user identifiers
        schema:
          type: string
        example: 12345,23456,34567
      - name: commented_on_by.not
        in: query
        description: >-
          Comma-separated list of user identifiers
        schema:
          type: string
        example: 12345,23456,34567
      - name: due_on.before
        in: query
        description: >-
          ISO 8601 date string
        schema:
          type: string
          format: date
        example: '2019-09-15'
      - name: due_on.after
        in: query
        description: >-
          ISO 8601 date string
        schema:
          type: string
          format: date
        example: '2019-09-15'
      - name: due_on
        in: query
        description: >-
          ISO 8601 date string or `null`
        schema:
          type: string
          format: date
          nullable: true
        example: '2019-09-15'
      - name: due_at.before
        in: query
        description: >-
          ISO 8601 datetime string
        schema:
          type: string
          format: date-time
        example: '2019-04-15T01:01:46.055Z'
      - name: due_at.after
        in: query
        description: >-
          ISO 8601 datetime string
        schema:
          type: string
          format: date-time
        example: '2019-04-15T01:01:46.055Z'
      - name: start_on.before
        in: query
        description: >-
          ISO 8601 date string
        schema:
          type: string
          format: date
        example: '2019-09-15'
      - name: start_on.after
        in: query
        description: >-
          ISO 8601 date string
        schema:
          type: string
          format: date
        example: '2019-09-15'
      - name: start_on
        in: query
        description: >-
          ISO 8601 date string or `null`
        schema:
          type: string
          format: date
          nullable: true
        example: '2019-09-15'
      - name: created_on.before
        in: query
        description: >-
          ISO 8601 date string
        schema:
          type: string
          format: date
        example: '2019-09-15'
      - name: created_on.after
        in: query
        description: >-
          ISO 8601 date string
        schema:
          type: string
          format: date
        example: '2019-09-15'
      - name: created_on
        in: query
        description: >-
          ISO 8601 date string or `null`
        schema:
          type: string
          format: date
          nullable: true
        example: '2019-09-15'
      - name: created_at.before
        in: query
        description: >-
          ISO 8601 datetime string
        schema:
          type: string
          format: date-time
        example: '2019-04-15T01:01:46.055Z'
      - name: created_at.after
        in: query
        description: >-
          ISO 8601 datetime string
        schema:
          type: string
          format: date-time
        example: '2019-04-15T01:01:46.055Z'
      - name: completed_on.before
        in: query
        description: >-
          ISO 8601 date string
        schema:
          type: string
          format: date
        example: '2019-09-15'
      - name: completed_on.after
        in: query
        description: >-
          ISO 8601 date string
        schema:
          type: string
          format: date
        example: '2019-09-15'
      - name: completed_on
        in: query
        description: >-
          ISO 8601 date string or `null`
        schema:
          type: string
          format: date
          nullable: true
        example: '2019-09-15'
      - name: completed_at.before
        in: query
        description: >-
          ISO 8601 datetime string
        schema:
          type: string
          format: date-time
        example: '2019-04-15T01:01:46.055Z'
      - name: completed_at.after
        in: query
        description: >-
          ISO 8601 datetime string
        schema:
          type: string
          format: date-time
        example: '2019-04-15T01:01:46.055Z'
      - name: modified_on.before
        in: query
        description: >-
          ISO 8601 date string
        schema:
          type: string
          format: date
        example: '2019-09-15'
      - name: modified_on.after
        in: query
        description: >-
          ISO 8601 date string
        schema:
          type: string
          format: date
        example: '2019-09-15'
      - name: modified_on
        in: query
        description: >-
          ISO 8601 date string or `null`
        schema:
          type: string
          format: date
          nullable: true
        example: '2019-09-15'
      - name: modified_at.before
        in: query
        description: >-
          ISO 8601 datetime string
        schema:
          type: string
          format: date-time
        example: '2019-04-15T01:01:46.055Z'
      - name: modified_at.after
        in: query
        description: >-
          ISO 8601 datetime string
        schema:
          type: string
          format: date-time
        example: '2019-04-15T01:01:46.055Z'
      - name: is_blocking
        in: query
        description: >-
          Filter to incomplete tasks with dependents
        schema:
          type: boolean
        example: false
      - name: is_blocked
        in: query
        description: >-
          Filter to tasks with incomplete dependencies
        schema:
          type: boolean
        example: false
      - name: has_attachment
        in: query
        description: >-
          Filter to tasks with attachments
        schema:
          type: boolean
        example: false
      - name: completed
        in: query
        description: >-
          Filter to completed tasks
        schema:
          type: boolean
        example: false
      - name: is_subtask
        in: query
        description: >-
          Filter to subtasks
        schema:
          type: boolean
        example: false
      - name: sort_by
        in: query
        description: >-
          One of `due_date`, `created_at`, `completed_at`, `likes`, or
          `modified_at`, defaults to `modified_at`
        schema:
          type: string
          enum:
            - due_date
            - created_at
            - completed_at
            - likes
            - modified_at
          default: modified_at
        example: likes
      - name: sort_ascending
        in: query
        description: >-
          Default `false`
        schema:
          type: boolean
          default: false
        example: true
    get:
      summary: Search tasks in a workspace
      description: >-
        To mirror the functionality of the Asana web app's advanced search feature,
        the Asana API has a task search endpoint that allows you to build complex
        filters to find and retrieve the exact data you need.

        #### Premium access

        Like the Asana web product's advance search feature, this search endpoint
        will
        only be available to premium Asana users. A user is premium if any of the
        following is true:


        - The workspace in which the search is being performed is a premium workspace
        - The user is a member of a premium team inside the workspace


        Even if a user is only a member of a premium team inside a non-premium
        workspace, search will allow them to find data anywhere in the workspace,
        not just inside the premium team. Making a search request using credentials
        of a non-premium user will result in a `402 Payment Required` error.

        #### Pagination

        Search results are not stable; repeating the same query multiple times may
        return the data in a different order, even if the data do not change. Because
        of this, the traditional [pagination](https://developers.asana.com/docs/#pagination)
        available elsewhere in the Asana API is not available here. However, you can
        paginate manually by sorting the search results by their creation time and
        then
        modifying each subsequent query to exclude data you have already seen. Page
        sizes
        are limited to a maximum of 100 items, and can be specified by the `limit`
        query parameter.

        #### Eventual consistency

        Changes in Asana (regardless of whether they’re made though the web product
        or the API) are forwarded to our search infrastructure to be indexed. This
        process can take between 10 and 60 seconds to complete under normal operation,
        and longer during some production incidents. Making a change to a task that
        would alter its presence in a particular search query will not be reflected
        immediately. This is also true of the advanced search feature in the web product.

        #### Rate limits

        You may receive a `429 Too Many Requests` response if you hit any of our
        [rate limits](https://developers.asana.com/docs/#rate-limits).

        #### Custom field parameters

        | Parameter name | Custom field type | Accepted type |

        |---|---|---|

        | custom_fields.{gid}.is_set | All | Boolean |

        | custom_fields.{gid}.value | Text | String |

        | custom_fields.{gid}.value | Number | Number |

        | custom_fields.{gid}.value | Enum | Enum option ID |

        | custom_fields.{gid}.starts_with | Text only | String |

        | custom_fields.{gid}.ends_with | Text only | String |

        | custom_fields.{gid}.contains | Text only | String |

        | custom_fields.{gid}.less_than | Number only | Number |

        | custom_fields.{gid}.greater_than | Number only | Number |



        For example, if the gid of the custom field is 12345, these query parameter
        to
        find tasks where it is set would be `custom_fields.12345.is_set=true`. To
        match
        an exact value for an enum custom field, use the gid of the desired enum option
        and not the name of the enum option: `custom_fields.12345.value=67890`.


        Searching for multiple exact matches of a custom field is not supported.
      tags:
        - Tasks
      operationId: getWorkspaceTasksSearch
      responses:
        200:
          description: >-
            Successfully retrieved the section's tasks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /teams/{team_gid}:
    parameters:
      - $ref: '#/components/parameters/team_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get a team
      description: Returns the full record for a single team.
      tags:
        - Teams
      operationId: getTeam
      responses:
        200:
          description: Successsfully retrieved the record for a single team.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /organizations/{workspace_gid}/teams:
    parameters:
      - $ref: '#/components/parameters/workspace_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get teams in an organization
      description: >-
        Returns the compact records for all teams in the organization visible to
        the authorized user.
      tags:
        - Teams
      operationId: getAllTeams
      responses:
        200:
          description: >-
            Returns the team records for all teams in the organization or
            workspace accessible to the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /users/{user_gid}/teams:
    parameters:
      - $ref: '#/components/parameters/user_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - name: organization_gid
        in: query
        description: The workspace or organization to filter teams on.
        required: true
        schema:
          type: string
        example: '1331'
    get:
      summary: Get teams for a user
      description: >-
        Returns the compact records for all teams to which the given user is assigned.
      tags:
        - Teams
      operationId: getTeamsForUser
      responses:
        200:
          description: >-
            Returns the team records for all teams in the organization or
            workspace to which the given user is assigned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /teams/{team_gid}/addUser:
    parameters:
      - $ref: '#/components/parameters/team_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Add a user to a team
      description: >-
        The user making this call must be a member of the team in order to add
        others. The user being added must exist in the same organization as the
        team.
      tags:
        - Teams
      operationId: addUserToTeam
      requestBody:
        description: The user to add to the team.
        required: true
        content:
          application/json:
            schema:
              description: A user identification object for specification with the
                addUser/removeUser endpoints.
              type: object
              properties:
                data:
                  type: object
                  properties:
                    user:
                      type: string
                      example: '12345'
      responses:
        200:
          description: >-
            Returns the full user record for the added user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /teams/{team_gid}/removeUser:
    parameters:
      - $ref: '#/components/parameters/team_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Remove a user from a team
      description: >-
        The user making this call must be a member of the team in order to remove
        themselves or others.
      tags:
        - Teams
      operationId: removeUserFromTeam
      requestBody:
        description: The user to remove from the team.
        required: true
        content:
          application/json:
            schema:
              description: A user identification object for specification with the
                addUser/removeUser endpoints.
              type: object
              properties:
                data:
                  type: object
                  properties:
                    user:
                      type: string
                      example: '12345'
      responses:
        200:
          description: >-
            Returns an empty data record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /workspaces/{workspace_gid}/typeahead:
    parameters:
      - $ref: '#/components/parameters/workspace_path_gid'
      - name: resource_type
        in: query
        description: >-
          The type of values the typeahead should return. You can choose from one
          of the following: `custom_field`, `project`, `tag`, `task`, and `user`.
          Note that unlike in the names of endpoints, the types listed here are
          in singular form (e.g. `task`). Using multiple types is not yet
          supported.
        required: true
        schema:
          type: string
          enum:
            - custom_field
            - portfolio
            - project
            - tag
            - task
            - user
          default: user
      - name: type
        in: query
        description: >-
          *Deprecated: new integrations should prefer the resource_type field.*
        required: false
        schema:
          type: string
          enum:
            - custom_field
            - portfolio
            - project
            - tag
            - task
            - user
          default: user
      - name: query
        in: query
        description: >-
          The string that will be used to search for relevant objects. If an
          empty string is passed in, the API will currently return an empty
          result set.
        schema:
          type: string
        example: Greg
      - name: count
        in: query
        description: >-
          The number of results to return. The default is 20 if this parameter is
          omitted, with a minimum of 1 and a maximum of 100. If there are fewer
          results found than requested, all will be returned.
        schema:
          type: integer
        example: 20
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get objects via typeahead
      description: |-
        Retrieves objects in the workspace based via an auto-completion/typeahead
        search algorithm. This feature is meant to provide results quickly, so do
        not rely on this API to provide extremely accurate search results. The
        result set is limited to a single page of results with a maximum size, so
        you won’t be able to fetch large numbers of results.

        The typeahead search API provides search for objects from a single
        workspace. This endpoint should be used to query for objects when
        creating an auto-completion/typeahead search feature. This API is meant
        to provide results quickly and should not be relied upon for accurate or
        exhaustive search results. The results sets are limited in size and
        cannot be paginated.

        Queries return a compact representation of each object which is typically
        the gid and name fields. Interested in a specific set of fields or all of
        the fields?! Of course you are. Use field selectors to manipulate what
        data is included in a response.
      tags:
        - Typeahead
      operationId: getTypeahead
      responses:
        200:
          description: >-
            Successfully retrieved objects via a typeahead search algorithm.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsanaObjectArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /user_task_list/{user_task_list_gid}:
    parameters:
      - $ref: '#/components/parameters/user_task_list_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get a user task list
      description: >-
        Returns the full record for a user task list.
      tags:
        - User Task Lists
      operationId: getUserTaskList
      responses:
        200:
          description: >-
            Successfully retrieved the user task list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTaskListObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /users/{user_gid}/user_task_list:
    parameters:
      - $ref: '#/components/parameters/user_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - name: workspace
        in: query
        required: true
        description: >-
          The workspace in which to get the user task list.
        schema:
          type: string
        example: '1234'
    get:
      summary: Get a user's task list
      description: >-
        Returns the full record for a user's task list.
      tags:
        - User Task Lists
      operationId: getUsersTaskList
      responses:
        200:
          description: >-
            Successfully retrieved the user's task list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTaskListObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /users:
    parameters:
      - name: workspace
        in: query
        description: >-
          The workspace or organization ID to filter users on.
        schema:
          type: string
        example: '1331'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get multiple users
      description: >-
        Returns the user records for all users in all workspaces and
        organizations accessible to the authenticated user. Accepts an optional
        workspace ID parameter.

        Results are sorted by user ID.
      tags:
        - Users
      operationId: getAllUsers
      responses:
        200:
          description: >-
            Successfully retrieved the requested user records.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /users/{user_gid}:
    parameters:
      - $ref: '#/components/parameters/user_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get a user
      description: >-
        Returns the full user record for the single user with the provided ID.

        Results are sorted by user ID.
      tags:
        - Users
      operationId: getUser
      responses:
        200:
          description: Returns the user specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /users/{user_gid}/favorites:
    parameters:
      - $ref: '#/components/parameters/user_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - name: resource_type
        in: query
        required: true
        description: >-
          The resource type of favorites to be returned.
        schema:
          type: string
          enum:
            - portfolio
            - project
            - tag
            - task
            - user
          default: project
      - name: workspace
        in: query
        required: true
        description: >-
          The workspace in which to get favorites.
        schema:
          type: string
        example: '1234'
    get:
      summary: Get a user's favorites
      description: >-
        Returns all of a user's favorites in the given workspace, of the given type.

        Results are given in order (The same order as Asana's sidebar).
      tags:
        - Users
      operationId: getUserFavorites
      responses:
        200:
          description: Returns the specified user's favorites.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsanaObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /teams/{team_gid}/users:
    parameters:
      - $ref: '#/components/parameters/team_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get users in a team
      description: >-
        Returns the compact records for all users that are members of the team.
      tags:
        - Users
      operationId: getUsersForTeam
      responses:
        200:
          description: >-
            Returns the user records for all the members of the team, including
            guests and limited access users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /workspaces/{workspace_gid}/users:
    parameters:
      - $ref: '#/components/parameters/workspace_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: >-
        Get users in a workspace or organization
      description: >-
        Returns the user records for all users in the specified workspace or
        organization.

        Results are sorted alphabetically by user names.
      tags:
        - Users
      operationId: getUsersInWorkspace
      responses:
        200:
          description: Return the users in the specified workspace or org.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /webhooks:
    parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: >-
        Get multiple webhooks
      description: >-
        Get the compact representation of all webhooks your app has registered
        for the authenticated user in the given workspace.
      tags:
        - Webhooks
      operationId: getWebhooks
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - name: workspace
          in: query
          required: true
          description: >-
            The workspace to query for webhooks in.
          schema:
            type: string
          example: '1331'
        - name: resource
          in: query
          description: Only return webhooks for the given resource.
          schema:
            type: string
          example: '51648'
      responses:
        200:
          description: Successfully retrieved the requested webhooks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: >-
        Establish a webhook
      description: |-
        Establishing a webhook is a two-part process. First, a simple HTTP POST
        similar to any other resource creation. Since you could have multiple
        webhooks we recommend specifying a unique local id for each target.

        Next comes the confirmation handshake. When a webhook is created, we will
        send a test POST to the target with an `X-Hook-Secret` header as
        described in the [Resthooks Security
        documentation](http://resthooks.org/docs/security/). The target must
        respond with a `200 OK` and a matching `X-Hook-Secret` header to confirm
        that this webhook subscription is indeed expected.

        If you do not acknowledge the webhook’s confirmation handshake it will
        fail to setup, and you will receive an error in response to your attempt
        to create it. This means you need to be able to receive and complete the
        webhook *while* the POST request is in-flight.

        ```
        # Request
        curl -H "Authorization: Bearer <personal_access_token>" \
        -X POST https://app.asana.com/api/1.0/webhooks \
        -d "resource=8675309" \
        -d "target=https://example.com/receive-webhook/7654"
        ```

        ```
        # Handshake sent to https://example.com/
        POST /receive-webhook/7654
        X-Hook-Secret: b537207f20cbfa02357cf448134da559e8bd39d61597dcd5631b8012eae53e81
        ```

        ```
        # Handshake response sent by example.com
        HTTP/1.1 200
        X-Hook-Secret: b537207f20cbfa02357cf448134da559e8bd39d61597dcd5631b8012eae53e81
        ```

        ```
        # Response
        HTTP/1.1 201
        {
          "data": {
            "gid": "43214",
            "resource": {
              "gid": "8675309",
              "name": "Bugs"
            },
            "target": "https://example.com/receive-webhook/7654",
            "active": false,
            "last_success_at": null,
            "last_failure_at": null,
            "last_failure_content": null
          }
        }
        ```
      tags:
        - Webhooks
      operationId: createWebhook
      requestBody:
        description: The webhook workspace and target.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    resource:
                      description: >-
                        A resource ID to subscribe to. The resource can be
                        a task or project.
                      type: string
                      example: '12345'
                    target:
                      description: The URL to receive the HTTP POST.
                      type: string
                      format: uri
                      example: https://example.com/receive-webhook/7654
                  required:
                    - resource
                    - target
      responses:
        201:
          description: Successfully created the requested webhook.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /webhooks/{webhook_gid}:
    parameters:
      - $ref: '#/components/parameters/webhook_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: >-
        Get a webhook
      description: >-
        Returns the full record for the given webhook.
      tags:
        - Webhooks
      operationId: getWebhook
      responses:
        200:
          description: Successfully retrieved the requested webhook.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete a webhook
      description: >-
        This method *permanently* removes a webhook. Note that it may be possible
        to receive a request that was already in flight after deleting the
        webhook, but no further requests will be issued.
      tags:
        - Webhooks
      operationId: deleteWebhook
      responses:
        200:
          description: Successfully retrieved the requested webhook.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /workspace_memberships/{workspace_membership_gid}:
    parameters:
      - $ref: '#/components/parameters/workspace_membership_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get a workspace membership
      description: >-
        Returns the complete workspace record for a single workspace membership.
      tags:
        - Workspace Memberships
      operationId: getWorkspaceMembership
      responses:
        200:
          description: >-
            Successfully retrieved the requested workspace membership.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMembershipObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /users/{user_gid}/workspace_memberships:
    parameters:
      - $ref: '#/components/parameters/user_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get workspace memberships for a user
      description: >-
        Returns the compact workspace membership records for the user.
      tags:
        - Workspace Memberships
      operationId: getWorkspaceMembershipsForUser
      responses:
        200:
          description: >-
            Successfully retrieved the requested user's workspace memberships.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMembershipArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /workspaces/{workspace_gid}/workspace_memberships:
    parameters:
      - $ref: '#/components/parameters/workspace_path_gid'
      - $ref: '#/components/parameters/user_query_param'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get the workspace memberships for a workspace
      description: >-
        Returns the compact workspace membership records for the workspace.
      tags:
        - Workspace Memberships
      operationId: getWorkspaceMembershipsForWorkspace
      responses:
        200:
          description: >-
            Successfully retrieved the requested workspace's memberships.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMembershipArray'
  /workspaces:
    parameters:
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
    get:
      summary: Get multiple workspaces
      description: >-
        Returns the compact records for all workspaces visible to the
        authorized user.
      tags:
        - Workspaces
      operationId: getAllWorkspaces
      responses:
        200:
          description: Return all workspaces visible to the authorized user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceArray'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /workspaces/{workspace_gid}:
    parameters:
      - $ref: '#/components/parameters/workspace_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    get:
      summary: Get a workspace
      description: >-
        Returns the full workspace record for a single workspace.
      tags:
        - Workspaces
      operationId: getWorkspace
      responses:
        200:
          description: Return the full workspace record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update a workspace
      description: >-
        A specific, existing workspace can be updated by making a PUT request
        on the URL for that workspace. Only the fields provided in the data
        block will be updated; any unspecified fields will remain unchanged.

        Currently the only field that can be modified for a workspace is its
        name.

        Returns the complete, updated workspace record.
      tags:
        - Workspaces
      operationId: updateWorkspace
      requestBody:
        description: The workspace object with all updated properties.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  description: >-
                    A *workspace* is the highest-level organizational unit in Asana.
                    All
                    projects and tasks have an associated workspace.
                  type: object
                  properties:
                    gid:
                      description: >-
                        Globally unique identifier of the object, as a string.
                      type: string
                      readOnly: true
                      example: '12345'
                    resource_type:
                      description: The base type of this resource.
                      type: string
                      readOnly: true
                      example: workspace
                    name:
                      description: The name of the object.
                      type: string
                      example: My Company Workspace
                    email_domains:
                      description: The email domains that are associated with this
                        workspace.
                      type: array
                      items:
                        type: string
                        format: uri
                      example:
                        - asana.com
                    is_organization:
                      description: Whether the workspace is an *organization*.
                      type: boolean
                      example: false
      responses:
        200:
          description: Update for the workspace was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /workspaces/{workspace_gid}/addUser:
    parameters:
      - $ref: '#/components/parameters/workspace_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Add a user to a workspace or organization
      description: >-
        Add a user to a workspace or organization.

        The user can be referenced by their globally unique user ID or their
        email address. Returns the full user record for the invited user.
      tags:
        - Workspaces
      operationId: addUserToWorkspace
      requestBody:
        description: The user to add to the workspace.
        required: true
        content:
          application/json:
            schema:
              description: A user identification object for specification with the
                addUser/removeUser endpoints.
              type: object
              properties:
                data:
                  type: object
                  properties:
                    user:
                      type: string
                      example: '12345'
      responses:
        200:
          description: >-
            The user was added successfully to the workspace or organization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /workspaces/{workspace_gid}/removeUser:
    parameters:
      - $ref: '#/components/parameters/workspace_path_gid'
      - $ref: '#/components/parameters/pretty'
      - $ref: '#/components/parameters/fields'
    post:
      summary: Remove a user from a workspace or organization
      description: >-
        Remove a user from a workspace or organization.

        The user making this call must be an admin in the workspace. The user can
        be referenced by their globally unique user ID or their email address.

        Returns an empty data record.
      tags:
        - Workspaces
      operationId: removeUserToWorkspace
      requestBody:
        description: The user to remove from the workspace.
        required: true
        content:
          application/json:
            schema:
              description: A user identification object for specification with the
                addUser/removeUser endpoints.
              type: object
              properties:
                data:
                  type: object
                  properties:
                    user:
                      type: string
                      example: '12345'
      responses:
        200:
          description: >-
            The user was removed successfully to the workspace or organization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyObject'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
