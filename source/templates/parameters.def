<h3 id="{{=data.operationUniqueSlug}}-parameters">Parameters</h3>

|Name|Description|
|---|---|
{{~ data.parameters :p}}{{? p.restrictions !== "read-only"}}|{{= p.in === "query" ? "?" : p.in === "path" ? "/" : "" }}{{=p.name}}<span class="param-type"> {{=p.safeType}}</span>{{= p.required ? '<div class="param-required">required</div>' : ''}}|{{=p.shortDesc || 'none'}}|{{?}}
{{~}}

{{? data.longDescs }}
{{ data.longDescs = false; }}
{{~ data.parameters :p}}
{{? p.shortDesc !== p.description && p.name !== 'opt_pretty' && p.name !== 'opt_fields' &&
  p.name !== 'opt_expand' && p.name !== 'limit' && p.name !== 'offset' && p.name.replaceAll("»","").trim() !== 'data'}}
{{ data.longDescs = true; }}
{{?}}
{{~}}
{{?}}

{{? data.longDescs }}
#### Detailed descriptions
{{~ data.parameters :p}}{{? p.shortDesc !== p.description && p.name !== 'opt_pretty' && p.name !== 'opt_fields' &&
p.name !== 'opt_expand' && p.name !== 'limit' && p.name !== 'offset' && p.name.replaceAll("»","").trim() !== 'data'}}
**{{=p.name.replaceAll("»","").trim()}}**: {{=p.description}}{{?}}
{{~}}
{{?}}

{{~ data.parameters :p}}

{{? p.schema && p.schema.enum }}
{{~ p.schema.enum :e}}
{{ var entry = {}; entry.name = p.name; entry.value = e; data.enums.push(entry); }}
{{~}}
{{?}}

{{? p.schema && p.schema.items && p.schema.items.enum }}
{{~ p.schema.items.enum :e}}
{{ var entry = {}; entry.name = p.name; entry.value = e; data.enums.push(entry); }}
{{~}}
{{?}}

{{~}}

{{? data.enums && data.enums.length }}
#### Enumerated Values

|Parameter|Value|
|---|---|
{{~ data.enums :e}}|{{= e.name.replaceAll("»", "") }}|{{=data.utils.toPrimitive(e.value)}}|
{{~}}
{{?}}
