<!-- Generator: Widdershins v{{=data.widdershins.version}} -->

<hr class="full-line">
<section class="full-section">
<h1 id="{{=data.title_prefix}}">API Reference</h1>

> Scroll down for {{? data.header.language_tabs.length > 1}}code samples, {{?}}example requests and responses.{{? data.header.language_tabs.length > 1}} Select a language for code samples from the tabs above or the mobile navigation menu.{{?}}


<span class="description">
{{? data.api.info && data.api.info.description}}{{=data.api.info.description}}{{?}}
</span>

{{? data.api.servers }}
Base URLs:
{{~data.api.servers :s}}
* <a href="{{=s.url}}">{{=s.url}}</a>
{{ for(var v in s.variables) { }}
    * **{{=v}}** - {{=s.variables[v].description||''}} Default: {{=s.variables[v].default}}
{{? s.variables[v].enum}}
{{~ s.variables[v].enum :e}}
        * {{= e}}
{{~}}
{{?}}
{{ } }}
{{~}}
{{?}}

{{? data.api.info && data.api.info.termsOfService}}<a href="{{=data.api.info.termsOfService}}">Terms of service</a>{{?}}
{{? data.api.info && data.api.info.contact}}{{? data.api.info.contact.email}}Email: <a href="mailto:{{=data.api.info.contact.email}}">{{=data.api.info.contact.name || 'Support'}}</a> {{?}}{{? data.api.info.contact.url}}Web: <a href="{{=data.api.info.contact.url}}">{{= data.api.info.contact.name || 'Support'}}</a> {{?}}{{?}}
</section>{{ for (var r in data.resources) { }}{{ data.resource = data.resources[r]; }}<hr class="full-line">
<section class="full-section">
<a id="asana-{{=data.utils.slugify(r)}}"></a>
<h1 id="{{=data.utils.slugify(r)}}">{{= r}}</h1>

{{ var first = true; }}
<pre class="highlight http tab-http">
<code>{{ for (var m in data.resource.methods) { data.operationUniqueName = m; data.method = data.resource.methods[m]; data.operationUniqueSlug = data.method.slug; data.operation = data.method.operation; }}{{ if (first) { first = false; } else { }}<br>{{ } }}<a href="/docs/{{=data.operationUniqueName.toLowerCase().replaceAll("'","-39-").replaceAll(" ","-")}}"><span class="{{=data.method.verb.toLowerCase()}}-verb">{{=data.method.verb.toUpperCase()}}</span> <span class=""nn>{{=data.method.path}}</span></a>{{ } /* of methods */ }}</code>
</pre>

<span class="description">
{{? data.resource.description }}{{= data.resource.description}}{{?}}
</span>

{{? data.resource.externalDocs}}
<a href="{{=data.resource.externalDocs.url}}">{{=data.resource.externalDocs.description||'External documentation'}}</a>
{{?}}
</section>
{{ for (var m in data.resource.methods) { }}{{ data.operationUniqueName = m; }}{{ data.method = data.resource.methods[m]; }}{{ data.operationUniqueSlug = data.method.slug; }}{{ data.operation = data.method.operation; }}<hr class="half-line">
<section>
{{= data.templates.operation(data) }}
</section>{{ } /* of methods */ }}{{ } /* of resources */ }}{{? data.api.components && data.api.components.schemas }}<hr class="full-line">
<section class="full-section">
# Schemas
<span class="description">
The schema definitions for each object requested or returned from Asana's API. Some fields are not returned by
default and you'll need to use [Input/Output Options](/docs/input-output-options) to include them.
</span>
</section>
{{ for (var s in data.components.schemas) { }}{{ if (!data.api.info['x-docs-schema-whitelist'].includes(s)) { continue; } }}{{ var origSchema = data.components.schemas[s]; }}{{ var schema = data.api.components.schemas[s]; }}<hr>
<section>
<a id="schema{{=s.toLowerCase().replaceAll("response","")}}"></a>
<a id="schema_{{=s.replaceAll("Response","")}}"></a>
<a id="tocS{{=s.toLowerCase().replaceAll("response","")}}"></a>
<a id="tocs{{=s.toLowerCase().replaceAll("response","")}}"></a>
<a id="tocS_{{=s.replaceAll("Response","")}}"></a>
<h2 id="{{=s.replaceAll("Response","").replace(/([a-z0-9])([A-Z])/g, '$1-$2').replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2').toLowerCase()}}">{{=s.replaceAll("Response","")}}</h2>
{{? data.options.yaml }}
```yaml
{{=data.utils.yaml.stringify(data.utils.getSample(schema,data.options,{quiet:true},data.api))}}
{{??}}
```json
{{=data.utils.safejson(data.utils.getSample(schema,data.options,{quiet:true},data.api),null,2).replaceAll('"...": "..."', '...').replaceAll('"..."', '...')}}
{{?}}
```

{{ var enums = []; }}
{{ var enums = []; }}
{{ var blocks = data.utils.schemaToArray(origSchema,-1,{trim:true,join:true},data); }}
{{ for (var block of blocks) {
     for (var p of block.rows) {
       if (p.schema && p.schema.enum) {
         for (var e of p.schema.enum) {
           enums.push({name:p.name,value:e});
         }
       }
     }
   }
}}

{{~ blocks :block}}
{{?s.toLowerCase().endsWith("compact")}}
<span class="description">
A `Compact` object is the same as the [full response object](/docs/tocS_{{=s.replaceAll("Compact","")}}), but with less fields included by default. See
[Input/Output Options](/docs/input-output-options) to include more fields.
</span>
{{??}}
<span class="description">
{{? block.title }}{{= block.title}}{{= '\n\n'}}{{?}}
</span>
{{?}}
{{? block.externalDocs}}
<a href="{{=block.externalDocs.url}}">{{=block.externalDocs.description||'External documentation'}}</a>
{{?}}

{{? block===blocks[0] }}

### Properties
{{?}}

{{? block.rows.length}}|Name|Description|
|---|---|{{?}}
{{~ block.rows :p}}|{{=p.displayName}}<span class="param-type"> {{=p.safeType}}</span>|{{=p.description || 'none'}}|
{{~}}
{{~}}
{{? (blocks[0].rows.length === 0) && (blocks.length === 1) }}
*None*
{{?}}

{{? enums.length > 0 }}

#### Enumerated Values

|Property|Value|
|---|---|
{{~ enums :e}}|{{=e.name}}|{{=data.utils.toPrimitive(e.value)}}|
{{~}}

{{?}}</section>{{ } /* of schemas */ }}

{{?}}

{{#def.footer}}

{{? data.options.discovery}}
{{#def.discovery}}
{{?}}
